; ModuleID = 'Top'

@texSampler1D = external addrspace(1) constant i32
@texSampler2D = external addrspace(1) constant i32
@texSampler3D = external addrspace(1) constant i32
@texSamplerCube = external addrspace(1) constant i32
@shadowSampler1D = external addrspace(1) constant i32
@shadowSampler2D = external addrspace(1) constant i32
@u = external addrspace(1) constant <4 x float>
@blend = external addrspace(1) constant float
@gl_FragColor = internal global <4 x float> zeroinitializer

define void @main() {
entry:
  %mix_retval = alloca <4 x float>
  %assignment_tmp = alloca <4 x float>
  %shadow2DProj_retval28 = alloca <4 x float>
  %shadow2DProj_retval = alloca <4 x float>
  %shadow1DProj_retval26 = alloca <4 x float>
  %shadow1DProj_retval = alloca <4 x float>
  %shadow2D_retval24 = alloca <4 x float>
  %shadow2D_retval = alloca <4 x float>
  %shadow1D_retval22 = alloca <4 x float>
  %shadow1D_retval = alloca <4 x float>
  %textureCube_retval20 = alloca <4 x float>
  %textureCube_retval = alloca <4 x float>
  %texture3DProj_retval18 = alloca <4 x float>
  %texture3DProj_retval = alloca <4 x float>
  %texture3D_retval16 = alloca <4 x float>
  %texture3D_retval = alloca <4 x float>
  %texture2DProj_retval14 = alloca <4 x float>
  %texture2DProj_retval = alloca <4 x float>
  %texture2D_retval11 = alloca <4 x float>
  %texture2D_retval = alloca <4 x float>
  %texture1DProj_retval8 = alloca <4 x float>
  %texture1DProj_retval5 = alloca <4 x float>
  %texture1DProj_retval3 = alloca <4 x float>
  %texture1DProj_retval = alloca <4 x float>
  %texture1D_retval1 = alloca <4 x float>
  %texture1D_retval = alloca <4 x float>
  %color = alloca <4 x float>
  %blendscale = alloca float
  store float 0x3FFC9FBE80000000, float* %blendscale
  store <4 x float> zeroinitializer, <4 x float>* %color
  %0 = load i32 addrspace(1)* @texSampler1D
  %texture1DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float 0x3FFC9FBE80000000)
  store <4 x float> %texture1DTmp, <4 x float>* %texture1D_retval
  %1 = load <4 x float>* %color
  %2 = load <4 x float>* %texture1D_retval
  %3 = fadd <4 x float> %1, %2
  store <4 x float> %3, <4 x float>* %color
  %4 = load i32 addrspace(1)* @texSampler1D
  %texture1DTmp2 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.f32(i32 1, i32 %4, i32 2, float 0x3FFC9FBE80000000, float 2.000000e+000)
  store <4 x float> %texture1DTmp2, <4 x float>* %texture1D_retval1
  %5 = load <4 x float>* %color
  %6 = load <4 x float>* %texture1D_retval1
  %7 = fadd <4 x float> %5, %6
  store <4 x float> %7, <4 x float>* %color
  %8 = load i32 addrspace(1)* @texSampler1D
  %coords2D = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 0)
  %texture1DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 1, i32 %8, i32 1, <2 x float> %coords2D)
  store <4 x float> %texture1DProjTmp, <4 x float>* %texture1DProj_retval
  %9 = load <4 x float>* %color
  %10 = load <4 x float>* %texture1DProj_retval
  %11 = fadd <4 x float> %9, %10
  store <4 x float> %11, <4 x float>* %color
  %12 = load i32 addrspace(1)* @texSampler1D
  %texture1DProjTmp4 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 1, i32 %12, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>)
  store <4 x float> %texture1DProjTmp4, <4 x float>* %texture1DProj_retval3
  %13 = load <4 x float>* %color
  %14 = load <4 x float>* %texture1DProj_retval3
  %15 = fadd <4 x float> %13, %14
  store <4 x float> %15, <4 x float>* %color
  %16 = load i32 addrspace(1)* @texSampler1D
  %coords2D6 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 0)
  %texture1DProjTmp7 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v2f32(i32 1, i32 %16, i32 3, <2 x float> %coords2D6, float 2.000000e+000)
  store <4 x float> %texture1DProjTmp7, <4 x float>* %texture1DProj_retval5
  %17 = load <4 x float>* %color
  %18 = load <4 x float>* %texture1DProj_retval5
  %19 = fadd <4 x float> %17, %18
  store <4 x float> %19, <4 x float>* %color
  %20 = load i32 addrspace(1)* @texSampler1D
  %texture1DProjTmp9 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 1, i32 %20, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  store <4 x float> %texture1DProjTmp9, <4 x float>* %texture1DProj_retval8
  %21 = load <4 x float>* %color
  %22 = load <4 x float>* %texture1DProj_retval8
  %23 = fadd <4 x float> %21, %22
  store <4 x float> %23, <4 x float>* %color
  %24 = load i32 addrspace(1)* @texSampler2D
  %coords2D10 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 0)
  %texture2DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %24, i32 0, <2 x float> %coords2D10)
  store <4 x float> %texture2DTmp, <4 x float>* %texture2D_retval
  %25 = load <4 x float>* %color
  %26 = load <4 x float>* %texture2D_retval
  %27 = fadd <4 x float> %25, %26
  store <4 x float> %27, <4 x float>* %color
  %28 = load i32 addrspace(1)* @texSampler2D
  %coords2D12 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 0)
  %texture2DTmp13 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v2f32(i32 2, i32 %28, i32 2, <2 x float> %coords2D12, float 2.000000e+000)
  store <4 x float> %texture2DTmp13, <4 x float>* %texture2D_retval11
  %29 = load <4 x float>* %color
  %30 = load <4 x float>* %texture2D_retval11
  %31 = fadd <4 x float> %29, %30
  store <4 x float> %31, <4 x float>* %color
  %32 = load i32 addrspace(1)* @texSampler2D
  %texture2DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 2, i32 %32, i32 1, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  store <4 x float> %texture2DProjTmp, <4 x float>* %texture2DProj_retval
  %33 = load <4 x float>* %color
  %34 = load <4 x float>* %texture2DProj_retval
  %35 = fadd <4 x float> %33, %34
  store <4 x float> %35, <4 x float>* %color
  %36 = load i32 addrspace(1)* @texSampler2D
  %texture2DProjTmp15 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 2, i32 %36, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  store <4 x float> %texture2DProjTmp15, <4 x float>* %texture2DProj_retval14
  %37 = load <4 x float>* %color
  %38 = load <4 x float>* %texture2DProj_retval14
  %39 = fadd <4 x float> %37, %38
  store <4 x float> %39, <4 x float>* %color
  %40 = load i32 addrspace(1)* @texSampler3D
  %texture3DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %40, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  store <4 x float> %texture3DTmp, <4 x float>* %texture3D_retval
  %41 = load <4 x float>* %color
  %42 = load <4 x float>* %texture3D_retval
  %43 = fadd <4 x float> %41, %42
  store <4 x float> %43, <4 x float>* %color
  %44 = load i32 addrspace(1)* @texSampler3D
  %texture3DTmp17 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32 3, i32 %44, i32 2, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+000)
  store <4 x float> %texture3DTmp17, <4 x float>* %texture3D_retval16
  %45 = load <4 x float>* %color
  %46 = load <4 x float>* %texture3D_retval16
  %47 = fadd <4 x float> %45, %46
  store <4 x float> %47, <4 x float>* %color
  %48 = load i32 addrspace(1)* @texSampler3D
  %texture3DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %48, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>)
  store <4 x float> %texture3DProjTmp, <4 x float>* %texture3DProj_retval
  %49 = load <4 x float>* %color
  %50 = load <4 x float>* %texture3DProj_retval
  %51 = fadd <4 x float> %49, %50
  store <4 x float> %51, <4 x float>* %color
  %52 = load i32 addrspace(1)* @texSampler3D
  %texture3DProjTmp19 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 3, i32 %52, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  store <4 x float> %texture3DProjTmp19, <4 x float>* %texture3DProj_retval18
  %53 = load <4 x float>* %color
  %54 = load <4 x float>* %texture3DProj_retval18
  %55 = fadd <4 x float> %53, %54
  store <4 x float> %55, <4 x float>* %color
  %56 = load i32 addrspace(1)* @texSamplerCube
  %textureCubeTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 4, i32 %56, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  store <4 x float> %textureCubeTmp, <4 x float>* %textureCube_retval
  %57 = load <4 x float>* %color
  %58 = load <4 x float>* %textureCube_retval
  %59 = fadd <4 x float> %57, %58
  store <4 x float> %59, <4 x float>* %color
  %60 = load i32 addrspace(1)* @texSamplerCube
  %textureCubeTmp21 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32 4, i32 %60, i32 2, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+000)
  store <4 x float> %textureCubeTmp21, <4 x float>* %textureCube_retval20
  %61 = load <4 x float>* %color
  %62 = load <4 x float>* %textureCube_retval20
  %63 = fadd <4 x float> %61, %62
  store <4 x float> %63, <4 x float>* %color
  %64 = load i32 addrspace(1)* @shadowSampler1D
  %shadow1DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 6, i32 %64, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  store <4 x float> %shadow1DTmp, <4 x float>* %shadow1D_retval
  %65 = load <4 x float>* %color
  %66 = load <4 x float>* %shadow1D_retval
  %67 = fadd <4 x float> %65, %66
  store <4 x float> %67, <4 x float>* %color
  %68 = load i32 addrspace(1)* @shadowSampler1D
  %shadow1DTmp23 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32 6, i32 %68, i32 2, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+000)
  store <4 x float> %shadow1DTmp23, <4 x float>* %shadow1D_retval22
  %69 = load <4 x float>* %color
  %70 = load <4 x float>* %shadow1D_retval22
  %71 = fadd <4 x float> %69, %70
  store <4 x float> %71, <4 x float>* %color
  %72 = load i32 addrspace(1)* @shadowSampler2D
  %shadow2DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 7, i32 %72, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  store <4 x float> %shadow2DTmp, <4 x float>* %shadow2D_retval
  %73 = load <4 x float>* %color
  %74 = load <4 x float>* %shadow2D_retval
  %75 = fadd <4 x float> %73, %74
  store <4 x float> %75, <4 x float>* %color
  %76 = load i32 addrspace(1)* @shadowSampler2D
  %shadow2DTmp25 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32 7, i32 %76, i32 2, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+000)
  store <4 x float> %shadow2DTmp25, <4 x float>* %shadow2D_retval24
  %77 = load <4 x float>* %color
  %78 = load <4 x float>* %shadow2D_retval24
  %79 = fadd <4 x float> %77, %78
  store <4 x float> %79, <4 x float>* %color
  %80 = load i32 addrspace(1)* @shadowSampler1D
  %shadow1DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 6, i32 %80, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>)
  store <4 x float> %shadow1DProjTmp, <4 x float>* %shadow1DProj_retval
  %81 = load <4 x float>* %color
  %82 = load <4 x float>* %shadow1DProj_retval
  %83 = fadd <4 x float> %81, %82
  store <4 x float> %83, <4 x float>* %color
  %84 = load i32 addrspace(1)* @shadowSampler1D
  %shadow1DProjTmp27 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 6, i32 %84, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  store <4 x float> %shadow1DProjTmp27, <4 x float>* %shadow1DProj_retval26
  %85 = load <4 x float>* %color
  %86 = load <4 x float>* %shadow1DProj_retval26
  %87 = fadd <4 x float> %85, %86
  store <4 x float> %87, <4 x float>* %color
  %88 = load i32 addrspace(1)* @shadowSampler2D
  %shadow2DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 7, i32 %88, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>)
  store <4 x float> %shadow2DProjTmp, <4 x float>* %shadow2DProj_retval
  %89 = load <4 x float>* %color
  %90 = load <4 x float>* %shadow2DProj_retval
  %91 = fadd <4 x float> %89, %90
  store <4 x float> %91, <4 x float>* %color
  %92 = load i32 addrspace(1)* @shadowSampler2D
  %shadow2DProjTmp29 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 7, i32 %92, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  store <4 x float> %shadow2DProjTmp29, <4 x float>* %shadow2DProj_retval28
  %93 = load <4 x float>* %color
  %94 = load <4 x float>* %shadow2DProj_retval28
  %95 = fadd <4 x float> %93, %94
  store <4 x float> %95, <4 x float>* %assignment_tmp
  %96 = load <4 x float>* %assignment_tmp
  store <4 x float> %96, <4 x float>* %color
  %97 = load <4 x float>* %assignment_tmp
  %98 = load <4 x float> addrspace(1)* @u
  %99 = load float addrspace(1)* @blend
  %100 = load float* %blendscale
  %101 = fmul float %99, %100
  %mix = call <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float> %97, <4 x float> %98, float %101)
  store <4 x float> %mix, <4 x float>* %mix_retval
  %102 = load <4 x float>* %mix_retval
  store <4 x float> %102, <4 x float>* @gl_FragColor
  %103 = load <4 x float>* @gl_FragColor
  call void @llvm.gla.fWriteData.v4f32(i32 0, <4 x float> %103)
  ret void
}

declare <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32, i32, i32, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLod.v4f32.f32(i32, i32, i32, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32) nounwind readonly

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v2f32(i32, i32, i32, <2 x float>, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32, i32, i32, <4 x float>, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32, i32, i32, <3 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32, i32, i32, <3 x float>, float) nounwind readnone

declare <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float>, <4 x float>, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, <4 x float>) nounwind
; ModuleID = 'Top'

@texSampler1D = external addrspace(1) constant i32
@texSampler2D = external addrspace(1) constant i32
@texSampler3D = external addrspace(1) constant i32
@texSamplerCube = external addrspace(1) constant i32
@shadowSampler1D = external addrspace(1) constant i32
@shadowSampler2D = external addrspace(1) constant i32
@u = external addrspace(1) constant <4 x float>
@blend = external addrspace(1) constant float

define void @main() {
entry:
  %0 = load i32 addrspace(1)* @texSampler1D
  %texture1DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float 0x3FFC9FBE80000000)
  %1 = fadd <4 x float> zeroinitializer, %texture1DTmp
  %texture1DTmp2 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.f32(i32 1, i32 %0, i32 2, float 0x3FFC9FBE80000000, float 2.000000e+000)
  %2 = fadd <4 x float> %1, %texture1DTmp2
  %coords2D = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 0)
  %texture1DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 1, i32 %0, i32 1, <2 x float> %coords2D)
  %3 = fadd <4 x float> %2, %texture1DProjTmp
  %texture1DProjTmp4 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 1, i32 %0, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>)
  %4 = fadd <4 x float> %3, %texture1DProjTmp4
  %texture1DProjTmp7 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v2f32(i32 1, i32 %0, i32 3, <2 x float> %coords2D, float 2.000000e+000)
  %5 = fadd <4 x float> %4, %texture1DProjTmp7
  %texture1DProjTmp9 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 1, i32 %0, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  %6 = fadd <4 x float> %5, %texture1DProjTmp9
  %7 = load i32 addrspace(1)* @texSampler2D
  %texture2DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %7, i32 0, <2 x float> %coords2D)
  %8 = fadd <4 x float> %6, %texture2DTmp
  %texture2DTmp13 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v2f32(i32 2, i32 %7, i32 2, <2 x float> %coords2D, float 2.000000e+000)
  %9 = fadd <4 x float> %8, %texture2DTmp13
  %texture2DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 2, i32 %7, i32 1, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %10 = fadd <4 x float> %9, %texture2DProjTmp
  %texture2DProjTmp15 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 2, i32 %7, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  %11 = fadd <4 x float> %10, %texture2DProjTmp15
  %12 = load i32 addrspace(1)* @texSampler3D
  %texture3DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %12, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %13 = fadd <4 x float> %11, %texture3DTmp
  %texture3DTmp17 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32 3, i32 %12, i32 2, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+000)
  %14 = fadd <4 x float> %13, %texture3DTmp17
  %texture3DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %12, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>)
  %15 = fadd <4 x float> %14, %texture3DProjTmp
  %texture3DProjTmp19 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 3, i32 %12, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  %16 = fadd <4 x float> %15, %texture3DProjTmp19
  %17 = load i32 addrspace(1)* @texSamplerCube
  %textureCubeTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 4, i32 %17, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %18 = fadd <4 x float> %16, %textureCubeTmp
  %textureCubeTmp21 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32 4, i32 %17, i32 2, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+000)
  %19 = fadd <4 x float> %18, %textureCubeTmp21
  %20 = load i32 addrspace(1)* @shadowSampler1D
  %shadow1DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 6, i32 %20, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %21 = fadd <4 x float> %19, %shadow1DTmp
  %shadow1DTmp23 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32 6, i32 %20, i32 2, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+000)
  %22 = fadd <4 x float> %21, %shadow1DTmp23
  %23 = load i32 addrspace(1)* @shadowSampler2D
  %shadow2DTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 7, i32 %23, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %24 = fadd <4 x float> %22, %shadow2DTmp
  %shadow2DTmp25 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32 7, i32 %23, i32 2, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+000)
  %25 = fadd <4 x float> %24, %shadow2DTmp25
  %shadow1DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 6, i32 %20, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>)
  %26 = fadd <4 x float> %25, %shadow1DProjTmp
  %shadow1DProjTmp27 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 6, i32 %20, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  %27 = fadd <4 x float> %26, %shadow1DProjTmp27
  %shadow2DProjTmp = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 7, i32 %23, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>)
  %28 = fadd <4 x float> %27, %shadow2DProjTmp
  %shadow2DProjTmp29 = call <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32 7, i32 %23, i32 3, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+000>, float 2.000000e+000)
  %29 = fadd <4 x float> %28, %shadow2DProjTmp29
  %30 = load <4 x float> addrspace(1)* @u
  %31 = load float addrspace(1)* @blend
  %32 = fmul float %31, 0x3FFC9FBE80000000
  %mix = call <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float> %29, <4 x float> %30, float %32)
  call void @llvm.gla.fWriteData.v4f32(i32 0, <4 x float> %mix)
  ret void
}

declare <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32, i32, i32, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLod.v4f32.f32(i32, i32, i32, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32) nounwind readonly

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v2f32(i32, i32, i32, <2 x float>, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v4f32(i32, i32, i32, <4 x float>, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32, i32, i32, <3 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLod.v4f32.v3f32(i32, i32, i32, <3 x float>, float) nounwind readnone

declare <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float>, <4 x float>, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, <4 x float>) nounwind

***Unsupported functionality: sampler type in Bottom IR
compiling texture.frag...
uniform sampler1D texSampler1D ; 
uniform sampler2D texSampler2D ; 
uniform sampler3D texSampler3D ; 
uniform samplerCube texSamplerCube ; 
uniform sampler1DShadow shadowSampler1D ; 
uniform sampler2DShadow shadowSampler2D ; 
uniform float blend ; 
uniform vec2 scale ; 
uniform vec4 u ; 
varying vec2 t ; 
varying vec2 coords2D ; 
void  main (){
float blendscale = 1.789000 ; float bias = 2.000000 ; float lod = 3.000000 ; float coords1D = 1.789000 ; vec3 coords3D = vec3 ( 1.789000 , 2.718000 , 3.453000 ) ; vec4 coords4D = vec4 ( 1.789000 , 2.718000 , 3.453000 , 2.000000 ) ; vec4 color = vec4 ( 0.000000 , 0.000000 , 0.000000 , 0.000000 ) ; color += texture1D ( texSampler1D , coords1D ) ; color += texture1D ( texSampler1D , coords1D , bias ) ; color += texture1DProj ( texSampler1D , coords2D ) ; color += texture1DProj ( texSampler1D , coords4D ) ; color += texture1DProj ( texSampler1D , coords2D , bias ) ; color += texture1DProj ( texSampler1D , coords4D , bias ) ; color += texture2D ( texSampler2D , coords2D ) ; color += texture2D ( texSampler2D , coords2D , bias ) ; color += texture2DProj ( texSampler2D , coords3D ) ; color += texture2DProj ( texSampler2D , coords4D , bias ) ; color += texture3D ( texSampler3D , coords3D ) ; color += texture3D ( texSampler3D , coords3D , bias ) ; color += texture3DProj ( texSampler3D , coords4D ) ; color += texture3DProj ( texSampler3D , coords4D , bias ) ; color += textureCube ( texSamplerCube , coords3D ) ; color += textureCube ( texSamplerCube , coords3D , bias ) ; color += shadow1D ( shadowSampler1D , coords3D ) ; color += shadow1D ( shadowSampler1D , coords3D , bias ) ; color += shadow2D ( shadowSampler2D , coords3D ) ; color += shadow2D ( shadowSampler2D , coords3D , bias ) ; color += shadow1DProj ( shadowSampler1D , coords4D ) ; color += shadow1DProj ( shadowSampler1D , coords4D , bias ) ; color += shadow2DProj ( shadowSampler2D , coords4D ) ; color += shadow2DProj ( shadowSampler2D , coords4D , bias ) ; gl_FragColor = mix ( color , u , blend * blendscale ) ; }



(
(declare (in ) vec2 coords2D)
(declare (in ) vec2 t)
(declare (uniform ) vec4 u)
(declare (uniform ) vec2 scale)
(declare (uniform ) float blend)
(declare (uniform ) sampler2DShadow shadowSampler2D)
(declare (uniform ) sampler1DShadow shadowSampler1D)
(declare (uniform ) samplerCube texSamplerCube)
(declare (uniform ) sampler3D texSampler3D)
(declare (uniform ) sampler2D texSampler2D)
(declare (uniform ) sampler1D texSampler1D)
(declare (in ) vec4 gl_FragCoord)
(declare (in ) bool gl_FrontFacing)
(declare (out ) vec4 gl_FragColor)
(declare (out ) float gl_FragDepth)
(declare (in ) vec4 gl_Color)
(declare (in ) vec4 gl_SecondaryColor)
(declare (in ) float gl_FogFragCoord)
(declare (uniform ) mat4 gl_ModelViewMatrix)
(declare (uniform ) mat4 gl_ProjectionMatrix)
(declare (uniform ) mat4 gl_ModelViewProjectionMatrix)
(declare (uniform ) mat3 gl_NormalMatrix)
(declare (uniform ) mat4 gl_ModelViewMatrixInverse)
(declare (uniform ) mat4 gl_ProjectionMatrixInverse)
(declare (uniform ) mat4 gl_ModelViewProjectionMatrixInverse)
(declare (uniform ) mat4 gl_ModelViewMatrixTranspose)
(declare (uniform ) mat4 gl_ProjectionMatrixTranspose)
(declare (uniform ) mat4 gl_ModelViewProjectionMatrixTranspose)
(declare (uniform ) mat4 gl_ModelViewMatrixInverseTranspose)
(declare (uniform ) mat4 gl_ProjectionMatrixInverseTranspose)
(declare (uniform ) mat4 gl_ModelViewProjectionMatrixInverseTranspose)
(declare (uniform ) float gl_NormalScale)
(declare (uniform ) gl_LightModelParameters gl_LightModel)
(declare () int gl_MaxLights)
(declare () int gl_MaxClipPlanes)
(declare () int gl_MaxTextureUnits)
(declare () int gl_MaxTextureCoords)
(declare () int gl_MaxVertexAttribs)
(declare () int gl_MaxVertexUniformComponents)
(declare () int gl_MaxVaryingFloats)
(declare () int gl_MaxVertexTextureImageUnits)
(declare () int gl_MaxCombinedTextureImageUnits)
(declare () int gl_MaxTextureImageUnits)
(declare () int gl_MaxFragmentUniformComponents)
(declare (uniform ) (array mat4 4) gl_TextureMatrix)
(declare (uniform ) (array mat4 4) gl_TextureMatrixInverse)
(declare (uniform ) (array mat4 4) gl_TextureMatrixTranspose)
(declare (uniform ) (array mat4 4) gl_TextureMatrixInverseTranspose)
(declare (uniform ) gl_DepthRangeParameters gl_DepthRange)
(declare (uniform ) (array vec4 8) gl_ClipPlane)
(declare (uniform ) gl_PointParameters gl_Point)
(declare (uniform ) gl_MaterialParameters gl_FrontMaterial)
(declare (uniform ) gl_MaterialParameters gl_BackMaterial)
(declare (uniform ) (array gl_LightSourceParameters 8) gl_LightSource)
(declare (uniform ) gl_LightModelProducts gl_FrontLightModelProduct)
(declare (uniform ) gl_LightModelProducts gl_BackLightModelProduct)
(declare (uniform ) (array gl_LightProducts 8) gl_FrontLightProduct)
(declare (uniform ) (array gl_LightProducts 8) gl_BackLightProduct)
(declare (uniform ) (array vec4 2) gl_TextureEnvColor)
(declare (uniform ) (array vec4 4) gl_EyePlaneS)
(declare (uniform ) (array vec4 4) gl_EyePlaneT)
(declare (uniform ) (array vec4 4) gl_EyePlaneR)
(declare (uniform ) (array vec4 4) gl_EyePlaneQ)
(declare (uniform ) (array vec4 4) gl_ObjectPlaneS)
(declare (uniform ) (array vec4 4) gl_ObjectPlaneT)
(declare (uniform ) (array vec4 4) gl_ObjectPlaneR)
(declare (uniform ) (array vec4 4) gl_ObjectPlaneQ)
(declare (uniform ) gl_FogParameters gl_Fog)
(declare (in ) (array vec4 0) gl_TexCoord)
(declare () int gl_MaxDrawBuffers)
(declare (out ) (array vec4 2) gl_FragData)
(function main
  (signature void
    (parameters
    )
    (
      (declare () vec4 color)
      (declare () float blendscale)
      (assign (constant bool (1)) (x) (var_ref blendscale)  (constant float (1.789000)) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (constant vec4 (0.000000 0.000000 0.000000 0.000000)) ) 
      (declare (temporary ) vec4 texture1D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture1D_retval)  (call texture1D ((var_ref texSampler1D) (constant float (1.789000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture1D_retval) ) ) 
      (declare (temporary ) vec4 texture1D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture1D_retval)  (call texture1D ((var_ref texSampler1D) (constant float (1.789000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture1D_retval) ) ) 
      (declare (temporary ) vec4 texture1DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture1DProj_retval)  (call texture1DProj ((var_ref texSampler1D) (var_ref coords2D) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture1DProj_retval) ) ) 
      (declare (temporary ) vec4 texture1DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture1DProj_retval)  (call texture1DProj ((var_ref texSampler1D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture1DProj_retval) ) ) 
      (declare (temporary ) vec4 texture1DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture1DProj_retval)  (call texture1DProj ((var_ref texSampler1D) (var_ref coords2D) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture1DProj_retval) ) ) 
      (declare (temporary ) vec4 texture1DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture1DProj_retval)  (call texture1DProj ((var_ref texSampler1D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture1DProj_retval) ) ) 
      (declare (temporary ) vec4 texture2D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture2D_retval)  (call texture2D ((var_ref texSampler2D) (var_ref coords2D) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture2D_retval) ) ) 
      (declare (temporary ) vec4 texture2D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture2D_retval)  (call texture2D ((var_ref texSampler2D) (var_ref coords2D) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture2D_retval) ) ) 
      (declare (temporary ) vec4 texture2DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture2DProj_retval)  (call texture2DProj ((var_ref texSampler2D) (constant vec3 (1.789000 2.718000 3.453000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture2DProj_retval) ) ) 
      (declare (temporary ) vec4 texture2DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture2DProj_retval)  (call texture2DProj ((var_ref texSampler2D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture2DProj_retval) ) ) 
      (declare (temporary ) vec4 texture3D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture3D_retval)  (call texture3D ((var_ref texSampler3D) (constant vec3 (1.789000 2.718000 3.453000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture3D_retval) ) ) 
      (declare (temporary ) vec4 texture3D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture3D_retval)  (call texture3D ((var_ref texSampler3D) (constant vec3 (1.789000 2.718000 3.453000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture3D_retval) ) ) 
      (declare (temporary ) vec4 texture3DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture3DProj_retval)  (call texture3DProj ((var_ref texSampler3D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture3DProj_retval) ) ) 
      (declare (temporary ) vec4 texture3DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref texture3DProj_retval)  (call texture3DProj ((var_ref texSampler3D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref texture3DProj_retval) ) ) 
      (declare (temporary ) vec4 textureCube_retval)
      (assign (constant bool (1)) (xyzw) (var_ref textureCube_retval)  (call textureCube ((var_ref texSamplerCube) (constant vec3 (1.789000 2.718000 3.453000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref textureCube_retval) ) ) 
      (declare (temporary ) vec4 textureCube_retval)
      (assign (constant bool (1)) (xyzw) (var_ref textureCube_retval)  (call textureCube ((var_ref texSamplerCube) (constant vec3 (1.789000 2.718000 3.453000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref textureCube_retval) ) ) 
      (declare (temporary ) vec4 shadow1D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref shadow1D_retval)  (call shadow1D ((var_ref shadowSampler1D) (constant vec3 (1.789000 2.718000 3.453000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref shadow1D_retval) ) ) 
      (declare (temporary ) vec4 shadow1D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref shadow1D_retval)  (call shadow1D ((var_ref shadowSampler1D) (constant vec3 (1.789000 2.718000 3.453000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref shadow1D_retval) ) ) 
      (declare (temporary ) vec4 shadow2D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref shadow2D_retval)  (call shadow2D ((var_ref shadowSampler2D) (constant vec3 (1.789000 2.718000 3.453000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref shadow2D_retval) ) ) 
      (declare (temporary ) vec4 shadow2D_retval)
      (assign (constant bool (1)) (xyzw) (var_ref shadow2D_retval)  (call shadow2D ((var_ref shadowSampler2D) (constant vec3 (1.789000 2.718000 3.453000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref shadow2D_retval) ) ) 
      (declare (temporary ) vec4 shadow1DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref shadow1DProj_retval)  (call shadow1DProj ((var_ref shadowSampler1D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref shadow1DProj_retval) ) ) 
      (declare (temporary ) vec4 shadow1DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref shadow1DProj_retval)  (call shadow1DProj ((var_ref shadowSampler1D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) (constant float (2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref shadow1DProj_retval) ) ) 
      (declare (temporary ) vec4 shadow2DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref shadow2DProj_retval)  (call shadow2DProj ((var_ref shadowSampler2D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (var_ref shadow2DProj_retval) ) ) 
      (declare (temporary ) vec4 shadow2DProj_retval)
      (assign (constant bool (1)) (xyzw) (var_ref shadow2DProj_retval)  (call shadow2DProj ((var_ref shadowSampler2D) (constant vec4 (1.789000 2.718000 3.453000 2.000000)) (constant float (2.000000)) ))
) 
      (declare (temporary ) vec4 assignment_tmp)
      (assign (constant bool (1)) (xyzw) (var_ref assignment_tmp)  (expression vec4 + (var_ref color) (var_ref shadow2DProj_retval) ) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (var_ref assignment_tmp) ) 
      (declare (temporary ) vec4 mix_retval)
      (assign (constant bool (1)) (xyzw) (var_ref mix_retval)  (call mix ((var_ref assignment_tmp) (var_ref u) (expression float * (var_ref blend) (var_ref blendscale) ) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref gl_FragColor)  (var_ref mix_retval) ) 
    ))

)


)