
Top IR:
; ModuleID = 'Top'

@"sampler1D texSampler1D" = external addrspace(1) constant i32
@"sampler2D texSampler2D" = external addrspace(1) constant i32
@"sampler3D texSampler3D" = external addrspace(1) constant i32
@"samplerCube texSamplerCube" = external addrspace(1) constant i32
@"sampler1DShadow shadowSampler1D" = external addrspace(1) constant i32
@"sampler2DShadow shadowSampler2D" = external addrspace(1) constant i32
@Position_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %assignment_tmp = alloca <4 x float>
  %color = alloca <4 x float>
  %0 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %color1 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 132, float 0x3FFC9FBE80000000, float 3.000000e+00, float undef)
  store <4 x float> %color1, <4 x float>* %color
  %1 = load <4 x float>* %color
  %coords2D = call <2 x float> @llvm.gla.fReadData.v2f32(i32 0, i32 -1)
  %2 = extractelement <2 x float> %coords2D, i32 0
  %coords2D2 = call <2 x float> @llvm.gla.fReadData.v2f32(i32 0, i32 -1)
  %3 = extractelement <2 x float> %coords2D2, i32 1
  %4 = fdiv float 1.000000e+00, %3
  %5 = fmul float %2, %4
  %6 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %7 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %6, i32 132, float %5, float 3.000000e+00, float undef)
  %color3 = fadd <4 x float> %1, %7
  store <4 x float> %color3, <4 x float>* %color
  %8 = load <4 x float>* %color
  %9 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %10 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %9, i32 132, float 0x3FEC9FBE80000000, float 3.000000e+00, float undef)
  %color4 = fadd <4 x float> %8, %10
  store <4 x float> %color4, <4 x float>* %color
  %11 = load <4 x float>* %color
  %coords2D5 = call <2 x float> @llvm.gla.fReadData.v2f32(i32 0, i32 -1)
  %12 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %13 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %12, i32 132, <2 x float> %coords2D5, float 3.000000e+00, float undef)
  %color6 = fadd <4 x float> %11, %13
  store <4 x float> %color6, <4 x float>* %color
  %14 = load <4 x float>* %color
  %15 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %15, i32 132, <2 x float> <float 0x3FE09446E0000000, float 0x3FE9304380000000>, float 3.000000e+00, float undef)
  %color7 = fadd <4 x float> %14, %16
  store <4 x float> %color7, <4 x float>* %color
  %17 = load <4 x float>* %color
  %18 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %19 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %18, i32 132, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float 3.000000e+00, float undef)
  %color8 = fadd <4 x float> %17, %19
  store <4 x float> %color8, <4 x float>* %color
  %20 = load <4 x float>* %color
  %21 = load i32 addrspace(1)* @"sampler3D texSampler3D"
  %22 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %21, i32 132, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color9 = fadd <4 x float> %20, %22
  store <4 x float> %color9, <4 x float>* %color
  %23 = load <4 x float>* %color
  %24 = load i32 addrspace(1)* @"sampler3D texSampler3D"
  %25 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %24, i32 132, <3 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000, float 0x3FFB9FBE80000000>, float 3.000000e+00, float undef)
  %color10 = fadd <4 x float> %23, %25
  store <4 x float> %color10, <4 x float>* %color
  %26 = load <4 x float>* %color
  %27 = load i32 addrspace(1)* @"samplerCube texSamplerCube"
  %28 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %27, i32 132, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color11 = fadd <4 x float> %26, %28
  store <4 x float> %color11, <4 x float>* %color
  %29 = load <4 x float>* %color
  %30 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D"
  %31 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %30, i32 2188, float 0x3FFC9FBE80000000, float 3.000000e+00, float 0x400B9FBE80000000)
  %color12 = fadd <4 x float> %29, %31
  store <4 x float> %color12, <4 x float>* %color
  %32 = load <4 x float>* %color
  %33 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D"
  %34 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %33, i32 2188, <2 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000>, float 3.000000e+00, float 0x400B9FBE80000000)
  %color13 = fadd <4 x float> %32, %34
  store <4 x float> %color13, <4 x float>* %color
  %35 = load <4 x float>* %color
  %36 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D"
  %37 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %36, i32 2188, float 0x3FEC9FBE80000000, float 3.000000e+00, float 0x3FFB9FBE80000000)
  %color14 = fadd <4 x float> %35, %37
  store <4 x float> %color14, <4 x float>* %color
  %38 = load <4 x float>* %color
  %39 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D"
  %40 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %39, i32 2188, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float 3.000000e+00, float 0x3FFB9FBE80000000)
  %assignment_tmp15 = fadd <4 x float> %38, %40
  store <4 x float> %assignment_tmp15, <4 x float>* %assignment_tmp
  %color16 = load <4 x float>* %assignment_tmp
  store <4 x float> %color16, <4 x float>* %color
  %Position_shadow = load <4 x float>* %assignment_tmp
  store <4 x float> %Position_shadow, <4 x float>* @Position_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %41 = load <4 x float>* @Position_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %41)
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadData.v2f32(i32, i32) nounwind readonly

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind


Bottom IR:
; ModuleID = 'Top'

@"sampler1D texSampler1D" = external addrspace(1) constant i32
@"sampler2D texSampler2D" = external addrspace(1) constant i32
@"sampler3D texSampler3D" = external addrspace(1) constant i32
@"samplerCube texSamplerCube" = external addrspace(1) constant i32
@"sampler1DShadow shadowSampler1D" = external addrspace(1) constant i32
@"sampler2DShadow shadowSampler2D" = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @"sampler1D texSampler1D", align 4
  %1 = load i32 addrspace(1)* @"sampler2D texSampler2D", align 4
  %2 = load i32 addrspace(1)* @"sampler3D texSampler3D", align 4
  %3 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", align 4
  %4 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", align 4
  %coords2D2 = call <2 x float> @llvm.gla.fReadData.v2f32(i32 0, i32 -1)
  %5 = extractelement <2 x float> %coords2D2, i32 1
  %6 = fdiv float 1.000000e+00, %5
  %7 = extractelement <2 x float> %coords2D2, i32 0
  %8 = fmul float %7, %6
  %9 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 132, float %8, float 3.000000e+00, float undef)
  %color1 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 132, float 0x3FFC9FBE80000000, float 3.000000e+00, float undef)
  %10 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 132, float 0x3FEC9FBE80000000, float 3.000000e+00, float undef)
  %color3 = fadd <4 x float> %color1, %9
  %11 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %1, i32 132, <2 x float> %coords2D2, float 3.000000e+00, float undef)
  %color4 = fadd <4 x float> %color3, %10
  %12 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %1, i32 132, <2 x float> <float 0x3FE09446E0000000, float 0x3FE9304380000000>, float 3.000000e+00, float undef)
  %color6 = fadd <4 x float> %color4, %11
  %13 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %1, i32 132, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float 3.000000e+00, float undef)
  %color7 = fadd <4 x float> %color6, %12
  %14 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %2, i32 132, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color8 = fadd <4 x float> %color7, %13
  %15 = load i32 addrspace(1)* @"samplerCube texSamplerCube", align 4
  %16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %2, i32 132, <3 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000, float 0x3FFB9FBE80000000>, float 3.000000e+00, float undef)
  %color9 = fadd <4 x float> %color8, %14
  %17 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %15, i32 132, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color10 = fadd <4 x float> %color9, %16
  %18 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %3, i32 2188, float 0x3FFC9FBE80000000, float 3.000000e+00, float 0x400B9FBE80000000)
  %color11 = fadd <4 x float> %color10, %17
  %19 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %4, i32 2188, <2 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000>, float 3.000000e+00, float 0x400B9FBE80000000)
  %color12 = fadd <4 x float> %color11, %18
  %20 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %3, i32 2188, float 0x3FEC9FBE80000000, float 3.000000e+00, float 0x3FFB9FBE80000000)
  %color13 = fadd <4 x float> %color12, %19
  %21 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %4, i32 2188, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float 3.000000e+00, float 0x3FFB9FBE80000000)
  %color14 = fadd <4 x float> %color13, %20
  %assignment_tmp15 = fadd <4 x float> %color14, %21
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %assignment_tmp15)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadData.v2f32(i32, i32) nounwind readonly

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind
compiling texture.vert...
uniform sampler1D texSampler1D ; 
uniform sampler2D texSampler2D ; 
uniform sampler3D texSampler3D ; 
uniform samplerCube texSamplerCube ; 
uniform sampler1DShadow shadowSampler1D ; 
uniform sampler2DShadow shadowSampler2D ; 
in vec2 coords2D ; 
void  main (){
float lod = 3.000000 ; float coords1D = 1.789000 ; vec3 coords3D = vec3 ( 1.789000 , 2.718000 , 3.453000 ) ; vec4 coords4D = vec4 ( 1.789000 , 2.718000 , 3.453000 , 2.000000 ) ; vec4 color = vec4 ( 0.000000 , 0.000000 , 0.000000 , 0.000000 ) ; color += texture1DLod ( texSampler1D , coords1D , lod ) ; color += texture1DProjLod ( texSampler1D , coords2D , lod ) ; color += texture1DProjLod ( texSampler1D , coords4D , lod ) ; color += texture2DLod ( texSampler2D , coords2D , lod ) ; color += texture2DProjLod ( texSampler2D , coords3D , lod ) ; color += texture2DProjLod ( texSampler2D , coords4D , lod ) ; color += texture3DLod ( texSampler3D , coords3D , lod ) ; color += texture3DProjLod ( texSampler3D , coords4D , lod ) ; color += textureCubeLod ( texSamplerCube , coords3D , lod ) ; color += shadow1DLod ( shadowSampler1D , coords3D , lod ) ; color += shadow2DLod ( shadowSampler2D , coords3D , lod ) ; color += shadow1DProjLod ( shadowSampler1D , coords4D , lod ) ; color += shadow2DProjLod ( shadowSampler2D , coords4D , lod ) ; gl_Position = color ; }



(
(declare (in ) vec2 coords2D)
(declare (uniform ) sampler2DShadow shadowSampler2D)
(declare (uniform ) sampler1DShadow shadowSampler1D)
(declare (uniform ) samplerCube texSamplerCube)
(declare (uniform ) sampler3D texSampler3D)
(declare (uniform ) sampler2D texSampler2D)
(declare (uniform ) sampler1D texSampler1D)
(declare (out ) vec4 gl_Position)
(function main
  (signature void
    (parameters
    )
    (
      (declare () vec4 color)
      (assign (constant bool (1)) (xyzw) (var_ref color)  (txl (var_ref texSampler1D)  (constant float (1.789000))  (0 0 0) 1 () (constant float (3.000000)) )) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref texSampler1D)  (expression float * (swiz x (var_ref coords2D) )(expression float rcp (swiz y (var_ref coords2D) )) )  (0 0 0) 1 () (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref texSampler1D)  (constant float (0.894500))  (0 0 0) 1 () (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref texSampler2D)  (var_ref coords2D)  (0 0 0) 1 () (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref texSampler2D)  (constant vec2 (0.518100 0.787142))  (0 0 0) 1 () (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref texSampler2D)  (constant vec2 (0.894500 1.359000))  (0 0 0) 1 () (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref texSampler3D)  (constant vec3 (1.789000 2.718000 3.453000))  (0 0 0) 1 () (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref texSampler3D)  (constant vec3 (0.894500 1.359000 1.726500))  (0 0 0) 1 () (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref texSamplerCube)  (constant vec3 (1.789000 2.718000 3.453000))  (0 0 0) 1 () (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref shadowSampler1D)  (constant float (1.789000))  (0 0 0) 1 (constant float (3.453000))  (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref shadowSampler2D)  (constant vec2 (1.789000 2.718000))  (0 0 0) 1 (constant float (3.453000))  (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txl (var_ref shadowSampler1D)  (constant float (0.894500))  (0 0 0) 1 (constant float (1.726500))  (constant float (3.000000)) )) ) 
      (declare (temporary ) vec4 assignment_tmp)
      (assign (constant bool (1)) (xyzw) (var_ref assignment_tmp)  (expression vec4 + (var_ref color) (txl (var_ref shadowSampler2D)  (constant vec2 (0.894500 1.359000))  (0 0 0) 1 (constant float (1.726500))  (constant float (3.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (var_ref assignment_tmp) ) 
      (assign (constant bool (1)) (xyzw) (var_ref gl_Position)  (var_ref assignment_tmp) ) 
    ))

)


)
// LunarGOO output
#version 130
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
in vec2 coords2D2;
const float const22_1f = 1.0;
const float const25_3f = 3.0;
const float const27_2f = 1.789;
const float const29_1f = 0.8945;
const vec2 const34 = vec2(0.5181, 0.787142);
const vec2 const37 = vec2(0.8945, 1.359);
const vec3 const40 = vec3(1.789, 2.718, 3.453);
const vec3 const43 = vec3(0.8945, 1.359, 1.7265);
const float const48_3f = 3.453;
const vec2 const51 = vec2(1.789, 2.718);
const float const54_2f = 1.7265;

void main()
{
    float temp21 = const22_1f / coords2D2.y;
    float temp23 = coords2D2.x * temp21;
    vec4 temp24 = texture1DLod(texSampler1D, temp23, const25_3f);
    vec4 color1 = texture1DLod(texSampler1D, const27_2f, const25_3f);
    vec4 temp28 = texture1DLod(texSampler1D, const29_1f, const25_3f);
    vec4 color3 = color1 + temp24;
    vec4 temp31 = texture2DLod(texSampler2D, coords2D2, const25_3f);
    vec4 color4 = color3 + temp28;
    vec4 temp33 = texture2DLod(texSampler2D, const34, const25_3f);
    vec4 color6 = color4 + temp31;
    vec4 temp36 = texture2DLod(texSampler2D, const37, const25_3f);
    vec4 color7 = color6 + temp33;
    vec4 temp39 = texture3DLod(texSampler3D, const40, const25_3f);
    vec4 color8 = color7 + temp36;
    vec4 temp42 = texture3DLod(texSampler3D, const43, const25_3f);
    vec4 color9 = color8 + temp39;
    vec4 temp45 = textureCubeLod(texSamplerCube, const40, const25_3f);
    vec4 color10 = color9 + temp42;
    vec4 temp47 = shadow1DLod(shadowSampler1D, vec3(const27_2f, 0, const48_3f), const25_3f);
    vec4 color11 = color10 + temp45;
    vec4 temp50 = shadow2DLod(shadowSampler2D, vec3(const51, const48_3f), const25_3f);
    vec4 color12 = color11 + temp47;
    vec4 temp53 = shadow1DLod(shadowSampler1D, vec3(const29_1f, 0, const54_2f), const25_3f);
    vec4 color13 = color12 + temp50;
    vec4 temp56 = shadow2DLod(shadowSampler2D, vec3(const37, const54_2f), const25_3f);
    vec4 color14 = color13 + temp53;
    vec4 assignment_tmp15 = color14 + temp56;
    gl_Position = assignment_tmp15;
    
}
