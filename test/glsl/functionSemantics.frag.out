
Top IR:
; ModuleID = 'Top'

@FragColor_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %assignment_tmp4 = alloca i32
  %assignment_tmp = alloca i32
  %f = alloca i32
  %f_t = alloca <4 x i32>
  %0 = load <4 x i32>* %f_t
  %f_t1 = insertelement <4 x i32> %0, i32 32, i32 1
  store <4 x i32> %f_t1, <4 x i32>* %f_t
  %1 = load <4 x i32>* %f_t
  %f2 = extractelement <4 x i32> %1, i32 1
  store i32 %f2, i32* %f
  %2 = load i32* %f
  %assignment_tmp3 = add i32 15, %2
  store i32 %assignment_tmp3, i32* %assignment_tmp
  %3 = load i32* %f
  %assignment_tmp45 = mul i32 %3, 64
  store i32 %assignment_tmp45, i32* %assignment_tmp4
  %f6 = load i32* %assignment_tmp4
  store i32 %f6, i32* %f
  %4 = load i32* %assignment_tmp4
  %5 = load <4 x i32>* %f_t
  %f_t7 = insertelement <4 x i32> %5, i32 %4, i32 1
  store <4 x i32> %f_t7, <4 x i32>* %f_t
  %6 = load i32* %assignment_tmp
  %7 = load i32* %assignment_tmp4
  %8 = add i32 1984, %7
  %9 = add i32 %6, %8
  %10 = load <4 x i32>* %f_t
  %11 = extractelement <4 x i32> %10, i32 1
  %12 = add i32 1024, %11
  %13 = mul i32 128, %12
  %14 = add i32 %9, %13
  %15 = sitofp i32 %14 to float
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = insertelement <4 x float> %16, float %15, i32 1
  %18 = insertelement <4 x float> %17, float %15, i32 2
  %FragColor_shadow = insertelement <4 x float> %18, float %15, i32 3
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %19 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %19)
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind


Bottom IR:
; ModuleID = 'Top'

define fastcc void @main() {
entry:
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> <float 3.972950e+05, float 3.972950e+05, float 3.972950e+05, float 3.972950e+05>)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind
compiling functionSemantics.frag...
int  foo (int a const int b in int c const in int d out int e inout int f ){
int sum = a + b + c + d + f ; a *= 64 ; c *= 64 ; e = 64 * 16 ; f *= 64 ; sum += a + 64 * b + c + 64 * d + e + f ; return sum ; }

void  main (){
int e ; int t = 2 ; struct s { ivec4 t ; } f ; f . t . y = 32 ; int color = foo ( 1 , 2 , t + t , 8 , e , f . t . y ) ; color += 128 * e + f . t . y ; gl_FragColor = vec4 ( color ) ; }



(
(declare (out ) vec4 gl_FragColor)
(function main
  (signature void
    (parameters
    )
    (
      (declare (temporary ) ivec4 f_t)
      (assign (constant bool (1)) (y) (var_ref f_t)  (constant int (32)) ) 
      (declare () int f)
      (assign (constant bool (1)) (x) (var_ref f)  (swiz y (var_ref f_t) )) 
      (declare (temporary ) int assignment_tmp)
      (assign (constant bool (1)) (x) (var_ref assignment_tmp)  (expression int + (constant int (15)) (var_ref f) ) ) 
      (declare (temporary ) int assignment_tmp)
      (assign (constant bool (1)) (x) (var_ref assignment_tmp)  (expression int * (var_ref f) (constant int (64)) ) ) 
      (assign (constant bool (1)) (x) (var_ref f)  (var_ref assignment_tmp) ) 
      (assign (constant bool (1)) (y) (var_ref f_t)  (var_ref assignment_tmp) ) 
      (assign (constant bool (1)) (xyzw) (var_ref gl_FragColor)  (swiz xxxx (expression float i2f (expression int + (expression int + (var_ref assignment_tmp) (expression int + (constant int (1984)) (var_ref assignment_tmp) ) ) (expression int * (constant int (128)) (expression int + (constant int (1024)) (swiz y (var_ref f_t) )) ) ) ) )) 
    ))

)


)
// LunarGOO output
#version 130
const vec4 const21 = vec4(397295.0);

void main()
{
    gl_FragColor = const21;
    
}
