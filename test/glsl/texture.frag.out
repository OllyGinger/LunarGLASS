
Top IR:
; ModuleID = 'Top'

@"sampler1D texSampler1D" = external addrspace(1) constant i32
@"sampler2D texSampler2D" = external addrspace(1) constant i32
@"sampler3D texSampler3D" = external addrspace(1) constant i32
@"samplerCube texSamplerCube" = external addrspace(1) constant i32
@"sampler1DShadow shadowSampler1D" = external addrspace(1) constant i32
@"sampler2DShadow shadowSampler2D" = external addrspace(1) constant i32
@u = external addrspace(2) constant <4 x float>
@blend = external addrspace(2) constant float
@gl_FragColor = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %mix_retval = alloca <4 x float>
  %assignment_tmp = alloca <4 x float>
  %vec_ctor = alloca <3 x float>
  %_ret_val33 = alloca <2 x float>
  %_ret_val = alloca <2 x float>
  %color = alloca <4 x float>
  %0 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %color1 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float 0x3FFC9FBE80000000)
  store <4 x float> %color1, <4 x float>* %color
  %1 = load <4 x float>* %color
  %2 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %3 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %2, i32 130, float 0x3FFC9FBE80000000, float 2.000000e+00, float undef)
  %color2 = fadd <4 x float> %1, %3
  store <4 x float> %color2, <4 x float>* %color
  %4 = load <4 x float>* %color
  %coords2D = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %5 = extractelement <2 x float> %coords2D, i32 0
  %coords2D3 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %6 = extractelement <2 x float> %coords2D3, i32 1
  %7 = fdiv float 1.000000e+00, %6
  %8 = fmul float %5, %7
  %9 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %10 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %9, i32 0, float %8)
  %color4 = fadd <4 x float> %4, %10
  store <4 x float> %color4, <4 x float>* %color
  %11 = load <4 x float>* %color
  %12 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %13 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %12, i32 0, float 0x3FEC9FBE80000000)
  %color5 = fadd <4 x float> %11, %13
  store <4 x float> %color5, <4 x float>* %color
  %14 = load <4 x float>* %color
  %coords2D6 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %15 = extractelement <2 x float> %coords2D6, i32 0
  %coords2D7 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %16 = extractelement <2 x float> %coords2D7, i32 1
  %17 = fdiv float 1.000000e+00, %16
  %18 = fmul float %15, %17
  %19 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %20 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %19, i32 130, float %18, float 2.000000e+00, float undef)
  %color8 = fadd <4 x float> %14, %20
  store <4 x float> %color8, <4 x float>* %color
  %21 = load <4 x float>* %color
  %22 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %23 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %22, i32 130, float 0x3FEC9FBE80000000, float 2.000000e+00, float undef)
  %color9 = fadd <4 x float> %21, %23
  store <4 x float> %color9, <4 x float>* %color
  %24 = load <4 x float>* %color
  %coords2D10 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %25 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %26 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %25, i32 0, <2 x float> %coords2D10)
  %color11 = fadd <4 x float> %24, %26
  store <4 x float> %color11, <4 x float>* %color
  %27 = load <4 x float>* %color
  %coords2D12 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %28 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %29 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %28, i32 130, <2 x float> %coords2D12, float 2.000000e+00, float undef)
  %color13 = fadd <4 x float> %27, %29
  store <4 x float> %color13, <4 x float>* %color
  %30 = load <4 x float>* %color
  %31 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %32 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %31, i32 0, <2 x float> <float 0x3FE09446E0000000, float 0x3FE9304380000000>)
  %color14 = fadd <4 x float> %30, %32
  store <4 x float> %color14, <4 x float>* %color
  %33 = load <4 x float>* %color
  %34 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %35 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %34, i32 130, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float 2.000000e+00, float undef)
  %color15 = fadd <4 x float> %33, %35
  store <4 x float> %color15, <4 x float>* %color
  %36 = load <4 x float>* %color
  %37 = load i32 addrspace(1)* @"sampler3D texSampler3D"
  %38 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %37, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color16 = fadd <4 x float> %36, %38
  store <4 x float> %color16, <4 x float>* %color
  %39 = load <4 x float>* %color
  %40 = load i32 addrspace(1)* @"sampler3D texSampler3D"
  %41 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %40, i32 130, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color17 = fadd <4 x float> %39, %41
  store <4 x float> %color17, <4 x float>* %color
  %42 = load <4 x float>* %color
  %43 = load i32 addrspace(1)* @"sampler3D texSampler3D"
  %44 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %43, i32 0, <3 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000, float 0x3FFB9FBE80000000>)
  %color18 = fadd <4 x float> %42, %44
  store <4 x float> %color18, <4 x float>* %color
  %45 = load <4 x float>* %color
  %46 = load i32 addrspace(1)* @"sampler3D texSampler3D"
  %47 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %46, i32 130, <3 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000, float 0x3FFB9FBE80000000>, float 2.000000e+00, float undef)
  %color19 = fadd <4 x float> %45, %47
  store <4 x float> %color19, <4 x float>* %color
  %48 = load <4 x float>* %color
  %49 = load i32 addrspace(1)* @"samplerCube texSamplerCube"
  %50 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 4, i32 %49, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color20 = fadd <4 x float> %48, %50
  store <4 x float> %color20, <4 x float>* %color
  %51 = load <4 x float>* %color
  %52 = load i32 addrspace(1)* @"samplerCube texSamplerCube"
  %53 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %52, i32 130, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color21 = fadd <4 x float> %51, %53
  store <4 x float> %color21, <4 x float>* %color
  %54 = load <4 x float>* %color
  %55 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D"
  %56 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %55, i32 2056, float 0x3FFC9FBE80000000, float undef, float 0x400B9FBE80000000)
  %color22 = fadd <4 x float> %54, %56
  store <4 x float> %color22, <4 x float>* %color
  %57 = load <4 x float>* %color
  %58 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D"
  %59 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %58, i32 2186, float 0x3FFC9FBE80000000, float 2.000000e+00, float 0x400B9FBE80000000)
  %color23 = fadd <4 x float> %57, %59
  store <4 x float> %color23, <4 x float>* %color
  %60 = load <4 x float>* %color
  %61 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D"
  %62 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %61, i32 2056, <2 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000>, float undef, float 0x400B9FBE80000000)
  %color24 = fadd <4 x float> %60, %62
  store <4 x float> %color24, <4 x float>* %color
  %63 = load <4 x float>* %color
  %64 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D"
  %65 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %64, i32 2186, <2 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000>, float 2.000000e+00, float 0x400B9FBE80000000)
  %color25 = fadd <4 x float> %63, %65
  store <4 x float> %color25, <4 x float>* %color
  %66 = load <4 x float>* %color
  %67 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D"
  %68 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %67, i32 2056, float 0x3FEC9FBE80000000, float undef, float 0x3FFB9FBE80000000)
  %color26 = fadd <4 x float> %66, %68
  store <4 x float> %color26, <4 x float>* %color
  %69 = load <4 x float>* %color
  %70 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D"
  %71 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %70, i32 2186, float 0x3FEC9FBE80000000, float 2.000000e+00, float 0x3FFB9FBE80000000)
  %color27 = fadd <4 x float> %69, %71
  store <4 x float> %color27, <4 x float>* %color
  %72 = load <4 x float>* %color
  %73 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D"
  %74 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %73, i32 2056, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float undef, float 0x3FFB9FBE80000000)
  %color28 = fadd <4 x float> %72, %74
  store <4 x float> %color28, <4 x float>* %color
  %75 = load <4 x float>* %color
  %76 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D"
  %77 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %76, i32 2186, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float 2.000000e+00, float 0x3FFB9FBE80000000)
  %color29 = fadd <4 x float> %75, %77
  store <4 x float> %color29, <4 x float>* %color
  %78 = load <4 x float>* %color
  %79 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %80 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32 2, i32 %79, i32 160, <2 x i32> <i32 0, i32 5>, i32 1, float undef, i32 undef)
  %color30 = fadd <4 x float> %78, %80
  store <4 x float> %color30, <4 x float>* %color
  %coords2D31 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %_ret_val32 = call <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float> %coords2D31)
  store <2 x float> %_ret_val32, <2 x float>* %_ret_val
  %coords2D34 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %_ret_val3335 = call <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float> %coords2D34)
  store <2 x float> %_ret_val3335, <2 x float>* %_ret_val33
  %81 = load <4 x float>* %color
  %coords2D36 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %82 = load <2 x float>* %_ret_val
  %83 = load <2 x float>* %_ret_val33
  %84 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %85 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32 2, i32 %84, i32 0, <2 x float> %coords2D36, float undef, float undef, i32 undef, <2 x float> %82, <2 x float> %83)
  %color37 = fadd <4 x float> %81, %85
  store <4 x float> %color37, <4 x float>* %color
  %coords2D38 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %86 = load <3 x float>* %vec_ctor
  %87 = extractelement <2 x float> %coords2D38, i32 0
  %88 = insertelement <3 x float> %86, float %87, i32 0
  %89 = extractelement <2 x float> %coords2D38, i32 1
  %vec_ctor39 = insertelement <3 x float> %88, float %89, i32 1
  store <3 x float> %vec_ctor39, <3 x float>* %vec_ctor
  %90 = load <3 x float>* %vec_ctor
  %vec_ctor40 = insertelement <3 x float> %90, float 2.000000e+00, i32 2
  store <3 x float> %vec_ctor40, <3 x float>* %vec_ctor
  %91 = load <4 x float>* %color
  %92 = load <3 x float>* %vec_ctor
  %93 = extractelement <3 x float> %92, i32 0
  %94 = insertelement <2 x float> undef, float %93, i32 0
  %95 = extractelement <3 x float> %92, i32 1
  %96 = insertelement <2 x float> %94, float %95, i32 1
  %97 = fmul <2 x float> %96, <float 5.000000e-01, float 5.000000e-01>
  %98 = load <2 x float>* %_ret_val
  %99 = load <2 x float>* %_ret_val33
  %100 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %101 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32 2, i32 %100, i32 0, <2 x float> %97, float undef, float undef, i32 undef, <2 x float> %98, <2 x float> %99)
  %assignment_tmp41 = fadd <4 x float> %91, %101
  store <4 x float> %assignment_tmp41, <4 x float>* %assignment_tmp
  %color42 = load <4 x float>* %assignment_tmp
  store <4 x float> %color42, <4 x float>* %color
  %102 = load <4 x float>* %assignment_tmp
  %103 = load <4 x float> addrspace(2)* @u
  %104 = load float addrspace(2)* @blend
  %105 = fmul float %104, 0x3FFC9FBE80000000
  %mix_retval43 = call <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float> %102, <4 x float> %103, float %105)
  store <4 x float> %mix_retval43, <4 x float>* %mix_retval
  %gl_FragColor = load <4 x float>* %mix_retval
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %106 = load <4 x float>* @gl_FragColor
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %106)
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32, i32, i32, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32, i32, i32, <3 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32, i32, i32, <2 x i32>, i32, float, i32) nounwind readnone

declare <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float>) nounwind readnone

declare <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float>, <4 x float>, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind


Bottom IR:
; ModuleID = 'Top'

@"sampler1D texSampler1D" = external addrspace(1) constant i32
@"sampler2D texSampler2D" = external addrspace(1) constant i32
@"sampler3D texSampler3D" = external addrspace(1) constant i32
@"samplerCube texSamplerCube" = external addrspace(1) constant i32
@"sampler1DShadow shadowSampler1D" = external addrspace(1) constant i32
@"sampler2DShadow shadowSampler2D" = external addrspace(1) constant i32
@u = external addrspace(2) constant <4 x float>
@blend = external addrspace(2) constant float

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @"sampler1D texSampler1D"
  %1 = load i32 addrspace(1)* @"sampler2D texSampler2D"
  %2 = load i32 addrspace(1)* @"sampler3D texSampler3D"
  %3 = load i32 addrspace(1)* @"samplerCube texSamplerCube"
  %4 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D"
  %5 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D"
  %coords2D31 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %_ret_val32 = call <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float> %coords2D31)
  %_ret_val3335 = call <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float> %coords2D31)
  %6 = extractelement <2 x float> %coords2D31, i32 1
  %7 = fdiv float 1.000000e+00, %6
  %8 = extractelement <2 x float> %coords2D31, i32 0
  %9 = fmul float %8, %7
  %10 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 130, float 0x3FFC9FBE80000000, float 2.000000e+00, float undef)
  %color1 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float 0x3FFC9FBE80000000)
  %11 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float %9)
  %color2 = fadd <4 x float> %color1, %10
  %12 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float 0x3FEC9FBE80000000)
  %color4 = fadd <4 x float> %color2, %11
  %13 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 130, float %9, float 2.000000e+00, float undef)
  %color5 = fadd <4 x float> %color4, %12
  %14 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 130, float 0x3FEC9FBE80000000, float 2.000000e+00, float undef)
  %color8 = fadd <4 x float> %color5, %13
  %15 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %1, i32 0, <2 x float> %coords2D31)
  %color9 = fadd <4 x float> %color8, %14
  %16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %1, i32 130, <2 x float> %coords2D31, float 2.000000e+00, float undef)
  %color11 = fadd <4 x float> %color9, %15
  %17 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %1, i32 0, <2 x float> <float 0x3FE09446E0000000, float 0x3FE9304380000000>)
  %color13 = fadd <4 x float> %color11, %16
  %18 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %1, i32 130, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float 2.000000e+00, float undef)
  %color14 = fadd <4 x float> %color13, %17
  %19 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %2, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color15 = fadd <4 x float> %color14, %18
  %20 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %2, i32 130, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color16 = fadd <4 x float> %color15, %19
  %21 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %2, i32 0, <3 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000, float 0x3FFB9FBE80000000>)
  %color17 = fadd <4 x float> %color16, %20
  %22 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %2, i32 130, <3 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000, float 0x3FFB9FBE80000000>, float 2.000000e+00, float undef)
  %color18 = fadd <4 x float> %color17, %21
  %23 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 4, i32 %3, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color19 = fadd <4 x float> %color18, %22
  %24 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %3, i32 130, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color20 = fadd <4 x float> %color19, %23
  %25 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %4, i32 2056, float 0x3FFC9FBE80000000, float undef, float 0x400B9FBE80000000)
  %color21 = fadd <4 x float> %color20, %24
  %26 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %4, i32 2186, float 0x3FFC9FBE80000000, float 2.000000e+00, float 0x400B9FBE80000000)
  %color22 = fadd <4 x float> %color21, %25
  %27 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %5, i32 2056, <2 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000>, float undef, float 0x400B9FBE80000000)
  %color23 = fadd <4 x float> %color22, %26
  %28 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %5, i32 2186, <2 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000>, float 2.000000e+00, float 0x400B9FBE80000000)
  %color24 = fadd <4 x float> %color23, %27
  %29 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %4, i32 2056, float 0x3FEC9FBE80000000, float undef, float 0x3FFB9FBE80000000)
  %color25 = fadd <4 x float> %color24, %28
  %30 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %4, i32 2186, float 0x3FEC9FBE80000000, float 2.000000e+00, float 0x3FFB9FBE80000000)
  %color26 = fadd <4 x float> %color25, %29
  %31 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %5, i32 2056, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float undef, float 0x3FFB9FBE80000000)
  %color27 = fadd <4 x float> %color26, %30
  %32 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %5, i32 2186, <2 x float> <float 0x3FEC9FBE80000000, float 0x3FF5BE76C0000000>, float 2.000000e+00, float 0x3FFB9FBE80000000)
  %color28 = fadd <4 x float> %color27, %31
  %33 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32 2, i32 %1, i32 160, <2 x i32> <i32 0, i32 5>, i32 1, float undef, i32 undef)
  %color29 = fadd <4 x float> %color28, %32
  %34 = fmul <2 x float> %coords2D31, <float 5.000000e-01, float 5.000000e-01>
  %35 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32 2, i32 %1, i32 0, <2 x float> %coords2D31, float undef, float undef, i32 undef, <2 x float> %_ret_val32, <2 x float> %_ret_val3335)
  %color30 = fadd <4 x float> %color29, %33
  %36 = load float addrspace(2)* @blend
  %37 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32 2, i32 %1, i32 0, <2 x float> %34, float undef, float undef, i32 undef, <2 x float> %_ret_val32, <2 x float> %_ret_val3335)
  %color37 = fadd <4 x float> %color30, %35
  %38 = fmul float %36, 0x3FFC9FBE80000000
  %39 = load <4 x float> addrspace(2)* @u
  %assignment_tmp41 = fadd <4 x float> %color37, %37
  %mix_retval43 = call <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float> %assignment_tmp41, <4 x float> %39, float %38)
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %mix_retval43)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32, i32, i32, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32, i32, i32, <3 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32, i32, i32, <2 x i32>, i32, float, i32) nounwind readnone

declare <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float>) nounwind readnone

declare <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float>, <4 x float>, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind
compiling texture.frag...
uniform sampler1D texSampler1D ; 
uniform sampler2D texSampler2D ; 
uniform sampler3D texSampler3D ; 
uniform samplerCube texSamplerCube ; 
uniform sampler1DShadow shadowSampler1D ; 
uniform sampler2DShadow shadowSampler2D ; 
uniform float blend ; 
uniform vec2 scale ; 
uniform vec4 u ; 
varying vec2 t ; 
varying vec2 coords2D ; 
void  main (){
float blendscale = 1.789000 ; float bias = 2.000000 ; float lod = 3.000000 ; float proj = 2.000000 ; float coords1D = 1.789000 ; vec3 coords3D = vec3 ( 1.789000 , 2.718000 , 3.453000 ) ; vec4 coords4D = vec4 ( 1.789000 , 2.718000 , 3.453000 , 2.000000 ) ; vec4 color = vec4 ( 0.000000 , 0.000000 , 0.000000 , 0.000000 ) ; color += texture1D ( texSampler1D , coords1D ) ; color += texture1D ( texSampler1D , coords1D , bias ) ; color += texture1DProj ( texSampler1D , coords2D ) ; color += texture1DProj ( texSampler1D , coords4D ) ; color += texture1DProj ( texSampler1D , coords2D , bias ) ; color += texture1DProj ( texSampler1D , coords4D , bias ) ; color += texture2D ( texSampler2D , coords2D ) ; color += texture2D ( texSampler2D , coords2D , bias ) ; color += texture2DProj ( texSampler2D , coords3D ) ; color += texture2DProj ( texSampler2D , coords4D , bias ) ; color += texture3D ( texSampler3D , coords3D ) ; color += texture3D ( texSampler3D , coords3D , bias ) ; color += texture3DProj ( texSampler3D , coords4D ) ; color += texture3DProj ( texSampler3D , coords4D , bias ) ; color += textureCube ( texSamplerCube , coords3D ) ; color += textureCube ( texSamplerCube , coords3D , bias ) ; color += shadow1D ( shadowSampler1D , coords3D ) ; color += shadow1D ( shadowSampler1D , coords3D , bias ) ; color += shadow2D ( shadowSampler2D , coords3D ) ; color += shadow2D ( shadowSampler2D , coords3D , bias ) ; color += shadow1DProj ( shadowSampler1D , coords4D ) ; color += shadow1DProj ( shadowSampler1D , coords4D , bias ) ; color += shadow2DProj ( shadowSampler2D , coords4D ) ; color += shadow2DProj ( shadowSampler2D , coords4D , bias ) ; ivec2 iCoords2D = ivec2 ( 0 , 5 ) ; int iLod = 1 ; color += texelFetch ( texSampler2D , iCoords2D , iLod ) ; vec2 gradX = dFdx ( coords2D ) ; vec2 gradY = dFdy ( coords2D ) ; ivec2 offset = ivec2 ( 3 , - 7 ) ; color += textureGrad ( texSampler2D , coords2D , gradX , gradY ) ; color += textureProjGrad ( texSampler2D , vec3 ( coords2D , proj ) , gradX , gradY ) ; gl_FragColor = mix ( color , u , blend * blendscale ) ; }



(
(declare (in ) vec2 coords2D)
(declare (uniform ) vec4 u)
(declare (uniform ) float blend)
(declare (uniform ) sampler2DShadow shadowSampler2D)
(declare (uniform ) sampler1DShadow shadowSampler1D)
(declare (uniform ) samplerCube texSamplerCube)
(declare (uniform ) sampler3D texSampler3D)
(declare (uniform ) sampler2D texSampler2D)
(declare (uniform ) sampler1D texSampler1D)
(declare (out ) vec4 gl_FragColor)
(function main
  (signature void
    (parameters
    )
    (
      (declare () vec4 color)
      (assign (constant bool (1)) (xyzw) (var_ref color)  (tex (var_ref texSampler1D)  (constant float (1.789000))  (0 0 0) 1 () )) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref texSampler1D)  (constant float (1.789000))  (0 0 0) 1 () (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref texSampler1D)  (expression float * (swiz x (var_ref coords2D) )(expression float rcp (swiz y (var_ref coords2D) )) )  (0 0 0) 1 () )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref texSampler1D)  (constant float (0.894500))  (0 0 0) 1 () )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref texSampler1D)  (expression float * (swiz x (var_ref coords2D) )(expression float rcp (swiz y (var_ref coords2D) )) )  (0 0 0) 1 () (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref texSampler1D)  (constant float (0.894500))  (0 0 0) 1 () (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref texSampler2D)  (var_ref coords2D)  (0 0 0) 1 () )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref texSampler2D)  (var_ref coords2D)  (0 0 0) 1 () (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref texSampler2D)  (constant vec2 (0.518100 0.787142))  (0 0 0) 1 () )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref texSampler2D)  (constant vec2 (0.894500 1.359000))  (0 0 0) 1 () (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref texSampler3D)  (constant vec3 (1.789000 2.718000 3.453000))  (0 0 0) 1 () )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref texSampler3D)  (constant vec3 (1.789000 2.718000 3.453000))  (0 0 0) 1 () (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref texSampler3D)  (constant vec3 (0.894500 1.359000 1.726500))  (0 0 0) 1 () )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref texSampler3D)  (constant vec3 (0.894500 1.359000 1.726500))  (0 0 0) 1 () (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref texSamplerCube)  (constant vec3 (1.789000 2.718000 3.453000))  (0 0 0) 1 () )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref texSamplerCube)  (constant vec3 (1.789000 2.718000 3.453000))  (0 0 0) 1 () (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref shadowSampler1D)  (constant float (1.789000))  (0 0 0) 1 (constant float (3.453000))  )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref shadowSampler1D)  (constant float (1.789000))  (0 0 0) 1 (constant float (3.453000))  (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref shadowSampler2D)  (constant vec2 (1.789000 2.718000))  (0 0 0) 1 (constant float (3.453000))  )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref shadowSampler2D)  (constant vec2 (1.789000 2.718000))  (0 0 0) 1 (constant float (3.453000))  (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref shadowSampler1D)  (constant float (0.894500))  (0 0 0) 1 (constant float (1.726500))  )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref shadowSampler1D)  (constant float (0.894500))  (0 0 0) 1 (constant float (1.726500))  (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (tex (var_ref shadowSampler2D)  (constant vec2 (0.894500 1.359000))  (0 0 0) 1 (constant float (1.726500))  )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txb (var_ref shadowSampler2D)  (constant vec2 (0.894500 1.359000))  (0 0 0) 1 (constant float (1.726500))  (constant float (2.000000)) )) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txf (var_ref texSampler2D)  (constant ivec2 (0 5))  (0 0 0)  (constant int (1)) )) ) 
      (declare () vec2 _ret_val)
      (assign (constant bool (1)) (xy) (var_ref _ret_val)  (expression vec2 dFdx (var_ref coords2D) ) ) 
      (declare () vec2 _ret_val)
      (assign (constant bool (1)) (xy) (var_ref _ret_val)  (expression vec2 dFdy (var_ref coords2D) ) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (expression vec4 + (var_ref color) (txd (var_ref texSampler2D)  (var_ref coords2D)  (0 0 0) 1 () ((var_ref _ret_val)  (var_ref _ret_val) ))) ) 
      (declare (temporary ) vec3 vec_ctor)
      (assign (constant bool (1)) (xy) (var_ref vec_ctor)  (var_ref coords2D) ) 
      (assign (constant bool (1)) (z) (var_ref vec_ctor)  (constant float (2.000000)) ) 
      (declare (temporary ) vec4 assignment_tmp)
      (assign (constant bool (1)) (xyzw) (var_ref assignment_tmp)  (expression vec4 + (var_ref color) (txd (var_ref texSampler2D)  (expression vec2 * (swiz xy (var_ref vec_ctor) )(constant float (0.500000)) )  (0 0 0) 1 () ((var_ref _ret_val)  (var_ref _ret_val) ))) ) 
      (assign (constant bool (1)) (xyzw) (var_ref color)  (var_ref assignment_tmp) ) 
      (declare (temporary ) vec4 mix_retval)
      (assign (constant bool (1)) (xyzw) (var_ref mix_retval)  (call mix ((var_ref assignment_tmp) (var_ref u) (expression float * (var_ref blend) (constant float (1.789000)) ) ))
) 
      (assign (constant bool (1)) (xyzw) (var_ref gl_FragColor)  (var_ref mix_retval) ) 
    ))

)


)
// LunarGOO output
#version 130
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
uniform vec4 u;
uniform float blend;
in vec2 coords2D31;
const float const24_1f = 1.0;
const float const27_2f = 1.789;
const float const28_2f = 2.0;
const float const33_1f = 0.8945;
const vec2 const44 = vec2(0.5181, 0.787142);
const vec2 const47 = vec2(0.8945, 1.359);
const vec3 const50 = vec3(1.789, 2.718, 3.453);
const vec3 const55 = vec3(0.8945, 1.359, 1.7265);
const float const64_3f = 3.453;
const vec2 const69 = vec2(1.789, 2.718);
const float const74_2f = 1.7265;
const ivec2 const83 = ivec2(0, 5);
const int const84_1 = 1;
const vec2 const87 = vec2(0.5);

void main()
{
    vec2 _ret_val32 = dFdx(coords2D31);
    vec2 _ret_val3335 = dFdy(coords2D31);
    float temp23 = const24_1f / coords2D31.y;
    float temp25 = coords2D31.x * temp23;
    vec4 temp26 = texture1D(texSampler1D, const27_2f, const28_2f);
    vec4 color1 = texture1D(texSampler1D, const27_2f);
    vec4 temp30 = texture1D(texSampler1D, temp25);
    vec4 color2 = color1 + temp26;
    vec4 temp32 = texture1D(texSampler1D, const33_1f);
    vec4 color4 = color2 + temp30;
    vec4 temp35 = texture1D(texSampler1D, temp25, const28_2f);
    vec4 color5 = color4 + temp32;
    vec4 temp37 = texture1D(texSampler1D, const33_1f, const28_2f);
    vec4 color8 = color5 + temp35;
    vec4 temp39 = texture2D(texSampler2D, coords2D31);
    vec4 color9 = color8 + temp37;
    vec4 temp41 = texture2D(texSampler2D, coords2D31, const28_2f);
    vec4 color11 = color9 + temp39;
    vec4 temp43 = texture2D(texSampler2D, const44);
    vec4 color13 = color11 + temp41;
    vec4 temp46 = texture2D(texSampler2D, const47, const28_2f);
    vec4 color14 = color13 + temp43;
    vec4 temp49 = texture3D(texSampler3D, const50);
    vec4 color15 = color14 + temp46;
    vec4 temp52 = texture3D(texSampler3D, const50, const28_2f);
    vec4 color16 = color15 + temp49;
    vec4 temp54 = texture3D(texSampler3D, const55);
    vec4 color17 = color16 + temp52;
    vec4 temp57 = texture3D(texSampler3D, const55, const28_2f);
    vec4 color18 = color17 + temp54;
    vec4 temp59 = textureCube(texSamplerCube, const50);
    vec4 color19 = color18 + temp57;
    vec4 temp61 = textureCube(texSamplerCube, const50, const28_2f);
    vec4 color20 = color19 + temp59;
    vec4 temp63 = shadow1D(shadowSampler1D, vec3(const27_2f, 0, const64_3f));
    vec4 color21 = color20 + temp61;
    vec4 temp66 = shadow1D(shadowSampler1D, vec3(const27_2f, 0, const64_3f), const28_2f);
    vec4 color22 = color21 + temp63;
    vec4 temp68 = shadow2D(shadowSampler2D, vec3(const69, const64_3f));
    vec4 color23 = color22 + temp66;
    vec4 temp71 = shadow2D(shadowSampler2D, vec3(const69, const64_3f), const28_2f);
    vec4 color24 = color23 + temp68;
    vec4 temp73 = shadow1D(shadowSampler1D, vec3(const33_1f, 0, const74_2f));
    vec4 color25 = color24 + temp71;
    vec4 temp76 = shadow1D(shadowSampler1D, vec3(const33_1f, 0, const74_2f), const28_2f);
    vec4 color26 = color25 + temp73;
    vec4 temp78 = shadow2D(shadowSampler2D, vec3(const47, const74_2f));
    vec4 color27 = color26 + temp76;
    vec4 temp80 = shadow2D(shadowSampler2D, vec3(const47, const74_2f), const28_2f);
    vec4 color28 = color27 + temp78;
    vec4 temp82 = texelFetch(texSampler2D, const83, const84_1);
    vec4 color29 = color28 + temp80;
    vec2 temp86 = coords2D31 * const87;
    vec4 temp88 = textureGrad(texSampler2D, coords2D31, _ret_val32, _ret_val3335);
    vec4 color30 = color29 + temp82;
    vec4 temp90 = textureGrad(texSampler2D, temp86, _ret_val32, _ret_val3335);
    vec4 color37 = color30 + temp88;
    float temp92 = blend * const27_2f;
    vec4 assignment_tmp41 = color37 + temp90;
    vec4 mix_retval43 = mix(assignment_tmp41, u, temp92);
    gl_FragColor = mix_retval43;
    
}
