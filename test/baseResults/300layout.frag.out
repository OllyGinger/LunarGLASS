
Top IR:
; ModuleID = 'Glslang'

%S = type { <3 x float>, float }

@c = global <3 x float> zeroinitializer
@color = global <3 x float> zeroinitializer
@s = global %S zeroinitializer
@p = global [2 x <4 x float>] zeroinitializer
@pos = global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %0 = load <3 x float>* @color
  %1 = load <3 x float>* getelementptr inbounds (%S* @s, i32 0, i32 0)
  %c = fadd <3 x float> %0, %1, !gla.precision !15
  store <3 x float> %c, <3 x float>* @c
  %2 = load <4 x float>* @pos
  %3 = load float* getelementptr inbounds (%S* @s, i32 0, i32 1)
  %4 = insertelement <4 x float> undef, float %3, i32 0, !gla.precision !15
  %5 = insertelement <4 x float> %4, float %3, i32 1, !gla.precision !15
  %6 = insertelement <4 x float> %5, float %3, i32 2, !gla.precision !15
  %7 = insertelement <4 x float> %6, float %3, i32 3, !gla.precision !15
  %8 = fmul <4 x float> %2, %7, !gla.precision !15
  store <4 x float> %8, <4 x float>* getelementptr inbounds ([2 x <4 x float>]* @p, i32 0, i32 1)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3}
!gla.inputs = !{!5, !7, !13}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"c", i32 7, <3 x float>* @c_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 2, i32 7, null, i32 0}
!3 = metadata !{metadata !"p", i32 7, [2 x <4 x float>]* @p_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 2, i32 3, null, i32 0}
!5 = metadata !{metadata !"color", i32 1, <3 x float>* @color_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 2, i32 1024, null, i32 1}
!7 = metadata !{metadata !"s", i32 1, %S* @s_typeProxy, metadata !8, metadata !9}
!8 = metadata !{i32 4, i32 0, i32 1025, null, i32 1}
!9 = metadata !{metadata !"S", metadata !10, metadata !"c", metadata !11, metadata !"f", metadata !11}
!10 = metadata !{i32 4, i32 0, i32 1024, null}
!11 = metadata !{metadata !"", metadata !12}
!12 = metadata !{i32 0, i32 2, i32 1024, null}
!13 = metadata !{metadata !"pos", i32 1, <4 x float>* @pos_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 2, i32 1027, null, i32 1}
!15 = metadata !{i32 2}


Bottom IR:
; ModuleID = 'Glslang'

%S = type { <3 x float>, float }

@c = global <3 x float> zeroinitializer
@color = global <3 x float> zeroinitializer
@s = global %S zeroinitializer
@p = global [2 x <4 x float>] zeroinitializer
@pos = global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %0 = load <3 x float>* @color, align 16
  %gla_constGEP = getelementptr %S* @s, i32 0, i32 0
  %1 = load <3 x float>* %gla_constGEP, align 16
  %c = fadd <3 x float> %0, %1, !gla.precision !15
  store <3 x float> %c, <3 x float>* @c, align 16
  %2 = load <4 x float>* @pos, align 16
  %gla_constGEP1 = getelementptr %S* @s, i32 0, i32 1
  %3 = load float* %gla_constGEP1, align 16
  %4 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %3, <4 x i32> zeroinitializer)
  %5 = fmul <4 x float> %2, %4, !gla.precision !15
  %gla_constGEP2 = getelementptr [2 x <4 x float>]* @p, i32 0, i32 1
  store <4 x float> %5, <4 x float>* %gla_constGEP2, align 16
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3}
!gla.inputs = !{!5, !7, !13}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"c", i32 7, <3 x float>* @c_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 2, i32 7, null, i32 0}
!3 = metadata !{metadata !"p", i32 7, [2 x <4 x float>]* @p_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 2, i32 3, null, i32 0}
!5 = metadata !{metadata !"color", i32 1, <3 x float>* @color_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 2, i32 1024, null, i32 1}
!7 = metadata !{metadata !"s", i32 1, %S* @s_typeProxy, metadata !8, metadata !9}
!8 = metadata !{i32 4, i32 0, i32 1025, null, i32 1}
!9 = metadata !{metadata !"S", metadata !10, metadata !"c", metadata !11, metadata !"f", metadata !11}
!10 = metadata !{i32 4, i32 0, i32 1024, null}
!11 = metadata !{metadata !"", metadata !12}
!12 = metadata !{i32 0, i32 2, i32 1024, null}
!13 = metadata !{metadata !"pos", i32 1, <4 x float>* @pos_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 2, i32 1027, null, i32 1}
!15 = metadata !{i32 2}
#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations

struct S {
    mediump vec3 c;
    mediump float f;
};

in mediump vec3 color;
in S s;
in mediump vec4 pos;
layout(location=7) out mediump vec3 c;
layout(location=3) out mediump vec4 p[2];

void main()
{
    mediump vec3 temp21 = color + s.c;
    c = temp21;
    vec4 temp22 = vec4(s.f);
    mediump vec4 temp23 = pos * temp22;
    p[1] = temp23;
    
}


#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations

struct S {
    mediump vec3 c;
    mediump float f;
};

in mediump vec3 color;
in S s;
in mediump vec4 pos;
layout(location=7) out mediump vec3 c;
layout(location=3) out mediump vec4 p[2];

void main()
{
    mediump vec3 temp_c1 = color + s.c;
    c = temp_c1;
    vec4 temp22 = vec4(s.f);
    mediump vec4 temp_c2 = pos * temp22;
    p[1] = temp_c2;
    
}


