
Top IR:
; ModuleID = 'Glslang'

%lunarStruct3 = type { %lunarStruct2, i32, float, %lunarStruct1 }
%lunarStruct2 = type { i32, float, %lunarStruct1 }
%lunarStruct1 = type { i32, float }

@foo3 = external addrspace(2) constant %lunarStruct3
@foo2 = external addrspace(2) constant %lunarStruct2
@FragColor_shadow = internal global <4 x float> zeroinitializer
@sampler = external addrspace(1) constant i32
@coord_shadow = internal global <2 x float> zeroinitializer
@foo = external addrspace(2) constant %lunarStruct1

define fastcc void @main() {
entry:
  %locals2 = alloca %lunarStruct2
  %0 = load i32 addrspace(2)* getelementptr inbounds (%lunarStruct3 addrspace(2)* @foo3, i32 0, i32 0, i32 0), !gla.uniform !1
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %then, label %else

then:                                             ; preds = %entry
  %locals21 = load %lunarStruct2 addrspace(2)* getelementptr inbounds (%lunarStruct3 addrspace(2)* @foo3, i32 0, i32 0), !gla.uniform !1
  store %lunarStruct2 %locals21, %lunarStruct2* %locals2
  br label %ifmerge

else:                                             ; preds = %entry
  %locals22 = load %lunarStruct2 addrspace(2)* @foo2, !gla.uniform !8
  store %lunarStruct2 %locals22, %lunarStruct2* %locals2
  br label %ifmerge

ifmerge:                                          ; preds = %else, %then
  %2 = getelementptr %lunarStruct2* %locals2, i32 0, i32 2, i32 1
  %3 = load float* %2
  %4 = load i32 addrspace(1)* @sampler, !gla.uniform !9
  %coord = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1025, i32 -1, i32 1), !gla.input !15
  store <2 x float> %coord, <2 x float>* @coord_shadow
  %5 = load <2 x float>* @coord_shadow
  %6 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %4, i32 0, <2 x float> %5)
  %7 = insertelement <4 x float> undef, float %3, i32 0
  %8 = insertelement <4 x float> %7, float %3, i32 1
  %9 = insertelement <4 x float> %8, float %3, i32 2
  %10 = insertelement <4 x float> %9, float %3, i32 3
  %FragColor_shadow = fmul <4 x float> %10, %6
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge
  %11 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1024, i32 -1, <4 x float> %11), !gla.output !13
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !8, !9, !12}
!gla.outputs = !{!13}
!gla.inputs = !{!15}
!gla.noStaticUse = !{!12}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"foo3", i32 12, %lunarStruct3* @foo3_typeProxy, metadata !2, metadata !3}
!2 = metadata !{i32 4, i32 0, i32 1024, null}
!3 = metadata !{metadata !"lunarStruct3", metadata !2, metadata !"s2_1", metadata !4, metadata !"i", metadata !5, metadata !"f", metadata !5, metadata !"s1_1", metadata !7}
!4 = metadata !{metadata !"lunarStruct2", metadata !2, metadata !"i", metadata !5, metadata !"f", metadata !5, metadata !"s1_1", metadata !7}
!5 = metadata !{metadata !"", metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1024, null}
!7 = metadata !{metadata !"lunarStruct1", metadata !2, metadata !"i", metadata !5, metadata !"f", metadata !5}
!8 = metadata !{metadata !"foo2", i32 12, %lunarStruct2* @foo2_typeProxy, metadata !2, metadata !4}
!9 = metadata !{metadata !"sampler", i32 12, i32* @sampler_typeProxy, metadata !10}
!10 = metadata !{i32 5, i32 0, i32 1024, metadata !11}
!11 = metadata !{i32 0, i32* @sampler_typeProxy, i32 1, i1 false, i1 false, i32 0}
!12 = metadata !{metadata !"foo", i32 12, %lunarStruct1* @foo_typeProxy, metadata !2, metadata !7}
!13 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!15 = metadata !{metadata !"coord", i32 1, <2 x float>* @coord_shadow_typeProxy, metadata !16}
!16 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}


Bottom IR:
; ModuleID = 'Glslang'

%lunarStruct3 = type { %lunarStruct2, i32, float, %lunarStruct1 }
%lunarStruct2 = type { i32, float, %lunarStruct1 }
%lunarStruct1 = type { i32, float }

@foo3 = external addrspace(2) constant %lunarStruct3
@foo2 = external addrspace(2) constant %lunarStruct2
@sampler = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %gla_constGEP = getelementptr %lunarStruct3 addrspace(2)* @foo3, i32 0, i32 0, i32 0
  %0 = load i32 addrspace(2)* %gla_constGEP, align 4, !gla.uniform !1
  %1 = icmp sgt i32 %0, 0
  %gla_constGEP15 = getelementptr %lunarStruct3 addrspace(2)* @foo3, i32 0, i32 0, i32 2, i32 1
  %.val = load float addrspace(2)* %gla_constGEP15, align 4
  %gla_constGEP16 = getelementptr %lunarStruct2 addrspace(2)* @foo2, i32 0, i32 2, i32 1
  %.val14 = load float addrspace(2)* %gla_constGEP16, align 4
  %locals2.2.1.0 = select i1 %1, float %.val, float %.val14
  %2 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %locals2.2.1.0, <4 x i32> zeroinitializer)
  %coord = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1025, i32 -1, i32 1), !gla.input !15
  %3 = load i32 addrspace(1)* @sampler, align 4, !gla.uniform !9
  %4 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %3, i32 0, <2 x float> %coord)
  %FragColor_shadow = fmul <4 x float> %4, %2
  call void @llvm.gla.fWriteData.v4f32(i32 1024, i32 -1, <4 x float> %FragColor_shadow), !gla.output !13
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !8, !9, !12}
!gla.outputs = !{!13}
!gla.inputs = !{!15}
!gla.noStaticUse = !{!12}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"foo3", i32 12, %lunarStruct3* @foo3_typeProxy, metadata !2, metadata !3}
!2 = metadata !{i32 4, i32 0, i32 1024, null}
!3 = metadata !{metadata !"lunarStruct3", metadata !2, metadata !"s2_1", metadata !4, metadata !"i", metadata !5, metadata !"f", metadata !5, metadata !"s1_1", metadata !7}
!4 = metadata !{metadata !"lunarStruct2", metadata !2, metadata !"i", metadata !5, metadata !"f", metadata !5, metadata !"s1_1", metadata !7}
!5 = metadata !{metadata !"", metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1024, null}
!7 = metadata !{metadata !"lunarStruct1", metadata !2, metadata !"i", metadata !5, metadata !"f", metadata !5}
!8 = metadata !{metadata !"foo2", i32 12, %lunarStruct2* @foo2_typeProxy, metadata !2, metadata !4}
!9 = metadata !{metadata !"sampler", i32 12, i32* @sampler_typeProxy, metadata !10}
!10 = metadata !{i32 5, i32 0, i32 1024, metadata !11}
!11 = metadata !{i32 0, i32* @sampler_typeProxy, i32 1, i1 false, i1 false, i32 0}
!12 = metadata !{metadata !"foo", i32 12, %lunarStruct1* @foo_typeProxy, metadata !2, metadata !7}
!13 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!15 = metadata !{metadata !"coord", i32 1, <2 x float>* @coord_shadow_typeProxy, metadata !16}
!16 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}

***Unsupported functionality: missing metadata on load 0 foo3

***Unsupported functionality: missing metadata on load 0 foo2
#version 130
// LunarGOO output
struct lunarStruct1 {
    int i;
    float f;
};

struct lunarStruct2 {
    int i;
    float f;
    lunarStruct1 s1_1;
};

struct lunarStruct3 {
    lunarStruct2 s2_1;
    int i;
    float f;
    lunarStruct1 s1_1;
};

uniform lunarStruct3 foo3;
uniform lunarStruct2 foo2;
uniform sampler2D sampler;
uniform lunarStruct1 foo;
in vec2 coord;
const int const22i_0 = 0;

void main()
{
    bool temp21 = foo3.s2_1.i > const22i_0;
    float locals2d2d1d0 = temp21 ? foo3.s2_1.s1_1.f : foo2.s1_1.f;
    vec4 temp24 = vec4(locals2d2d1d0);
    vec4 temp25 = texture(sampler, coord);
    vec4 FragColor_shadow = temp25 * temp24;
    gl_FragColor = FragColor_shadow;
    
}


#version 130
// LunarGOO output
struct lunarStruct1 {
    int i;
    float f;
};

struct lunarStruct2 {
    int i;
    float f;
    lunarStruct1 s1_1;
};

struct lunarStruct3 {
    lunarStruct2 s2_1;
    int i;
    float f;
    lunarStruct1 s1_1;
};

uniform lunarStruct3 foo3;
uniform lunarStruct2 foo2;
uniform sampler2D sampler;
uniform lunarStruct1 foo;
in vec2 coord;
const int const22i_0 = 0;

void main()
{
    bool temp211 = foo3.s2_1.i > const22i_0;
    float ternaryd0 = temp211 ? foo3.s2_1.s1_1.f : foo2.s1_1.f;
    vec4 temp24 = vec4(ternaryd0);
    vec4 temp256 = texture(sampler, coord);
    vec4 FragColor_shadow7 = temp256 * temp24;
    gl_FragColor = FragColor_shadow7;
    
}


