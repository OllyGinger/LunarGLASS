
Top IR:
; ModuleID = 'Glslang'

%Transform = type { [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], i32 }
%T3 = type { [4 x <4 x float>], [4 x <4 x float>], [2 x <3 x float>], [4 x <3 x i32>] }
%T2 = type { i1, [4 x <4 x float>] }
%S = type { <3 x float>, float }

@pos = global <4 x float> zeroinitializer
@p = global <4 x float> zeroinitializer
@tblock = external addrspace(2) constant %Transform
@"anon@1" = external addrspace(2) constant %T3
@"anon@0" = external addrspace(2) constant %T2
@color = global <3 x float> zeroinitializer
@c = global <3 x float> zeroinitializer
@iout = global i32 0
@uiuin = external addrspace(2) constant i32
@aiv2 = global <2 x i32> zeroinitializer
@s = global %S zeroinitializer
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0

define fastcc void @main() {
entry:
  %0 = alloca <3 x float>
  %1 = alloca <4 x float>
  %2 = alloca [4 x <4 x float>]
  %3 = alloca [4 x <4 x float>]
  %4 = alloca [4 x <4 x float>]
  %5 = alloca [4 x <4 x float>]
  %6 = load <4 x float>* @p
  %7 = load [4 x <4 x float>] addrspace(2)* getelementptr inbounds (%Transform addrspace(2)* @tblock, i32 0, i32 0), !gla.uniform !23
  %8 = load [4 x <4 x float>] addrspace(2)* getelementptr inbounds (%Transform addrspace(2)* @tblock, i32 0, i32 1), !gla.uniform !23
  %9 = load [4 x <4 x float>]* %5
  %leftColumn = extractvalue [4 x <4 x float>] %7, 0, !gla.precision !40
  %rightColumn = extractvalue [4 x <4 x float>] %8, 0, !gla.precision !40
  %column = fadd <4 x float> %leftColumn, %rightColumn, !gla.precision !40
  %10 = insertvalue [4 x <4 x float>] %9, <4 x float> %column, 0, !gla.precision !40
  %leftColumn1 = extractvalue [4 x <4 x float>] %7, 1, !gla.precision !40
  %rightColumn2 = extractvalue [4 x <4 x float>] %8, 1, !gla.precision !40
  %column3 = fadd <4 x float> %leftColumn1, %rightColumn2, !gla.precision !40
  %11 = insertvalue [4 x <4 x float>] %10, <4 x float> %column3, 1, !gla.precision !40
  %leftColumn4 = extractvalue [4 x <4 x float>] %7, 2, !gla.precision !40
  %rightColumn5 = extractvalue [4 x <4 x float>] %8, 2, !gla.precision !40
  %column6 = fadd <4 x float> %leftColumn4, %rightColumn5, !gla.precision !40
  %12 = insertvalue [4 x <4 x float>] %11, <4 x float> %column6, 2, !gla.precision !40
  %leftColumn7 = extractvalue [4 x <4 x float>] %7, 3, !gla.precision !40
  %rightColumn8 = extractvalue [4 x <4 x float>] %8, 3, !gla.precision !40
  %column9 = fadd <4 x float> %leftColumn7, %rightColumn8, !gla.precision !40
  %13 = insertvalue [4 x <4 x float>] %12, <4 x float> %column9, 3, !gla.precision !40
  %14 = load [4 x <4 x float>] addrspace(2)* getelementptr inbounds (%T3 addrspace(2)* @"anon@1", i32 0, i32 1), !gla.uniform !30
  %15 = load [4 x <4 x float>]* %4
  %leftColumn10 = extractvalue [4 x <4 x float>] %13, 0, !gla.precision !40
  %rightColumn11 = extractvalue [4 x <4 x float>] %14, 0, !gla.precision !40
  %column12 = fadd <4 x float> %leftColumn10, %rightColumn11, !gla.precision !40
  %16 = insertvalue [4 x <4 x float>] %15, <4 x float> %column12, 0, !gla.precision !40
  %leftColumn13 = extractvalue [4 x <4 x float>] %13, 1, !gla.precision !40
  %rightColumn14 = extractvalue [4 x <4 x float>] %14, 1, !gla.precision !40
  %column15 = fadd <4 x float> %leftColumn13, %rightColumn14, !gla.precision !40
  %17 = insertvalue [4 x <4 x float>] %16, <4 x float> %column15, 1, !gla.precision !40
  %leftColumn16 = extractvalue [4 x <4 x float>] %13, 2, !gla.precision !40
  %rightColumn17 = extractvalue [4 x <4 x float>] %14, 2, !gla.precision !40
  %column18 = fadd <4 x float> %leftColumn16, %rightColumn17, !gla.precision !40
  %18 = insertvalue [4 x <4 x float>] %17, <4 x float> %column18, 2, !gla.precision !40
  %leftColumn19 = extractvalue [4 x <4 x float>] %13, 3, !gla.precision !40
  %rightColumn20 = extractvalue [4 x <4 x float>] %14, 3, !gla.precision !40
  %column21 = fadd <4 x float> %leftColumn19, %rightColumn20, !gla.precision !40
  %19 = insertvalue [4 x <4 x float>] %18, <4 x float> %column21, 3, !gla.precision !40
  %20 = load [4 x <4 x float>] addrspace(2)* getelementptr inbounds (%T3 addrspace(2)* @"anon@1", i32 0, i32 0), !gla.uniform !30
  %21 = load [4 x <4 x float>]* %3
  %leftColumn22 = extractvalue [4 x <4 x float>] %19, 0, !gla.precision !40
  %rightColumn23 = extractvalue [4 x <4 x float>] %20, 0, !gla.precision !40
  %column24 = fadd <4 x float> %leftColumn22, %rightColumn23, !gla.precision !40
  %22 = insertvalue [4 x <4 x float>] %21, <4 x float> %column24, 0, !gla.precision !40
  %leftColumn25 = extractvalue [4 x <4 x float>] %19, 1, !gla.precision !40
  %rightColumn26 = extractvalue [4 x <4 x float>] %20, 1, !gla.precision !40
  %column27 = fadd <4 x float> %leftColumn25, %rightColumn26, !gla.precision !40
  %23 = insertvalue [4 x <4 x float>] %22, <4 x float> %column27, 1, !gla.precision !40
  %leftColumn28 = extractvalue [4 x <4 x float>] %19, 2, !gla.precision !40
  %rightColumn29 = extractvalue [4 x <4 x float>] %20, 2, !gla.precision !40
  %column30 = fadd <4 x float> %leftColumn28, %rightColumn29, !gla.precision !40
  %24 = insertvalue [4 x <4 x float>] %23, <4 x float> %column30, 2, !gla.precision !40
  %leftColumn31 = extractvalue [4 x <4 x float>] %19, 3, !gla.precision !40
  %rightColumn32 = extractvalue [4 x <4 x float>] %20, 3, !gla.precision !40
  %column33 = fadd <4 x float> %leftColumn31, %rightColumn32, !gla.precision !40
  %25 = insertvalue [4 x <4 x float>] %24, <4 x float> %column33, 3, !gla.precision !40
  %26 = load [4 x <4 x float>] addrspace(2)* getelementptr inbounds (%T2 addrspace(2)* @"anon@0", i32 0, i32 1), !gla.uniform !35
  %27 = load [4 x <4 x float>]* %2
  %leftColumn34 = extractvalue [4 x <4 x float>] %25, 0, !gla.precision !40
  %rightColumn35 = extractvalue [4 x <4 x float>] %26, 0, !gla.precision !40
  %column36 = fadd <4 x float> %leftColumn34, %rightColumn35, !gla.precision !40
  %28 = insertvalue [4 x <4 x float>] %27, <4 x float> %column36, 0, !gla.precision !40
  %leftColumn37 = extractvalue [4 x <4 x float>] %25, 1, !gla.precision !40
  %rightColumn38 = extractvalue [4 x <4 x float>] %26, 1, !gla.precision !40
  %column39 = fadd <4 x float> %leftColumn37, %rightColumn38, !gla.precision !40
  %29 = insertvalue [4 x <4 x float>] %28, <4 x float> %column39, 1, !gla.precision !40
  %leftColumn40 = extractvalue [4 x <4 x float>] %25, 2, !gla.precision !40
  %rightColumn41 = extractvalue [4 x <4 x float>] %26, 2, !gla.precision !40
  %column42 = fadd <4 x float> %leftColumn40, %rightColumn41, !gla.precision !40
  %30 = insertvalue [4 x <4 x float>] %29, <4 x float> %column42, 2, !gla.precision !40
  %leftColumn43 = extractvalue [4 x <4 x float>] %25, 3, !gla.precision !40
  %rightColumn44 = extractvalue [4 x <4 x float>] %26, 3, !gla.precision !40
  %column45 = fadd <4 x float> %leftColumn43, %rightColumn44, !gla.precision !40
  %31 = insertvalue [4 x <4 x float>] %30, <4 x float> %column45, 3, !gla.precision !40
  %32 = load <4 x float>* %1
  %column46 = extractvalue [4 x <4 x float>] %31, 0, !gla.precision !40
  %dotres = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %6, <4 x float> %column46), !gla.precision !40
  %33 = insertelement <4 x float> %32, float %dotres, i32 0, !gla.precision !40
  %column47 = extractvalue [4 x <4 x float>] %31, 1, !gla.precision !40
  %dotres48 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %6, <4 x float> %column47), !gla.precision !40
  %34 = insertelement <4 x float> %33, float %dotres48, i32 1, !gla.precision !40
  %column49 = extractvalue [4 x <4 x float>] %31, 2, !gla.precision !40
  %dotres50 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %6, <4 x float> %column49), !gla.precision !40
  %35 = insertelement <4 x float> %34, float %dotres50, i32 2, !gla.precision !40
  %column51 = extractvalue [4 x <4 x float>] %31, 3, !gla.precision !40
  %dotres52 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %6, <4 x float> %column51), !gla.precision !40
  %pos = insertelement <4 x float> %35, float %dotres52, i32 3, !gla.precision !40
  store <4 x float> %pos, <4 x float>* @pos
  %36 = load <3 x float>* @c
  %37 = load [3 x <3 x float>] addrspace(2)* getelementptr inbounds (%Transform addrspace(2)* @tblock, i32 0, i32 2), !gla.uniform !23
  %38 = load <3 x float>* %0
  %column53 = extractvalue [3 x <3 x float>] %37, 0, !gla.precision !40
  %dotres54 = call float @llvm.gla.fDot3.f32.v3f32.v3f32(<3 x float> %36, <3 x float> %column53), !gla.precision !40
  %39 = insertelement <3 x float> %38, float %dotres54, i32 0, !gla.precision !40
  %column55 = extractvalue [3 x <3 x float>] %37, 1, !gla.precision !40
  %dotres56 = call float @llvm.gla.fDot3.f32.v3f32.v3f32(<3 x float> %36, <3 x float> %column55), !gla.precision !40
  %40 = insertelement <3 x float> %39, float %dotres56, i32 1, !gla.precision !40
  %column57 = extractvalue [3 x <3 x float>] %37, 2, !gla.precision !40
  %dotres58 = call float @llvm.gla.fDot3.f32.v3f32.v3f32(<3 x float> %36, <3 x float> %column57), !gla.precision !40
  %color = insertelement <3 x float> %40, float %dotres58, i32 2, !gla.precision !40
  store <3 x float> %color, <3 x float>* @color
  %41 = load i32 addrspace(2)* getelementptr inbounds (%Transform addrspace(2)* @tblock, i32 0, i32 3), !gla.uniform !23
  %42 = load i32 addrspace(2)* @uiuin, !gla.uniform !39
  %43 = add i32 %41, %42, !gla.precision !40
  %44 = load <2 x i32>* @aiv2
  %45 = extractelement <2 x i32> %44, i32 1, !gla.precision !40
  %iout = add i32 %43, %45, !gla.precision !40
  store i32 %iout, i32* @iout
  %46 = load <3 x float>* @c
  store <3 x float> %46, <3 x float>* getelementptr inbounds (%S* @s, i32 0, i32 0)
  %47 = load <4 x float>* @p
  %48 = extractelement <4 x float> %47, i32 0, !gla.precision !40
  store float %48, float* getelementptr inbounds (%S* @s, i32 0, i32 1)
  %49 = load <3 x float> addrspace(2)* getelementptr inbounds (%T3 addrspace(2)* @"anon@1", i32 0, i32 2, i32 1), !gla.uniform !30
  %50 = fcmp one <3 x float> %49, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %51 = call i1 @llvm.gla.any.v3i1(<3 x i1> %50)
  %52 = load <3 x i32> addrspace(2)* getelementptr inbounds (%T3 addrspace(2)* @"anon@1", i32 0, i32 3, i32 2), !gla.uniform !30
  %53 = icmp ne <3 x i32> %52, <i32 5, i32 5, i32 5>
  %54 = call i1 @llvm.gla.any.v3i1(<3 x i1> %53)
  %55 = or i1 %51, %54
  br i1 %55, label %then, label %ifmerge

then:                                             ; preds = %entry
  %56 = load <3 x float>* getelementptr inbounds (%S* @s, i32 0, i32 0)
  %57 = fadd <3 x float> %56, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !gla.precision !40
  store <3 x float> %57, <3 x float>* getelementptr inbounds (%S* @s, i32 0, i32 0)
  br label %ifmerge

ifmerge:                                          ; preds = %entry, %then
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float>, <4 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fDot3.f32.v3f32.v3f32(<3 x float>, <3 x float>) #0

; Function Attrs: nounwind readnone
declare i1 @llvm.gla.any.v3i1(<3 x i1>) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3, !5, !7}
!gla.inputs = !{!13, !15, !17, !19, !21}
!gla.uniforms = !{!23, !30, !35, !39}
!gla.noStaticUse = !{!19, !21}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"pos", i32 7, <4 x float>* @pos_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 3, i32 1024, null, i32 1}
!3 = metadata !{metadata !"color", i32 7, <3 x float>* @color_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 3, i32 1025, null, i32 1}
!5 = metadata !{metadata !"iout", i32 7, i32* @iout_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 3, i32 1026, null, i32 0}
!7 = metadata !{metadata !"s", i32 7, %S* @s_typeProxy, metadata !8, metadata !9}
!8 = metadata !{i32 4, i32 0, i32 1027, null, i32 1}
!9 = metadata !{metadata !"S", metadata !10, metadata !"c", metadata !11, metadata !"f", metadata !11}
!10 = metadata !{i32 4, i32 0, i32 1024, null}
!11 = metadata !{metadata !"", metadata !12}
!12 = metadata !{i32 0, i32 3, i32 1024, null}
!13 = metadata !{metadata !"p", i32 1, <4 x float>* @p_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 3, i32 3, null, i32 0}
!15 = metadata !{metadata !"c", i32 1, <3 x float>* @c_typeProxy, metadata !16}
!16 = metadata !{i32 0, i32 3, i32 7, null, i32 0}
!17 = metadata !{metadata !"aiv2", i32 1, <2 x i32>* @aiv2_typeProxy, metadata !18}
!18 = metadata !{i32 0, i32 3, i32 9, null, i32 0}
!19 = metadata !{metadata !"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, metadata !20}
!20 = metadata !{i32 0, i32 3, i32 1029, null, i32 0}
!21 = metadata !{metadata !"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, metadata !22}
!22 = metadata !{i32 0, i32 3, i32 1030, null, i32 0}
!23 = metadata !{metadata !"tblock", i32 13, %Transform* @tblock_typeProxy, metadata !24, metadata !25}
!24 = metadata !{i32 7, i32 0, i32 1024, null}
!25 = metadata !{metadata !"Transform", metadata !24, metadata !"M1", metadata !26, metadata !"M2", metadata !28, metadata !"N1", metadata !26, metadata !"iuin", metadata !11}
!26 = metadata !{metadata !"", metadata !27}
!27 = metadata !{i32 2, i32 3, i32 1024, null}
!28 = metadata !{metadata !"", metadata !29}
!29 = metadata !{i32 3, i32 3, i32 1024, null}
!30 = metadata !{metadata !"", i32 13, %T3* @"anon@1_typeProxy", metadata !31, metadata !32}
!31 = metadata !{i32 6, i32 0, i32 1024, null}
!32 = metadata !{metadata !"T3", metadata !31, metadata !"M3", metadata !28, metadata !"M4", metadata !26, metadata !"N2", metadata !28, metadata !"uv3a", metadata !33}
!33 = metadata !{metadata !"", metadata !34}
!34 = metadata !{i32 1, i32 3, i32 1024, null}
!35 = metadata !{metadata !"", i32 13, %T2* @"anon@0_typeProxy", metadata !31, metadata !36}
!36 = metadata !{metadata !"T2", metadata !31, metadata !"b", metadata !37, metadata !"t2m", metadata !26}
!37 = metadata !{metadata !"", metadata !38}
!38 = metadata !{i32 0, i32 0, i32 1024, null}
!39 = metadata !{metadata !"uiuin", i32 12, i32* @uiuin_typeProxy, metadata !34}
!40 = metadata !{i32 3}


Bottom IR:
; ModuleID = 'Glslang'

%Transform = type { [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], i32 }
%T3 = type { [4 x <4 x float>], [4 x <4 x float>], [2 x <3 x float>], [4 x <3 x i32>] }
%T2 = type { i1, [4 x <4 x float>] }
%S = type { <3 x float>, float }

@pos = global <4 x float> zeroinitializer
@p = global <4 x float> zeroinitializer
@tblock = external addrspace(2) constant %Transform
@"anon@1" = external addrspace(2) constant %T3
@"anon@0" = external addrspace(2) constant %T2
@color = global <3 x float> zeroinitializer
@c = global <3 x float> zeroinitializer
@iout = global i32 0
@uiuin = external addrspace(2) constant i32
@aiv2 = global <2 x i32> zeroinitializer
@s = global %S zeroinitializer
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0

define fastcc void @main() {
entry:
  %0 = load <4 x float>* @p, align 16
  %gla_constGEP = getelementptr %Transform addrspace(2)* @tblock, i32 0, i32 0
  %1 = load [4 x <4 x float>] addrspace(2)* %gla_constGEP, align 16, !gla.uniform !23
  %gla_constGEP59 = getelementptr %Transform addrspace(2)* @tblock, i32 0, i32 1
  %2 = load [4 x <4 x float>] addrspace(2)* %gla_constGEP59, align 16, !gla.uniform !23
  %leftColumn = extractvalue [4 x <4 x float>] %1, 0, !gla.precision !40
  %rightColumn = extractvalue [4 x <4 x float>] %2, 0, !gla.precision !40
  %column = fadd <4 x float> %leftColumn, %rightColumn, !gla.precision !40
  %leftColumn1 = extractvalue [4 x <4 x float>] %1, 1, !gla.precision !40
  %rightColumn2 = extractvalue [4 x <4 x float>] %2, 1, !gla.precision !40
  %column3 = fadd <4 x float> %leftColumn1, %rightColumn2, !gla.precision !40
  %leftColumn4 = extractvalue [4 x <4 x float>] %1, 2, !gla.precision !40
  %rightColumn5 = extractvalue [4 x <4 x float>] %2, 2, !gla.precision !40
  %column6 = fadd <4 x float> %leftColumn4, %rightColumn5, !gla.precision !40
  %leftColumn7 = extractvalue [4 x <4 x float>] %1, 3, !gla.precision !40
  %rightColumn8 = extractvalue [4 x <4 x float>] %2, 3, !gla.precision !40
  %column9 = fadd <4 x float> %leftColumn7, %rightColumn8, !gla.precision !40
  %gla_constGEP60 = getelementptr %T3 addrspace(2)* @"anon@1", i32 0, i32 1
  %3 = load [4 x <4 x float>] addrspace(2)* %gla_constGEP60, align 16, !gla.uniform !30
  %rightColumn11 = extractvalue [4 x <4 x float>] %3, 0, !gla.precision !40
  %column12 = fadd <4 x float> %column, %rightColumn11, !gla.precision !40
  %rightColumn14 = extractvalue [4 x <4 x float>] %3, 1, !gla.precision !40
  %column15 = fadd <4 x float> %column3, %rightColumn14, !gla.precision !40
  %rightColumn17 = extractvalue [4 x <4 x float>] %3, 2, !gla.precision !40
  %column18 = fadd <4 x float> %column6, %rightColumn17, !gla.precision !40
  %rightColumn20 = extractvalue [4 x <4 x float>] %3, 3, !gla.precision !40
  %column21 = fadd <4 x float> %column9, %rightColumn20, !gla.precision !40
  %gla_constGEP61 = getelementptr %T3 addrspace(2)* @"anon@1", i32 0, i32 0
  %4 = load [4 x <4 x float>] addrspace(2)* %gla_constGEP61, align 16, !gla.uniform !30
  %rightColumn23 = extractvalue [4 x <4 x float>] %4, 0, !gla.precision !40
  %column24 = fadd <4 x float> %column12, %rightColumn23, !gla.precision !40
  %rightColumn26 = extractvalue [4 x <4 x float>] %4, 1, !gla.precision !40
  %column27 = fadd <4 x float> %column15, %rightColumn26, !gla.precision !40
  %rightColumn29 = extractvalue [4 x <4 x float>] %4, 2, !gla.precision !40
  %column30 = fadd <4 x float> %column18, %rightColumn29, !gla.precision !40
  %rightColumn32 = extractvalue [4 x <4 x float>] %4, 3, !gla.precision !40
  %column33 = fadd <4 x float> %column21, %rightColumn32, !gla.precision !40
  %gla_constGEP62 = getelementptr %T2 addrspace(2)* @"anon@0", i32 0, i32 1
  %5 = load [4 x <4 x float>] addrspace(2)* %gla_constGEP62, align 16, !gla.uniform !35
  %rightColumn35 = extractvalue [4 x <4 x float>] %5, 0, !gla.precision !40
  %column36 = fadd <4 x float> %column24, %rightColumn35, !gla.precision !40
  %rightColumn38 = extractvalue [4 x <4 x float>] %5, 1, !gla.precision !40
  %column39 = fadd <4 x float> %column27, %rightColumn38, !gla.precision !40
  %rightColumn41 = extractvalue [4 x <4 x float>] %5, 2, !gla.precision !40
  %column42 = fadd <4 x float> %column30, %rightColumn41, !gla.precision !40
  %rightColumn44 = extractvalue [4 x <4 x float>] %5, 3, !gla.precision !40
  %column45 = fadd <4 x float> %column33, %rightColumn44, !gla.precision !40
  %dotres = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %column36), !gla.precision !40
  %dotres48 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %column39), !gla.precision !40
  %dotres50 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %column42), !gla.precision !40
  %dotres52 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %column45), !gla.precision !40
  %6 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %dotres, i32 0, float %dotres48, i32 0, float %dotres50, i32 0, float %dotres52, i32 0)
  store <4 x float> %6, <4 x float>* @pos, align 16
  %7 = load <3 x float>* @c, align 16
  %gla_constGEP63 = getelementptr %Transform addrspace(2)* @tblock, i32 0, i32 2
  %8 = load [3 x <3 x float>] addrspace(2)* %gla_constGEP63, align 16, !gla.uniform !23
  %column53 = extractvalue [3 x <3 x float>] %8, 0, !gla.precision !40
  %dotres54 = call float @llvm.gla.fDot3.f32.v3f32.v3f32(<3 x float> %7, <3 x float> %column53), !gla.precision !40
  %column55 = extractvalue [3 x <3 x float>] %8, 1, !gla.precision !40
  %dotres56 = call float @llvm.gla.fDot3.f32.v3f32.v3f32(<3 x float> %7, <3 x float> %column55), !gla.precision !40
  %column57 = extractvalue [3 x <3 x float>] %8, 2, !gla.precision !40
  %dotres58 = call float @llvm.gla.fDot3.f32.v3f32.v3f32(<3 x float> %7, <3 x float> %column57), !gla.precision !40
  %9 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float> undef, i32 7, float %dotres54, i32 0, float %dotres56, i32 0, float %dotres58, i32 0, float undef, i32 undef)
  store <3 x float> %9, <3 x float>* @color, align 16
  %gla_constGEP64 = getelementptr %Transform addrspace(2)* @tblock, i32 0, i32 3
  %10 = load i32 addrspace(2)* %gla_constGEP64, align 16, !gla.uniform !23
  %11 = load i32 addrspace(2)* @uiuin, align 4, !gla.uniform !39
  %12 = add i32 %11, %10, !gla.precision !40
  %13 = load <2 x i32>* @aiv2, align 8
  %14 = extractelement <2 x i32> %13, i32 1, !gla.precision !40
  %iout = add i32 %12, %14, !gla.precision !40
  store i32 %iout, i32* @iout, align 4
  %gla_constGEP65 = getelementptr %S* @s, i32 0, i32 0
  store <3 x float> %7, <3 x float>* %gla_constGEP65, align 16
  %15 = extractelement <4 x float> %0, i32 0, !gla.precision !40
  %gla_constGEP66 = getelementptr %S* @s, i32 0, i32 1
  store float %15, float* %gla_constGEP66, align 16
  %gla_constGEP67 = getelementptr %T3 addrspace(2)* @"anon@1", i32 0, i32 2, i32 1
  %16 = load <3 x float> addrspace(2)* %gla_constGEP67, align 16, !gla.uniform !30
  %17 = fcmp one <3 x float> %16, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %18 = call i1 @llvm.gla.any.v3i1(<3 x i1> %17)
  %gla_constGEP68 = getelementptr %T3 addrspace(2)* @"anon@1", i32 0, i32 3, i32 2
  %19 = load <3 x i32> addrspace(2)* %gla_constGEP68, align 16, !gla.uniform !30
  %20 = icmp ne <3 x i32> %19, <i32 5, i32 5, i32 5>
  %21 = call i1 @llvm.gla.any.v3i1(<3 x i1> %20)
  %22 = or i1 %18, %21
  br i1 %22, label %then, label %ifmerge

then:                                             ; preds = %entry
  %23 = fadd <3 x float> %7, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !gla.precision !40
  %gla_constGEP69 = getelementptr %S* @s, i32 0, i32 0
  store <3 x float> %23, <3 x float>* %gla_constGEP69, align 16
  br label %ifmerge

ifmerge:                                          ; preds = %entry, %then
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float>, <4 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fDot3.f32.v3f32.v3f32(<3 x float>, <3 x float>) #0

; Function Attrs: nounwind readnone
declare i1 @llvm.gla.any.v3i1(<3 x i1>) #0

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float>, i32, float, i32, float, i32, float, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float>, i32, float, i32, float, i32, float, i32, float, i32) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3, !5, !7}
!gla.inputs = !{!13, !15, !17, !19, !21}
!gla.uniforms = !{!23, !30, !35, !39}
!gla.noStaticUse = !{!19, !21}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"pos", i32 7, <4 x float>* @pos_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 3, i32 1024, null, i32 1}
!3 = metadata !{metadata !"color", i32 7, <3 x float>* @color_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 3, i32 1025, null, i32 1}
!5 = metadata !{metadata !"iout", i32 7, i32* @iout_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 3, i32 1026, null, i32 0}
!7 = metadata !{metadata !"s", i32 7, %S* @s_typeProxy, metadata !8, metadata !9}
!8 = metadata !{i32 4, i32 0, i32 1027, null, i32 1}
!9 = metadata !{metadata !"S", metadata !10, metadata !"c", metadata !11, metadata !"f", metadata !11}
!10 = metadata !{i32 4, i32 0, i32 1024, null}
!11 = metadata !{metadata !"", metadata !12}
!12 = metadata !{i32 0, i32 3, i32 1024, null}
!13 = metadata !{metadata !"p", i32 1, <4 x float>* @p_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 3, i32 3, null, i32 0}
!15 = metadata !{metadata !"c", i32 1, <3 x float>* @c_typeProxy, metadata !16}
!16 = metadata !{i32 0, i32 3, i32 7, null, i32 0}
!17 = metadata !{metadata !"aiv2", i32 1, <2 x i32>* @aiv2_typeProxy, metadata !18}
!18 = metadata !{i32 0, i32 3, i32 9, null, i32 0}
!19 = metadata !{metadata !"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, metadata !20}
!20 = metadata !{i32 0, i32 3, i32 1029, null, i32 0}
!21 = metadata !{metadata !"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, metadata !22}
!22 = metadata !{i32 0, i32 3, i32 1030, null, i32 0}
!23 = metadata !{metadata !"tblock", i32 13, %Transform* @tblock_typeProxy, metadata !24, metadata !25}
!24 = metadata !{i32 7, i32 0, i32 1024, null}
!25 = metadata !{metadata !"Transform", metadata !24, metadata !"M1", metadata !26, metadata !"M2", metadata !28, metadata !"N1", metadata !26, metadata !"iuin", metadata !11}
!26 = metadata !{metadata !"", metadata !27}
!27 = metadata !{i32 2, i32 3, i32 1024, null}
!28 = metadata !{metadata !"", metadata !29}
!29 = metadata !{i32 3, i32 3, i32 1024, null}
!30 = metadata !{metadata !"", i32 13, %T3* @"anon@1_typeProxy", metadata !31, metadata !32}
!31 = metadata !{i32 6, i32 0, i32 1024, null}
!32 = metadata !{metadata !"T3", metadata !31, metadata !"M3", metadata !28, metadata !"M4", metadata !26, metadata !"N2", metadata !28, metadata !"uv3a", metadata !33}
!33 = metadata !{metadata !"", metadata !34}
!34 = metadata !{i32 1, i32 3, i32 1024, null}
!35 = metadata !{metadata !"", i32 13, %T2* @"anon@0_typeProxy", metadata !31, metadata !36}
!36 = metadata !{metadata !"T2", metadata !31, metadata !"b", metadata !37, metadata !"t2m", metadata !26}
!37 = metadata !{metadata !"", metadata !38}
!38 = metadata !{i32 0, i32 0, i32 1024, null}
!39 = metadata !{metadata !"uiuin", i32 12, i32* @uiuin_typeProxy, metadata !34}
!40 = metadata !{i32 3}
#version 300 es
// LunarGOO output
struct S {
	highp vec3 c;
	highp float f;
};
layout(std140) uniform Transform {
	layout(row_major) highp mat4 M1;
	highp mat4 M2;
	layout(row_major) highp mat3 N1;
	highp int iuin;
} tblock;
uniform T3 {
	highp mat4 M3;
	layout(row_major) highp mat4 M4;
	highp mat2x3 N2;
	highp uvec3 uv3a[4];
} ;
uniform T2 {
	bool b;
	layout(row_major) highp mat4 t2m;
} ;
uniform highp uint uiuin;
layout(location=3) in highp vec4 p;
layout(location=7) in highp vec3 c;
layout(location=9) in highp ivec2 aiv2;
out highp vec4 pos;
out highp vec3 color;
flat out highp int iout;
out S s;
const vec3 C_vec3p1d0p = vec3(1.0);
const ivec3 C_ivec3p5p = ivec3(5);

void main()
{
	highp float dotres_c1 = dot(p, ((((tblock.M1[0] + tblock.M2[0]) + M4[0]) + M3[0]) + t2m[0]));
	highp float dotres_c2 = dot(p, ((((tblock.M1[1] + tblock.M2[1]) + M4[1]) + M3[1]) + t2m[1]));
	highp float dotres_c3 = dot(p, ((((tblock.M1[2] + tblock.M2[2]) + M4[2]) + M3[2]) + t2m[2]));
	highp float dotres_c4 = dot(p, ((((tblock.M1[3] + tblock.M2[3]) + M4[3]) + M3[3]) + t2m[3]));
	vec4 H_44ip39 = vec4(dotres_c1, dotres_c2, dotres_c3, dotres_c4);
	pos = H_44ip39;
	highp float dotres_c5 = dot(c, tblock.N1[0]);
	highp float dotres_c6 = dot(c, tblock.N1[1]);
	highp float dotres_c7 = dot(c, tblock.N1[2]);
	vec3 H_amzmtg1 = vec3(dotres_c5, dotres_c6, dotres_c7);
	color = H_amzmtg1;
	iout = ((int(uiuin) + tblock.iuin) + aiv2.y);
	s.c = c;
	s.f = p.x;
	bool H_2qzcgy1 = any((notEqual(N2[1], C_vec3p1d0p)));
	bool H_yj41yd1 = any((notEqual(ivec3(uv3a[2]), C_ivec3p5p)));
	if ((H_2qzcgy1 || H_yj41yd1)) {
		highp vec3 H_hn1ggr = C_vec3p1d0p + c;
		s.c = H_hn1ggr;
	}
	
	
}

#version 300 es
// LunarGOO output
struct S {
	highp vec3 c;
	highp float f;
};
layout(std140) uniform Transform {
	layout(row_major) highp mat4 M1;
	highp mat4 M2;
	layout(row_major) highp mat3 N1;
	highp int iuin;
} tblock;
uniform T3 {
	highp mat4 M3;
	layout(row_major) highp mat4 M4;
	highp mat2x3 N2;
	highp uvec3 uv3a[4];
} ;
uniform T2 {
	bool b;
	layout(row_major) highp mat4 t2m;
} ;
uniform highp uint uiuin;
layout(location=3) in highp vec4 p;
layout(location=7) in highp vec3 c;
layout(location=9) in highp ivec2 aiv2;
out highp vec4 pos;
out highp vec3 color;
flat out highp int iout;
out S s;
const vec3 C_vec3p1d0p = vec3(1.0);
const ivec3 C_ivec3p5p = ivec3(5);

void main()
{
	highp float dotres_c1 = dot(p, ((((tblock.M1[0] + tblock.M2[0]) + M4[0]) + M3[0]) + t2m[0]));
	highp float dotres_c2 = dot(p, ((((tblock.M1[1] + tblock.M2[1]) + M4[1]) + M3[1]) + t2m[1]));
	highp float dotres_c3 = dot(p, ((((tblock.M1[2] + tblock.M2[2]) + M4[2]) + M3[2]) + t2m[2]));
	highp float dotres_c4 = dot(p, ((((tblock.M1[3] + tblock.M2[3]) + M4[3]) + M3[3]) + t2m[3]));
	vec4 H_44ip39 = vec4(dotres_c1, dotres_c2, dotres_c3, dotres_c4);
	pos = H_44ip39;
	highp float dotres_c5 = dot(c, tblock.N1[0]);
	highp float dotres_c6 = dot(c, tblock.N1[1]);
	highp float dotres_c7 = dot(c, tblock.N1[2]);
	vec3 H_amzmtg1 = vec3(dotres_c5, dotres_c6, dotres_c7);
	color = H_amzmtg1;
	iout = ((int(uiuin) + tblock.iuin) + aiv2.y);
	s.c = c;
	s.f = p.x;
	bool H_uc8 = any((notEqual(N2[1], C_vec3p1d0p)));
	bool H_yj_c9 = any((notEqual(ivec3(uv3a[2]), C_ivec3p5p)));
	if ((H_uc8 || H_yj_c9)) {
		highp vec3 H_hn_c10 = C_vec3p1d0p + c;
		s.c = H_hn_c10;
	}
	
	
}

