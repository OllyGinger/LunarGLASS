
Top IR:
; ModuleID = 'Glslang'

@bar = internal global float 0.000000e+00
@bigColor = external addrspace(2) constant <4 x float>
@gl_FragColor = global <4 x float> zeroinitializer
@BaseColor = global <4 x float> zeroinitializer
@d = external addrspace(2) constant float

define fastcc void @main() {
entry:
  %outColor = alloca <4 x float>
  store float 2.000000e+00, float* @bar
  %outColor1 = load <4 x float> addrspace(2)* @bigColor, !gla.uniform !1
  store <4 x float> %outColor1, <4 x float>* %outColor
  call void @"foo("()
  call void @"foo2("()
  %0 = load float* @bar
  %1 = load <4 x float>* %outColor
  %2 = extractelement <4 x float> %1, i32 0
  %3 = fadd float %2, %0
  %4 = load <4 x float>* %outColor
  %outColor2 = insertelement <4 x float> %4, float %3, i32 0
  store <4 x float> %outColor2, <4 x float>* %outColor
  %gl_FragColor = load <4 x float>* %outColor
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  br label %stage-epilogue

post-return:                                      ; No predecessors!
  unreachable

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: alwaysinline
define internal fastcc void @"foo("() #0 {
entry:
  %0 = load float* @bar
  %bar = fadd float %0, 1.000000e+00
  store float %bar, float* @bar
  ret void

post-return:                                      ; No predecessors!
  unreachable
}

; Function Attrs: alwaysinline
define internal fastcc void @"foo2("() #0 {
entry:
  %0 = load float* @bar
  %bar = fadd float %0, 1.000000e+00
  store float %bar, float* @bar
  ret void
}

attributes #0 = { alwaysinline }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !3}
!gla.outputs = !{!4}
!gla.inputs = !{!6}
!gla.noStaticUse = !{!6, !3}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"bigColor", i32 12, <4 x float>* @bigColor_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024, null}
!3 = metadata !{metadata !"d", i32 12, float* @d_typeProxy, metadata !2}
!4 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!6 = metadata !{metadata !"BaseColor", i32 1, <4 x float>* @BaseColor_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}


Bottom IR:
; ModuleID = 'Glslang'

@bigColor = external addrspace(2) constant <4 x float>
@gl_FragColor = global <4 x float> zeroinitializer
@BaseColor = global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %outColor1 = load <4 x float> addrspace(2)* @bigColor, align 16, !gla.uniform !1
  %0 = extractelement <4 x float> %outColor1, i32 0
  %1 = fadd float %0, 4.000000e+00
  %2 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %outColor1, i32 1, float %1, i32 0, float undef, i32 undef, float undef, i32 undef, float undef, i32 undef)
  store <4 x float> %2, <4 x float>* @gl_FragColor, align 16
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float>, i32, float, i32, float, i32, float, i32, float, i32) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !3}
!gla.outputs = !{!4}
!gla.inputs = !{!6}
!gla.noStaticUse = !{!6, !3}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"bigColor", i32 12, <4 x float>* @bigColor_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024, null}
!3 = metadata !{metadata !"d", i32 12, float* @d_typeProxy, metadata !2}
!4 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!6 = metadata !{metadata !"BaseColor", i32 1, <4 x float>* @BaseColor_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}
#version 120
// LunarGOO output
uniform vec4 bigColor;
uniform float d;
varying vec4 BaseColor;
const float C_4d0 = 4.0;

void main()
{
	vec4 H_wr7oya = bigColor;
	H_wr7oya.x = (bigColor.x + C_4d0);
	gl_FragColor = H_wr7oya;
	
}

#version 120
// LunarGOO output
uniform vec4 bigColor;
uniform float d;
varying vec4 BaseColor;
const float C_4d0 = 4.0;

void main()
{
	vec4 H_wr7oya = bigColor;
	H_wr7oya.x = (bigColor.x + C_4d0);
	gl_FragColor = H_wr7oya;
	
}

