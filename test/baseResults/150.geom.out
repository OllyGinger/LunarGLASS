
***Unsupported functionality: block layout

***Unsupported functionality: block layout

***Unsupported functionality: block layout

***Unsupported functionality: block layout

***Unsupported functionality: block layout

***Unsupported functionality: block layout

***Unsupported functionality: block layout

***Unsupported functionality: block layout

***Unsupported functionality: array or matrix in struct in outputs

***Unsupported functionality: block layout

***Unsupported functionality: block layout

Top IR:
; ModuleID = 'Glslang'

%fromVertex = type { <3 x float> }
%fromVertex.0 = type { <3 x float> }
%gl_PerVertex = type { <4 x float>, float, [4 x float] }
%gl_PerVertex.1 = type { <4 x float>, float, [1 x float] }
%toFragment = type { <3 x float> }

@"anon@0_shadow" = internal global %fromVertex zeroinitializer
@fromV_shadow = internal global [6 x %fromVertex.0] zeroinitializer
@"anon@1_shadow" = internal global %gl_PerVertex zeroinitializer
@in_shadow = internal global [6 x %gl_PerVertex.1] zeroinitializer
@PrimitiveID_shadow = internal global i32 0
@PrimitiveIDIn_shadow = internal global i32 0
@Layer_shadow = internal global i32 0
@toF_shadow = internal global %toFragment zeroinitializer

define fastcc void @main() {
entry:
  call void @llvm.gla.emitVertex()
  call void @llvm.gla.endPrimitive()
  %fromV = call <3 x float> @llvm.gla.fReadData.v3f32(i32 1025, i32 -1), !gla.input !17
  store <3 x float> %fromV, <3 x float>* getelementptr inbounds ([6 x %fromVertex.0]* @fromV_shadow, i32 0, i32 0, i32 0)
  %fromV1 = call <3 x float> @llvm.gla.fReadData.v3f32(i32 1026, i32 -1), !gla.input !17
  store <3 x float> %fromV1, <3 x float>* getelementptr inbounds ([6 x %fromVertex.0]* @fromV_shadow, i32 0, i32 1, i32 0)
  %fromV2 = call <3 x float> @llvm.gla.fReadData.v3f32(i32 1027, i32 -1), !gla.input !17
  store <3 x float> %fromV2, <3 x float>* getelementptr inbounds ([6 x %fromVertex.0]* @fromV_shadow, i32 0, i32 2, i32 0)
  %fromV3 = call <3 x float> @llvm.gla.fReadData.v3f32(i32 1028, i32 -1), !gla.input !17
  store <3 x float> %fromV3, <3 x float>* getelementptr inbounds ([6 x %fromVertex.0]* @fromV_shadow, i32 0, i32 3, i32 0)
  %fromV4 = call <3 x float> @llvm.gla.fReadData.v3f32(i32 1029, i32 -1), !gla.input !17
  store <3 x float> %fromV4, <3 x float>* getelementptr inbounds ([6 x %fromVertex.0]* @fromV_shadow, i32 0, i32 4, i32 0)
  %fromV5 = call <3 x float> @llvm.gla.fReadData.v3f32(i32 1030, i32 -1), !gla.input !17
  store <3 x float> %fromV5, <3 x float>* getelementptr inbounds ([6 x %fromVertex.0]* @fromV_shadow, i32 0, i32 5, i32 0)
  %0 = load <3 x float>* getelementptr inbounds ([6 x %fromVertex.0]* @fromV_shadow, i32 0, i32 0, i32 0)
  store <3 x float> %0, <3 x float>* getelementptr inbounds (%fromVertex* @"anon@0_shadow", i32 0, i32 0)
  %gl_in = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1037, i32 -1), !gla.input !19
  store <4 x float> %gl_in, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 0)
  %gl_in6 = call float @llvm.gla.fReadData.f32(i32 1038, i32 -1), !gla.input !19
  store float %gl_in6, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 1)
  %gl_in7 = call float @llvm.gla.fReadData.f32(i32 1039, i32 -1), !gla.input !19
  store float %gl_in7, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 2, i32 0)
  %gl_in8 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1040, i32 -1), !gla.input !19
  store <4 x float> %gl_in8, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 0)
  %gl_in9 = call float @llvm.gla.fReadData.f32(i32 1041, i32 -1), !gla.input !19
  store float %gl_in9, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 1)
  %gl_in10 = call float @llvm.gla.fReadData.f32(i32 1042, i32 -1), !gla.input !19
  store float %gl_in10, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 2, i32 0)
  %gl_in11 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1043, i32 -1), !gla.input !19
  store <4 x float> %gl_in11, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 0)
  %gl_in12 = call float @llvm.gla.fReadData.f32(i32 1044, i32 -1), !gla.input !19
  store float %gl_in12, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 1)
  %gl_in13 = call float @llvm.gla.fReadData.f32(i32 1045, i32 -1), !gla.input !19
  store float %gl_in13, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 2, i32 0)
  %gl_in14 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1046, i32 -1), !gla.input !19
  store <4 x float> %gl_in14, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 0)
  %gl_in15 = call float @llvm.gla.fReadData.f32(i32 1047, i32 -1), !gla.input !19
  store float %gl_in15, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 1)
  %gl_in16 = call float @llvm.gla.fReadData.f32(i32 1048, i32 -1), !gla.input !19
  store float %gl_in16, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 2, i32 0)
  %gl_in17 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1049, i32 -1), !gla.input !19
  store <4 x float> %gl_in17, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 0)
  %gl_in18 = call float @llvm.gla.fReadData.f32(i32 1050, i32 -1), !gla.input !19
  store float %gl_in18, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 1)
  %gl_in19 = call float @llvm.gla.fReadData.f32(i32 1051, i32 -1), !gla.input !19
  store float %gl_in19, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 2, i32 0)
  %gl_in20 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1052, i32 -1), !gla.input !19
  store <4 x float> %gl_in20, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 0)
  %gl_in21 = call float @llvm.gla.fReadData.f32(i32 1053, i32 -1), !gla.input !19
  store float %gl_in21, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 1)
  %gl_in22 = call float @llvm.gla.fReadData.f32(i32 1054, i32 -1), !gla.input !19
  store float %gl_in22, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 2, i32 0)
  %1 = load float* getelementptr ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 2, i32 2)
  store float %1, float* getelementptr inbounds (%gl_PerVertex* @"anon@1_shadow", i32 0, i32 2, i32 3)
  %gl_in23 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1037, i32 -1), !gla.input !19
  store <4 x float> %gl_in23, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 0)
  %gl_in24 = call float @llvm.gla.fReadData.f32(i32 1038, i32 -1), !gla.input !19
  store float %gl_in24, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 1)
  %gl_in25 = call float @llvm.gla.fReadData.f32(i32 1039, i32 -1), !gla.input !19
  store float %gl_in25, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 2, i32 0)
  %gl_in26 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1040, i32 -1), !gla.input !19
  store <4 x float> %gl_in26, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 0)
  %gl_in27 = call float @llvm.gla.fReadData.f32(i32 1041, i32 -1), !gla.input !19
  store float %gl_in27, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 1)
  %gl_in28 = call float @llvm.gla.fReadData.f32(i32 1042, i32 -1), !gla.input !19
  store float %gl_in28, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 2, i32 0)
  %gl_in29 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1043, i32 -1), !gla.input !19
  store <4 x float> %gl_in29, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 0)
  %gl_in30 = call float @llvm.gla.fReadData.f32(i32 1044, i32 -1), !gla.input !19
  store float %gl_in30, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 1)
  %gl_in31 = call float @llvm.gla.fReadData.f32(i32 1045, i32 -1), !gla.input !19
  store float %gl_in31, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 2, i32 0)
  %gl_in32 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1046, i32 -1), !gla.input !19
  store <4 x float> %gl_in32, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 0)
  %gl_in33 = call float @llvm.gla.fReadData.f32(i32 1047, i32 -1), !gla.input !19
  store float %gl_in33, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 1)
  %gl_in34 = call float @llvm.gla.fReadData.f32(i32 1048, i32 -1), !gla.input !19
  store float %gl_in34, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 2, i32 0)
  %gl_in35 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1049, i32 -1), !gla.input !19
  store <4 x float> %gl_in35, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 0)
  %gl_in36 = call float @llvm.gla.fReadData.f32(i32 1050, i32 -1), !gla.input !19
  store float %gl_in36, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 1)
  %gl_in37 = call float @llvm.gla.fReadData.f32(i32 1051, i32 -1), !gla.input !19
  store float %gl_in37, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 2, i32 0)
  %gl_in38 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1052, i32 -1), !gla.input !19
  store <4 x float> %gl_in38, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 0)
  %gl_in39 = call float @llvm.gla.fReadData.f32(i32 1053, i32 -1), !gla.input !19
  store float %gl_in39, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 1)
  %gl_in40 = call float @llvm.gla.fReadData.f32(i32 1054, i32 -1), !gla.input !19
  store float %gl_in40, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 2, i32 0)
  %2 = load <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 0)
  store <4 x float> %2, <4 x float>* getelementptr inbounds (%gl_PerVertex* @"anon@1_shadow", i32 0, i32 0)
  %gl_in41 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1037, i32 -1), !gla.input !19
  store <4 x float> %gl_in41, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 0)
  %gl_in42 = call float @llvm.gla.fReadData.f32(i32 1038, i32 -1), !gla.input !19
  store float %gl_in42, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 1)
  %gl_in43 = call float @llvm.gla.fReadData.f32(i32 1039, i32 -1), !gla.input !19
  store float %gl_in43, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 2, i32 0)
  %gl_in44 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1040, i32 -1), !gla.input !19
  store <4 x float> %gl_in44, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 0)
  %gl_in45 = call float @llvm.gla.fReadData.f32(i32 1041, i32 -1), !gla.input !19
  store float %gl_in45, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 1)
  %gl_in46 = call float @llvm.gla.fReadData.f32(i32 1042, i32 -1), !gla.input !19
  store float %gl_in46, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 2, i32 0)
  %gl_in47 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1043, i32 -1), !gla.input !19
  store <4 x float> %gl_in47, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 0)
  %gl_in48 = call float @llvm.gla.fReadData.f32(i32 1044, i32 -1), !gla.input !19
  store float %gl_in48, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 1)
  %gl_in49 = call float @llvm.gla.fReadData.f32(i32 1045, i32 -1), !gla.input !19
  store float %gl_in49, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 2, i32 0)
  %gl_in50 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1046, i32 -1), !gla.input !19
  store <4 x float> %gl_in50, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 0)
  %gl_in51 = call float @llvm.gla.fReadData.f32(i32 1047, i32 -1), !gla.input !19
  store float %gl_in51, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 1)
  %gl_in52 = call float @llvm.gla.fReadData.f32(i32 1048, i32 -1), !gla.input !19
  store float %gl_in52, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 2, i32 0)
  %gl_in53 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1049, i32 -1), !gla.input !19
  store <4 x float> %gl_in53, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 0)
  %gl_in54 = call float @llvm.gla.fReadData.f32(i32 1050, i32 -1), !gla.input !19
  store float %gl_in54, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 1)
  %gl_in55 = call float @llvm.gla.fReadData.f32(i32 1051, i32 -1), !gla.input !19
  store float %gl_in55, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 2, i32 0)
  %gl_in56 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1052, i32 -1), !gla.input !19
  store <4 x float> %gl_in56, <4 x float>* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 0)
  %gl_in57 = call float @llvm.gla.fReadData.f32(i32 1053, i32 -1), !gla.input !19
  store float %gl_in57, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 1)
  %gl_in58 = call float @llvm.gla.fReadData.f32(i32 1054, i32 -1), !gla.input !19
  store float %gl_in58, float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 2, i32 0)
  %3 = load float* getelementptr inbounds ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 1)
  store float %3, float* getelementptr inbounds (%gl_PerVertex* @"anon@1_shadow", i32 0, i32 1)
  %gl_PrimitiveIDIn = call i32 @llvm.gla.readData.i32(i32 1056, i32 -1), !gla.input !21
  store i32 %gl_PrimitiveIDIn, i32* @PrimitiveIDIn_shadow
  %PrimitiveID_shadow = load i32* @PrimitiveIDIn_shadow
  store i32 %PrimitiveID_shadow, i32* @PrimitiveID_shadow
  store i32 2, i32* @Layer_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %4 = load <3 x float>* getelementptr inbounds (%fromVertex* @"anon@0_shadow", i32 0, i32 0)
  call void @llvm.gla.fWriteData.v3f32(i32 1024, i32 -1, <3 x float> %4), !gla.output !1
  %5 = load <4 x float>* getelementptr inbounds (%gl_PerVertex* @"anon@1_shadow", i32 0, i32 0)
  call void @llvm.gla.fWriteData.v4f32(i32 1031, i32 -1, <4 x float> %5), !gla.output !7
  %6 = load float* getelementptr inbounds (%gl_PerVertex* @"anon@1_shadow", i32 0, i32 1)
  call void @llvm.gla.fWriteData.f32(i32 1032, i32 -1, float %6), !gla.output !7
  %7 = load [4 x float]* getelementptr inbounds (%gl_PerVertex* @"anon@1_shadow", i32 0, i32 2)
  %8 = load i32* @PrimitiveID_shadow
  call void @llvm.gla.writeData.i32(i32 1055, i32 -1, i32 %8), !gla.output !10
  %9 = load i32* @Layer_shadow
  call void @llvm.gla.writeData.i32(i32 1057, i32 -1, i32 %9), !gla.output !12
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind
declare void @llvm.gla.emitVertex() #0

; Function Attrs: nounwind
declare void @llvm.gla.endPrimitive() #0

; Function Attrs: nounwind readonly
declare <3 x float> @llvm.gla.fReadData.v3f32(i32, i32) #1

; Function Attrs: nounwind readonly
declare <4 x float> @llvm.gla.fReadData.v4f32(i32, i32) #1

; Function Attrs: nounwind readonly
declare float @llvm.gla.fReadData.f32(i32, i32) #1

; Function Attrs: nounwind readonly
declare i32 @llvm.gla.readData.i32(i32, i32) #1

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v3f32(i32, i32, <3 x float>) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.f32(i32, i32, float) #0

; Function Attrs: nounwind
declare void @llvm.gla.writeData.i32(i32, i32, i32) #0

attributes #0 = { nounwind }
attributes #1 = { nounwind readonly }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !7, !10, !12, !14}
!gla.inputs = !{!17, !19, !21}
!gla.noStaticUse = !{!14}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"anon@0", i32 7, %fromVertex* @"anon@0_shadow_typeProxy", metadata !2, metadata !3}
!2 = metadata !{i32 6, i32 0, i32 1024, null, i32 0}
!3 = metadata !{metadata !"fromVertex", metadata !4, metadata !"color", metadata !5}
!4 = metadata !{i32 6, i32 0, i32 1024, null}
!5 = metadata !{metadata !"", metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1024, null}
!7 = metadata !{metadata !"anon@1", i32 7, %gl_PerVertex* @"anon@1_shadow_typeProxy", metadata !8, metadata !9}
!8 = metadata !{i32 6, i32 0, i32 1031, null, i32 0}
!9 = metadata !{metadata !"gl_PerVertex", metadata !4, metadata !"gl_Position", metadata !5, metadata !"gl_PointSize", metadata !5, metadata !"gl_ClipDistance", metadata !5}
!10 = metadata !{metadata !"gl_PrimitiveID", i32 7, i32* @PrimitiveID_shadow_typeProxy, metadata !11}
!11 = metadata !{i32 0, i32 0, i32 1055, null, i32 0}
!12 = metadata !{metadata !"gl_Layer", i32 7, i32* @Layer_shadow_typeProxy, metadata !13}
!13 = metadata !{i32 0, i32 0, i32 1057, null, i32 0}
!14 = metadata !{metadata !"toF", i32 7, %toFragment* @toF_shadow_typeProxy, metadata !15, metadata !16}
!15 = metadata !{i32 6, i32 0, i32 1058, null, i32 0}
!16 = metadata !{metadata !"toFragment", metadata !4, metadata !"color", metadata !5}
!17 = metadata !{metadata !"fromV", i32 1, [6 x %fromVertex.0]* @fromV_shadow_typeProxy, metadata !18, metadata !3}
!18 = metadata !{i32 6, i32 0, i32 1025, null, i32 0}
!19 = metadata !{metadata !"gl_in", i32 1, [6 x %gl_PerVertex.1]* @in_shadow_typeProxy, metadata !20, metadata !9}
!20 = metadata !{i32 6, i32 0, i32 1037, null, i32 0}
!21 = metadata !{metadata !"gl_PrimitiveIDIn", i32 1, i32* @PrimitiveIDIn_shadow_typeProxy, metadata !22}
!22 = metadata !{i32 0, i32 0, i32 1056, null, i32 0}


Bottom IR:
; ModuleID = 'Glslang'

%fromVertex = type { <3 x float> }
%gl_PerVertex = type { <4 x float>, float, [4 x float] }
%gl_PerVertex.1 = type { <4 x float>, float, [1 x float] }

@"anon@0_shadow" = internal unnamed_addr global %fromVertex zeroinitializer
@"anon@1_shadow" = internal unnamed_addr global %gl_PerVertex zeroinitializer
@in_shadow = internal unnamed_addr global [6 x %gl_PerVertex.1] zeroinitializer

define fastcc void @main() {
entry:
  call void @llvm.gla.emitVertex()
  call void @llvm.gla.endPrimitive()
  %fromV = call <3 x float> @llvm.gla.fReadData.v3f32(i32 1025, i32 -1), !gla.input !17
  %gla_constGEP = getelementptr %fromVertex* @"anon@0_shadow", i32 0, i32 0
  store <3 x float> %fromV, <3 x float>* %gla_constGEP, align 16
  %gl_in = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1037, i32 -1), !gla.input !19
  %gla_constGEP60 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 0
  store <4 x float> %gl_in, <4 x float>* %gla_constGEP60, align 16
  %gl_in6 = call float @llvm.gla.fReadData.f32(i32 1038, i32 -1), !gla.input !19
  %gla_constGEP61 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 1
  store float %gl_in6, float* %gla_constGEP61, align 16
  %gl_in7 = call float @llvm.gla.fReadData.f32(i32 1039, i32 -1), !gla.input !19
  %gla_constGEP62 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 2, i32 0
  store float %gl_in7, float* %gla_constGEP62, align 4
  %gl_in8 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1040, i32 -1), !gla.input !19
  %gla_constGEP63 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 0
  store <4 x float> %gl_in8, <4 x float>* %gla_constGEP63, align 16
  %gl_in9 = call float @llvm.gla.fReadData.f32(i32 1041, i32 -1), !gla.input !19
  %gla_constGEP64 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 1
  store float %gl_in9, float* %gla_constGEP64, align 16
  %gl_in10 = call float @llvm.gla.fReadData.f32(i32 1042, i32 -1), !gla.input !19
  %gla_constGEP65 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 2, i32 0
  store float %gl_in10, float* %gla_constGEP65, align 4
  %gl_in11 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1043, i32 -1), !gla.input !19
  %gla_constGEP66 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 0
  store <4 x float> %gl_in11, <4 x float>* %gla_constGEP66, align 16
  %gl_in12 = call float @llvm.gla.fReadData.f32(i32 1044, i32 -1), !gla.input !19
  %gla_constGEP67 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 1
  store float %gl_in12, float* %gla_constGEP67, align 16
  %gl_in13 = call float @llvm.gla.fReadData.f32(i32 1045, i32 -1), !gla.input !19
  %gla_constGEP68 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 2, i32 0
  store float %gl_in13, float* %gla_constGEP68, align 4
  %gl_in14 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1046, i32 -1), !gla.input !19
  %gla_constGEP69 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 0
  store <4 x float> %gl_in14, <4 x float>* %gla_constGEP69, align 16
  %gl_in15 = call float @llvm.gla.fReadData.f32(i32 1047, i32 -1), !gla.input !19
  %gla_constGEP70 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 1
  store float %gl_in15, float* %gla_constGEP70, align 16
  %gl_in16 = call float @llvm.gla.fReadData.f32(i32 1048, i32 -1), !gla.input !19
  %gla_constGEP71 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 2, i32 0
  store float %gl_in16, float* %gla_constGEP71, align 4
  %gl_in17 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1049, i32 -1), !gla.input !19
  %gla_constGEP72 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 0
  store <4 x float> %gl_in17, <4 x float>* %gla_constGEP72, align 16
  %gl_in18 = call float @llvm.gla.fReadData.f32(i32 1050, i32 -1), !gla.input !19
  %gla_constGEP73 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 1
  store float %gl_in18, float* %gla_constGEP73, align 16
  %gl_in19 = call float @llvm.gla.fReadData.f32(i32 1051, i32 -1), !gla.input !19
  %gla_constGEP74 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 2, i32 0
  store float %gl_in19, float* %gla_constGEP74, align 4
  %gl_in20 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1052, i32 -1), !gla.input !19
  %gla_constGEP75 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 0
  store <4 x float> %gl_in20, <4 x float>* %gla_constGEP75, align 16
  %gl_in21 = call float @llvm.gla.fReadData.f32(i32 1053, i32 -1), !gla.input !19
  %gla_constGEP76 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 1
  store float %gl_in21, float* %gla_constGEP76, align 16
  %gl_in22 = call float @llvm.gla.fReadData.f32(i32 1054, i32 -1), !gla.input !19
  %gla_constGEP77 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 2, i32 0
  store float %gl_in22, float* %gla_constGEP77, align 4
  %0 = load float* getelementptr ([6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 2, i32 2), align 4
  %gla_constGEP78 = getelementptr %gl_PerVertex* @"anon@1_shadow", i32 0, i32 2, i32 3
  store float %0, float* %gla_constGEP78, align 4
  %gl_in23 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1037, i32 -1), !gla.input !19
  %gla_constGEP79 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 0
  store <4 x float> %gl_in23, <4 x float>* %gla_constGEP79, align 16
  %gl_in24 = call float @llvm.gla.fReadData.f32(i32 1038, i32 -1), !gla.input !19
  %gla_constGEP80 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 1
  store float %gl_in24, float* %gla_constGEP80, align 16
  %gl_in25 = call float @llvm.gla.fReadData.f32(i32 1039, i32 -1), !gla.input !19
  %gla_constGEP81 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 2, i32 0
  store float %gl_in25, float* %gla_constGEP81, align 4
  %gl_in26 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1040, i32 -1), !gla.input !19
  %gla_constGEP82 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 0
  store <4 x float> %gl_in26, <4 x float>* %gla_constGEP82, align 16
  %gl_in27 = call float @llvm.gla.fReadData.f32(i32 1041, i32 -1), !gla.input !19
  %gla_constGEP83 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 1
  store float %gl_in27, float* %gla_constGEP83, align 16
  %gl_in28 = call float @llvm.gla.fReadData.f32(i32 1042, i32 -1), !gla.input !19
  %gla_constGEP84 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 2, i32 0
  store float %gl_in28, float* %gla_constGEP84, align 4
  %gl_in29 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1043, i32 -1), !gla.input !19
  %gla_constGEP85 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 0
  store <4 x float> %gl_in29, <4 x float>* %gla_constGEP85, align 16
  %gl_in30 = call float @llvm.gla.fReadData.f32(i32 1044, i32 -1), !gla.input !19
  %gla_constGEP86 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 1
  store float %gl_in30, float* %gla_constGEP86, align 16
  %gl_in31 = call float @llvm.gla.fReadData.f32(i32 1045, i32 -1), !gla.input !19
  %gla_constGEP87 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 2, i32 0
  store float %gl_in31, float* %gla_constGEP87, align 4
  %gl_in32 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1046, i32 -1), !gla.input !19
  %gla_constGEP88 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 0
  store <4 x float> %gl_in32, <4 x float>* %gla_constGEP88, align 16
  %gl_in33 = call float @llvm.gla.fReadData.f32(i32 1047, i32 -1), !gla.input !19
  %gla_constGEP89 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 1
  store float %gl_in33, float* %gla_constGEP89, align 16
  %gl_in34 = call float @llvm.gla.fReadData.f32(i32 1048, i32 -1), !gla.input !19
  %gla_constGEP90 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 2, i32 0
  store float %gl_in34, float* %gla_constGEP90, align 4
  %gl_in35 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1049, i32 -1), !gla.input !19
  %gla_constGEP91 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 0
  store <4 x float> %gl_in35, <4 x float>* %gla_constGEP91, align 16
  %gl_in36 = call float @llvm.gla.fReadData.f32(i32 1050, i32 -1), !gla.input !19
  %gla_constGEP92 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 1
  store float %gl_in36, float* %gla_constGEP92, align 16
  %gl_in37 = call float @llvm.gla.fReadData.f32(i32 1051, i32 -1), !gla.input !19
  %gla_constGEP93 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 2, i32 0
  store float %gl_in37, float* %gla_constGEP93, align 4
  %gl_in38 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1052, i32 -1), !gla.input !19
  %gla_constGEP94 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 0
  store <4 x float> %gl_in38, <4 x float>* %gla_constGEP94, align 16
  %gl_in39 = call float @llvm.gla.fReadData.f32(i32 1053, i32 -1), !gla.input !19
  %gla_constGEP95 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 1
  store float %gl_in39, float* %gla_constGEP95, align 16
  %gl_in40 = call float @llvm.gla.fReadData.f32(i32 1054, i32 -1), !gla.input !19
  %gla_constGEP96 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 2, i32 0
  store float %gl_in40, float* %gla_constGEP96, align 4
  %gla_constGEP97 = getelementptr %gl_PerVertex* @"anon@1_shadow", i32 0, i32 0
  store <4 x float> %gl_in23, <4 x float>* %gla_constGEP97, align 16
  %gl_in41 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1037, i32 -1), !gla.input !19
  %gla_constGEP98 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 0
  store <4 x float> %gl_in41, <4 x float>* %gla_constGEP98, align 16
  %gl_in42 = call float @llvm.gla.fReadData.f32(i32 1038, i32 -1), !gla.input !19
  %gla_constGEP99 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 1
  store float %gl_in42, float* %gla_constGEP99, align 16
  %gl_in43 = call float @llvm.gla.fReadData.f32(i32 1039, i32 -1), !gla.input !19
  %gla_constGEP100 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 0, i32 2, i32 0
  store float %gl_in43, float* %gla_constGEP100, align 4
  %gl_in44 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1040, i32 -1), !gla.input !19
  %gla_constGEP101 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 0
  store <4 x float> %gl_in44, <4 x float>* %gla_constGEP101, align 16
  %gl_in45 = call float @llvm.gla.fReadData.f32(i32 1041, i32 -1), !gla.input !19
  %gla_constGEP102 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 1
  store float %gl_in45, float* %gla_constGEP102, align 16
  %gl_in46 = call float @llvm.gla.fReadData.f32(i32 1042, i32 -1), !gla.input !19
  %gla_constGEP103 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 1, i32 2, i32 0
  store float %gl_in46, float* %gla_constGEP103, align 4
  %gl_in47 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1043, i32 -1), !gla.input !19
  %gla_constGEP104 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 0
  store <4 x float> %gl_in47, <4 x float>* %gla_constGEP104, align 16
  %gl_in48 = call float @llvm.gla.fReadData.f32(i32 1044, i32 -1), !gla.input !19
  %gla_constGEP105 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 1
  store float %gl_in48, float* %gla_constGEP105, align 16
  %gl_in49 = call float @llvm.gla.fReadData.f32(i32 1045, i32 -1), !gla.input !19
  %gla_constGEP106 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 2, i32 2, i32 0
  store float %gl_in49, float* %gla_constGEP106, align 4
  %gl_in50 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1046, i32 -1), !gla.input !19
  %gla_constGEP107 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 0
  store <4 x float> %gl_in50, <4 x float>* %gla_constGEP107, align 16
  %gl_in51 = call float @llvm.gla.fReadData.f32(i32 1047, i32 -1), !gla.input !19
  %gla_constGEP108 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 1
  store float %gl_in51, float* %gla_constGEP108, align 16
  %gl_in52 = call float @llvm.gla.fReadData.f32(i32 1048, i32 -1), !gla.input !19
  %gla_constGEP109 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 3, i32 2, i32 0
  store float %gl_in52, float* %gla_constGEP109, align 4
  %gl_in53 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1049, i32 -1), !gla.input !19
  %gla_constGEP110 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 0
  store <4 x float> %gl_in53, <4 x float>* %gla_constGEP110, align 16
  %gl_in54 = call float @llvm.gla.fReadData.f32(i32 1050, i32 -1), !gla.input !19
  %gla_constGEP111 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 1
  store float %gl_in54, float* %gla_constGEP111, align 16
  %gl_in55 = call float @llvm.gla.fReadData.f32(i32 1051, i32 -1), !gla.input !19
  %gla_constGEP112 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 4, i32 2, i32 0
  store float %gl_in55, float* %gla_constGEP112, align 4
  %gl_in56 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1052, i32 -1), !gla.input !19
  %gla_constGEP113 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 0
  store <4 x float> %gl_in56, <4 x float>* %gla_constGEP113, align 16
  %gl_in57 = call float @llvm.gla.fReadData.f32(i32 1053, i32 -1), !gla.input !19
  %gla_constGEP114 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 1
  store float %gl_in57, float* %gla_constGEP114, align 16
  %gl_in58 = call float @llvm.gla.fReadData.f32(i32 1054, i32 -1), !gla.input !19
  %gla_constGEP115 = getelementptr [6 x %gl_PerVertex.1]* @in_shadow, i32 0, i32 5, i32 2, i32 0
  store float %gl_in58, float* %gla_constGEP115, align 4
  %gla_constGEP116 = getelementptr %gl_PerVertex* @"anon@1_shadow", i32 0, i32 1
  store float %gl_in51, float* %gla_constGEP116, align 16
  %gl_PrimitiveIDIn = call i32 @llvm.gla.readData.i32(i32 1056, i32 -1), !gla.input !21
  %gla_constGEP117 = getelementptr %fromVertex* @"anon@0_shadow", i32 0, i32 0
  %1 = load <3 x float>* %gla_constGEP117, align 16
  call void @llvm.gla.fWriteData.v3f32(i32 1024, i32 -1, <3 x float> %1), !gla.output !1
  %gla_constGEP118 = getelementptr %gl_PerVertex* @"anon@1_shadow", i32 0, i32 0
  %2 = load <4 x float>* %gla_constGEP118, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1031, i32 -1, <4 x float> %2), !gla.output !7
  %gla_constGEP119 = getelementptr %gl_PerVertex* @"anon@1_shadow", i32 0, i32 1
  %3 = load float* %gla_constGEP119, align 16
  call void @llvm.gla.fWriteData.f32(i32 1032, i32 -1, float %3), !gla.output !7
  call void @llvm.gla.writeData.i32(i32 1055, i32 -1, i32 %gl_PrimitiveIDIn), !gla.output !10
  call void @llvm.gla.writeData.i32(i32 1057, i32 -1, i32 2), !gla.output !12
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind
declare void @llvm.gla.emitVertex() #0

; Function Attrs: nounwind
declare void @llvm.gla.endPrimitive() #0

; Function Attrs: nounwind readonly
declare <3 x float> @llvm.gla.fReadData.v3f32(i32, i32) #1

; Function Attrs: nounwind readonly
declare <4 x float> @llvm.gla.fReadData.v4f32(i32, i32) #1

; Function Attrs: nounwind readonly
declare float @llvm.gla.fReadData.f32(i32, i32) #1

; Function Attrs: nounwind readonly
declare i32 @llvm.gla.readData.i32(i32, i32) #1

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v3f32(i32, i32, <3 x float>) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.f32(i32, i32, float) #0

; Function Attrs: nounwind
declare void @llvm.gla.writeData.i32(i32, i32, i32) #0

attributes #0 = { nounwind }
attributes #1 = { nounwind readonly }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !7, !10, !12, !14}
!gla.inputs = !{!17, !19, !21}
!gla.noStaticUse = !{!14}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"anon@0", i32 7, %fromVertex* @"anon@0_shadow_typeProxy", metadata !2, metadata !3}
!2 = metadata !{i32 6, i32 0, i32 1024, null, i32 0}
!3 = metadata !{metadata !"fromVertex", metadata !4, metadata !"color", metadata !5}
!4 = metadata !{i32 6, i32 0, i32 1024, null}
!5 = metadata !{metadata !"", metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1024, null}
!7 = metadata !{metadata !"anon@1", i32 7, %gl_PerVertex* @"anon@1_shadow_typeProxy", metadata !8, metadata !9}
!8 = metadata !{i32 6, i32 0, i32 1031, null, i32 0}
!9 = metadata !{metadata !"gl_PerVertex", metadata !4, metadata !"gl_Position", metadata !5, metadata !"gl_PointSize", metadata !5, metadata !"gl_ClipDistance", metadata !5}
!10 = metadata !{metadata !"gl_PrimitiveID", i32 7, i32* @PrimitiveID_shadow_typeProxy, metadata !11}
!11 = metadata !{i32 0, i32 0, i32 1055, null, i32 0}
!12 = metadata !{metadata !"gl_Layer", i32 7, i32* @Layer_shadow_typeProxy, metadata !13}
!13 = metadata !{i32 0, i32 0, i32 1057, null, i32 0}
!14 = metadata !{metadata !"toF", i32 7, %toFragment* @toF_shadow_typeProxy, metadata !15, metadata !16}
!15 = metadata !{i32 6, i32 0, i32 1058, null, i32 0}
!16 = metadata !{metadata !"toFragment", metadata !4, metadata !"color", metadata !5}
!17 = metadata !{metadata !"fromV", i32 1, [6 x %fromVertex.0]* @fromV_shadow_typeProxy, metadata !18, metadata !3}
!18 = metadata !{i32 6, i32 0, i32 1025, null, i32 0}
!19 = metadata !{metadata !"gl_in", i32 1, [6 x %gl_PerVertex.1]* @in_shadow_typeProxy, metadata !20, metadata !9}
!20 = metadata !{i32 6, i32 0, i32 1037, null, i32 0}
!21 = metadata !{metadata !"gl_PrimitiveIDIn", i32 1, i32* @PrimitiveIDIn_shadow_typeProxy, metadata !22}
!22 = metadata !{i32 0, i32 0, i32 1056, null, i32 0}

***Unsupported functionality: constant load
tempglsl.geom
ERROR: #version: geometry shaders require non-es profile and version 150 or above
ERROR: 1 compilation errors.  No code generated.


