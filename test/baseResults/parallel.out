test.frag
#version 110
// LunarGOO output
uniform sampler2D texSampler2D;
uniform vec2 scale;
uniform sampler3D texSampler3D;
uniform vec4 u;
uniform float blend;
varying vec2 t;
varying vec3 coords;
const float C_1d789 = 1.789;

void main()
{
	vec4 H_ko2w861 = texture2D(texSampler2D, ((scale + t) / scale));
	vec4 H_ehrlka1 = texture3D(texSampler3D, coords);
	gl_FragColor = mix((H_ehrlka1 + H_ko2w861.wzyx), u, (blend * C_1d789));
	
}

test.vert
#version 130
// LunarGOO output
uniform mat4 transform;
in vec2 uv_in;
in vec4 position;
out vec2 uv;

void main()
{
	uv = uv_in;
	vec4 H_ksnjy81 = ftransform();
	gl_Position = (H_ksnjy81 + position);
	
}

deepRvalue.frag
#version 120
// LunarGOO output
uniform sampler2D sampler;
const vec2 C_vec2p0d5p = vec2(0.5);
const float C_0d1 = 0.1;
const float C_7d0 = 7.0;
const float C_19d0 = 19.0;
const vec4 C_yypiob1 = vec4(361.0, 841.0, 5.0, 0.0);

void main()
{
	vec4 H_wqgd641 = texture2D(sampler, C_vec2p0d5p);
	vec4 H_q57d5g1 = C_yypiob1;
	H_q57d5g1.w = ((((H_wqgd641.y > C_0d1) ? C_7d0 : C_19d0) + H_wqgd641.y) + C_7d0);
	gl_FragColor = H_q57d5g1;
	
}

block.frag
#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations
struct S {
	mediump vec4 u;
	mediump uvec4 v;
	lowp isampler2D sampler;
	mediump vec3 w;
	mediump mat3 m3a[5];
};
uniform S s;
uniform fooBlock {
	mediump vec4 bu;
	mediump vec2 bw;
	mediump uvec4 bv;
	S bs;
	mediump mat2 bm2;
	mediump mat4 m4a[8];
} ;
uniform barBlock {
	mediump vec4 nbu;
	mediump mat3 nbm;
	mediump uvec4 nbv;
	mediump int ni;
} inst[4];
out mediump vec4 color;

void main()
{
	mediump ivec4 H_rk1gxo = texture(s.sampler, bw);
	color = (((vec4(H_rk1gxo)) + inst[3].nbu) + bu);
	
}

length.frag
#version 120
// LunarGOO output
uniform vec4 u[3];
varying vec2 v[2];
const vec4 C_vec4p30d0p = vec4(30.0);

void main()
{
	gl_FragColor = C_vec4p30d0p;
	
}

matrix2.frag
#version 150 core
// LunarGOO output
uniform mat3x4 un34;
uniform mat4x3 um43;
uniform mat4 um4;
uniform mat2 um2;
uniform mat3 um3;
uniform mat3 colorTransform;
uniform mat4 m;
uniform mat4 n;
in vec4 v;
in vec3 u;
in vec3 Color;
out vec4 FragColor;
const vec4 C_dqug23 = vec4(4.3, 0.0, 0.0, 0.0);
const vec4 C_rpbzb2 = vec4(0.0, 4.3, 0.0, 0.0);
const vec4 C_1a5vcu = vec4(0.0, 0.0, 4.3, 0.0);
const float C_1d0 = 1.0;
const vec4 C_xx1m2m1 = vec4(0.0, 0.0, 0.0, 1.0);
const float C_0d0 = 0.0;

void main()
{
	vec4 H_wwcho5 = vec4((u.x * v.x), (u.x * v.y), (u.x * v.z), (u.x * v.w));
	vec4 H_4kqhq31 = vec4((u.y * v.x), (u.y * v.y), (u.y * v.z), (u.y * v.w));
	vec4 H_0t1aq2 = vec4((u.z * v.x), (u.z * v.y), (u.z * v.z), (u.z * v.w));
	vec4 column_c1 = H_wwcho5 + C_dqug23;
	vec4 column_c2 = H_4kqhq31 + C_rpbzb2;
	vec4 column_c3 = H_0t1aq2 + C_1a5vcu;
	vec4 H_f89cek1 = vec4(Color.x, Color.y, Color.z, C_1d0);
	vec4 H_9ky57s1 = vec4(dot(H_f89cek1, column_c1), dot(H_f89cek1, column_c2), dot(H_f89cek1, column_c3), C_1d0);
	FragColor = (H_9ky57s1 * H_f89cek1);
	float H_op71y21 = column_c1.x * v.x;
	float H_r6wtna = column_c1.y * v.x;
	float H_y45mdb1 = column_c1.z * v.x;
	float H_137moa = column_c1.w * v.x;
	float H_xbspvi1 = column_c2.x * v.x;
	float H_qvc0bk1 = column_c2.y * v.x;
	float H_nwu4ga1 = column_c2.z * v.x;
	float H_cwt7ee = column_c2.w * v.x;
	float H_qeu5zc = column_c3.x * v.x;
	float H_djah8n1 = column_c3.y * v.x;
	float H_ssfq2j1 = column_c3.z * v.x;
	float H_3t0f8f1 = column_c3.w * v.x;
	vec4 H_tzdsuz = vec4((((H_op71y21 * um43[0].x) + (H_xbspvi1 * um43[0].y)) + (H_qeu5zc * um43[0].z)), (((H_qvc0bk1 * um43[0].y) + (H_r6wtna * um43[0].x)) + (H_djah8n1 * um43[0].z)), (((H_nwu4ga1 * um43[0].y) + (H_y45mdb1 * um43[0].x)) + (H_ssfq2j1 * um43[0].z)), (((H_137moa * um43[0].x) + (H_cwt7ee * um43[0].y)) + (H_3t0f8f1 * um43[0].z)));
	vec4 H_rsqt46 = vec4((((H_op71y21 * um43[1].x) + (H_xbspvi1 * um43[1].y)) + (H_qeu5zc * um43[1].z)), (((H_qvc0bk1 * um43[1].y) + (H_r6wtna * um43[1].x)) + (H_djah8n1 * um43[1].z)), (((H_nwu4ga1 * um43[1].y) + (H_y45mdb1 * um43[1].x)) + (H_ssfq2j1 * um43[1].z)), (((H_137moa * um43[1].x) + (H_cwt7ee * um43[1].y)) + (H_3t0f8f1 * um43[1].z)));
	vec4 H_tx8do61 = vec4((((H_op71y21 * um43[2].x) + (H_xbspvi1 * um43[2].y)) + (H_qeu5zc * um43[2].z)), (((H_qvc0bk1 * um43[2].y) + (H_r6wtna * um43[2].x)) + (H_djah8n1 * um43[2].z)), (((H_nwu4ga1 * um43[2].y) + (H_y45mdb1 * um43[2].x)) + (H_ssfq2j1 * um43[2].z)), (((H_137moa * um43[2].x) + (H_cwt7ee * um43[2].y)) + (H_3t0f8f1 * um43[2].z)));
	vec4 H_j5d04d = vec4((((H_op71y21 * um43[3].x) + (H_xbspvi1 * um43[3].y)) + (H_qeu5zc * um43[3].z)), (((H_qvc0bk1 * um43[3].y) + (H_r6wtna * um43[3].x)) + (H_djah8n1 * um43[3].z)), (((H_nwu4ga1 * um43[3].y) + (H_y45mdb1 * um43[3].x)) + (H_ssfq2j1 * um43[3].z)), (((H_137moa * um43[3].x) + (H_cwt7ee * um43[3].y)) + (H_3t0f8f1 * um43[3].z)));
	vec4 column_c4 = H_tzdsuz + un34[0];
	vec4 column_c5 = H_rsqt46 + un34[1];
	vec4 column_c6 = H_tx8do61 + un34[2];
	vec4 column_c7 = H_j5d04d + C_xx1m2m1;
	float dotProduct_c8 = ((((C_0d0 - column_c4.x) * v.x) + ((C_0d0 - column_c5.x) * v.y)) + ((C_0d0 - column_c6.x) * v.z)) + ((C_0d0 - column_c7.x) * v.w);
	float dotProduct_c9 = ((((C_0d0 - column_c4.y) * v.x) + ((C_0d0 - column_c5.y) * v.y)) + ((C_0d0 - column_c6.y) * v.z)) + ((C_0d0 - column_c7.y) * v.w);
	float dotProduct_c10 = ((((C_0d0 - column_c4.z) * v.x) + ((C_0d0 - column_c5.z) * v.y)) + ((C_0d0 - column_c6.z) * v.z)) + ((C_0d0 - column_c7.z) * v.w);
	float dotProduct_c11 = ((((C_0d0 - column_c4.w) * v.x) + ((C_0d0 - column_c5.w) * v.y)) + ((C_0d0 - column_c6.w) * v.z)) + ((C_0d0 - column_c7.w) * v.w);
	vec4 H_0ial8t1 = vec4(dotProduct_c8, dotProduct_c9, dotProduct_c10, dotProduct_c11);
	vec4 FragColor_c12 = FragColor + H_0ial8t1;
	vec4 H_sfehxf = vec4(dot(FragColor_c12, (column_c4 * column_c4)), dot(FragColor_c12, (column_c5 * column_c5)), dot(FragColor_c12, (column_c6 * column_c6)), dot(FragColor_c12, (column_c7 * column_c7)));
	FragColor = H_sfehxf;
	vec4 H_kwzczo = vec4(um43[0].x, um43[1].x, um43[2].x, um43[3].x);
	vec4 H_kgu2311 = vec4(um43[0].y, um43[1].y, um43[2].y, um43[3].y);
	vec4 H_kv20e21 = vec4(um43[0].z, um43[1].z, um43[2].z, um43[3].z);
	vec4 H_q8vzx01 = vec4(dot(H_sfehxf, H_kwzczo), dot(H_sfehxf, H_kgu2311), dot(H_sfehxf, H_kv20e21), C_1d0);
	vec4 FragColor_c13 = H_q8vzx01 * H_sfehxf;
	FragColor = FragColor_c13;
	float H_yloywc1 = (um4[2].z * um4[3].w) - (um4[2].w * um4[3].z);
	float H_ep8nh01 = (um4[1].z * um4[3].w) - (um4[1].w * um4[3].z);
	float H_27ojg7 = (um4[1].z * um4[2].w) - (um4[1].w * um4[2].z);
	float H_6rlt5j = (um4[0].z * um4[3].w) - (um4[0].w * um4[3].z);
	float H_2uhbt = (um4[0].z * um4[2].w) - (um4[0].w * um4[2].z);
	float H_2mh3da1 = ((((H_yloywc1 * um4[1].y) - (H_ep8nh01 * um4[2].y)) + (H_27ojg7 * um4[3].y)) * um4[0].x) - ((((H_yloywc1 * um4[0].y) - (H_6rlt5j * um4[2].y)) + (H_2uhbt * um4[3].y)) * um4[1].x);
	float H_6i54511 = (um4[0].z * um4[1].w) - (um4[0].w * um4[1].z);
	float H_twzyj3 = (((((H_ep8nh01 * um4[0].y) - (H_6rlt5j * um4[1].y)) + (H_6i54511 * um4[3].y)) * um4[2].x) + H_2mh3da1) - ((((H_27ojg7 * um4[0].y) - (H_2uhbt * um4[1].y)) + (H_6i54511 * um4[2].y)) * um4[3].x);
	vec4 FragColor_c14 = FragColor_c13 * vec4(H_twzyj3);
	FragColor = FragColor_c14;
	float H_vllp48 = C_1d0 / ((um2[0].x * um2[1].y) - (um2[0].y * um2[1].x));
	vec4 H_arfio11 = vec4((H_vllp48 * um2[1].y), (C_0d0 - (H_vllp48 * um2[1].x)), (C_0d0 - (H_vllp48 * um2[0].y)), (H_vllp48 * um2[0].x));
	vec4 FragColor_c15 = FragColor_c14 * H_arfio11;
	FragColor = FragColor_c15;
	float H_1mkbji1 = (((um3[1].y * um3[2].z) - (um3[1].z * um3[2].y)) * um3[0].x) - (((um3[0].y * um3[2].z) - (um3[0].z * um3[2].y)) * um3[1].x);
	float H_2jcvmw = ((um3[0].x * um3[2].y) - (um3[0].y * um3[2].x)) * (C_1d0 / ((((um3[0].y * um3[1].z) - (um3[0].z * um3[1].y)) * um3[2].x) + H_1mkbji1));
	vec4 FragColor_c16 = FragColor_c15 * vec4((C_0d0 - H_2jcvmw));
	FragColor = FragColor_c16;
	float H_yloywc1r = (um4[2].z * um4[3].w) - (um4[2].w * um4[3].z);
	float H_ep8nh01r = (um4[1].z * um4[3].w) - (um4[1].w * um4[3].z);
	float H_27ojg7r = (um4[1].z * um4[2].w) - (um4[1].w * um4[2].z);
	float H_nf43u81 = ((H_yloywc1r * um4[1].y) - (H_ep8nh01r * um4[2].y)) + (H_27ojg7r * um4[3].y);
	float H_6rlt5jr = (um4[0].z * um4[3].w) - (um4[0].w * um4[3].z);
	float H_2uhbtr = (um4[0].z * um4[2].w) - (um4[0].w * um4[2].z);
	float H_ot3ces = ((H_yloywc1r * um4[0].y) - (H_6rlt5jr * um4[2].y)) + (H_2uhbtr * um4[3].y);
	float H_6i54511r = (um4[0].z * um4[1].w) - (um4[0].w * um4[1].z);
	float H_3evi72 = ((H_ep8nh01r * um4[0].y) - (H_6rlt5jr * um4[1].y)) + (H_6i54511r * um4[3].y);
	float H_or0i3a = ((H_27ojg7r * um4[0].y) - (H_2uhbtr * um4[1].y)) + (H_6i54511r * um4[2].y);
	float H_8ublbb1 = (um4[2].y * um4[3].w) - (um4[2].w * um4[3].y);
	float H_496zct1 = (um4[1].y * um4[3].w) - (um4[1].w * um4[3].y);
	float H_ci2qh9 = (um4[1].y * um4[2].w) - (um4[1].w * um4[2].y);
	float H_g0anmh = (um4[0].y * um4[3].w) - (um4[0].w * um4[3].y);
	float H_w0ppsb = (um4[0].y * um4[2].w) - (um4[0].w * um4[2].y);
	float H_8x3jkm1 = (um4[0].y * um4[1].w) - (um4[0].w * um4[1].y);
	float H_m3wxf3 = (um4[2].y * um4[3].z) - (um4[2].z * um4[3].y);
	float H_q2bufm1 = (um4[1].y * um4[3].z) - (um4[1].z * um4[3].y);
	float H_u72ps6 = (um4[1].y * um4[2].z) - (um4[1].z * um4[2].y);
	float H_61h4vd1 = (um4[0].y * um4[3].z) - (um4[0].z * um4[3].y);
	float H_216jjw1 = (um4[0].y * um4[2].z) - (um4[0].z * um4[2].y);
	float H_e5esgq1 = (um4[0].y * um4[1].z) - (um4[0].z * um4[1].y);
	float H_fax1xk1 = C_1d0 / ((((H_nf43u81 * um4[0].x) - (H_ot3ces * um4[1].x)) + (H_3evi72 * um4[2].x)) - (H_or0i3a * um4[3].x));
	vec4 H_6jr2cu = vec4((H_fax1xk1 * H_nf43u81), (C_0d0 - (H_fax1xk1 * H_ot3ces)), (H_3evi72 * H_fax1xk1), (C_0d0 - (H_fax1xk1 * H_or0i3a)));
	vec4 H_sf109r1 = vec4((C_0d0 - ((((H_yloywc1r * um4[1].x) - (H_ep8nh01r * um4[2].x)) + (H_27ojg7r * um4[3].x)) * H_fax1xk1)), ((((H_yloywc1r * um4[0].x) - (H_6rlt5jr * um4[2].x)) + (H_2uhbtr * um4[3].x)) * H_fax1xk1), (C_0d0 - ((((H_ep8nh01r * um4[0].x) - (H_6rlt5jr * um4[1].x)) + (H_6i54511r * um4[3].x)) * H_fax1xk1)), ((((H_27ojg7r * um4[0].x) - (H_2uhbtr * um4[1].x)) + (H_6i54511r * um4[2].x)) * H_fax1xk1));
	vec4 H_y0wm3y = vec4(((((H_8ublbb1 * um4[1].x) - (H_496zct1 * um4[2].x)) + (H_ci2qh9 * um4[3].x)) * H_fax1xk1), (C_0d0 - ((((H_8ublbb1 * um4[0].x) - (H_g0anmh * um4[2].x)) + (H_w0ppsb * um4[3].x)) * H_fax1xk1)), ((((H_496zct1 * um4[0].x) - (H_g0anmh * um4[1].x)) + (H_8x3jkm1 * um4[3].x)) * H_fax1xk1), (C_0d0 - ((((H_ci2qh9 * um4[0].x) - (H_w0ppsb * um4[1].x)) + (H_8x3jkm1 * um4[2].x)) * H_fax1xk1)));
	vec4 H_y9li5l = vec4((C_0d0 - ((((H_m3wxf3 * um4[1].x) - (H_q2bufm1 * um4[2].x)) + (H_u72ps6 * um4[3].x)) * H_fax1xk1)), ((((H_m3wxf3 * um4[0].x) - (H_61h4vd1 * um4[2].x)) + (H_216jjw1 * um4[3].x)) * H_fax1xk1), (C_0d0 - ((((H_q2bufm1 * um4[0].x) - (H_61h4vd1 * um4[1].x)) + (H_e5esgq1 * um4[3].x)) * H_fax1xk1)), ((((H_u72ps6 * um4[0].x) - (H_216jjw1 * um4[1].x)) + (H_e5esgq1 * um4[2].x)) * H_fax1xk1));
	float dotres_c17 = dot(FragColor_c16, H_y9li5l);
	vec4 H_dshyf81 = vec4(dot(FragColor_c16, H_6jr2cu), dot(FragColor_c16, H_sf109r1), dot(FragColor_c16, H_y0wm3y), dotres_c17);
	FragColor = H_dshyf81;
	vec4 H_28ycva = vec4(dot(H_dshyf81, (un34[0] * un34[0])), dot(H_dshyf81, (un34[1] * un34[1])), dot(H_dshyf81, (un34[2] * un34[2])), dotres_c17);
	FragColor = H_28ycva;
	
}

matrixAgg.frag
#version 120
// LunarGOO output
struct s {
	int count;
	mat4x3 sm[12];
};
uniform s us;
uniform int i;
uniform mat4x3 am[8];
uniform mat4x3 m;
varying vec3 v;

void main()
{
	vec4 H_cmtuxr = vec4(dot(v, (am[4][0] + us.sm[i][0])), dot(v, (am[4][1] + us.sm[i][1])), dot(v, (am[4][2] + us.sm[i][2])), dot(v, (am[4][3] + us.sm[i][3])));
	gl_FragColor = H_cmtuxr;
	
}

texture.frag
#version 130
// LunarGOO output
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
uniform vec4 u;
uniform float blend;
uniform vec2 scale;
in vec2 coords2D;
in vec2 t;
const float C_1d789 = 1.789;
const float C_2d0 = 2.0;
const vec4 C_gyy781 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 C_t1ff8m1 = vec3(1.789, 2.718, 3.453);
const ivec2 C_ivec2p0ca5p = ivec2(0, 5);
const int C_1 = 1;
const ivec2 C_oezkvl1 = ivec2(3, -7);
const float C_3d0 = 3.0;

void main()
{
	vec4 H_c54nid1 = texture(texSampler1D, C_1d789);
	vec4 H_ixrwd6 = texture(texSampler1D, C_1d789, C_2d0);
	vec4 H_qegvgw1 = textureProj(texSampler1D, coords2D);
	vec4 H_5gs61 = textureProj(texSampler1D, C_gyy781);
	vec4 H_8ux9bg = textureProj(texSampler1D, coords2D, C_2d0);
	vec4 H_pploon = textureProj(texSampler1D, C_gyy781, C_2d0);
	vec4 H_st59sq = texture(texSampler2D, coords2D);
	vec4 H_y1istq1 = texture(texSampler2D, coords2D, C_2d0);
	vec4 H_cjc7ui = textureProj(texSampler2D, C_t1ff8m1);
	vec4 H_q8kxxe1 = textureProj(texSampler2D, C_gyy781, C_2d0);
	vec4 color_c1 = ((((((((H_c54nid1 + H_ixrwd6) + H_qegvgw1) + H_5gs61) + H_8ux9bg) + H_pploon) + H_st59sq) + H_y1istq1) + H_cjc7ui) + H_q8kxxe1;
	vec4 H_4wm8jg1 = texture(texSampler3D, C_t1ff8m1);
	vec4 H_y6pwuo1 = texture(texSampler3D, C_t1ff8m1, C_2d0);
	vec4 H_rhvzmb1 = textureProj(texSampler3D, C_gyy781);
	vec4 H_ncpn5u1 = textureProj(texSampler3D, C_gyy781, C_2d0);
	vec4 H_m659dg = texture(texSamplerCube, C_t1ff8m1);
	vec4 H_c4wfoz = texture(texSamplerCube, C_t1ff8m1, C_2d0);
	vec4 H_5zg3xx1 = shadow1D(shadowSampler1D, C_t1ff8m1);
	vec4 H_pszjph1 = shadow1D(shadowSampler1D, C_t1ff8m1, C_2d0);
	vec4 H_xu0mzx = shadow2D(shadowSampler2D, C_t1ff8m1);
	vec4 color_c2 = ((((((((H_4wm8jg1 + color_c1) + H_y6pwuo1) + H_rhvzmb1) + H_ncpn5u1) + H_m659dg) + H_c4wfoz) + H_5zg3xx1) + H_pszjph1) + H_xu0mzx;
	vec4 H_5n7yy21 = shadow2D(shadowSampler2D, C_t1ff8m1, C_2d0);
	vec4 H_acrfl9 = shadow1DProj(shadowSampler1D, C_gyy781);
	vec4 H_kpuwh81 = shadow1DProj(shadowSampler1D, C_gyy781, C_2d0);
	vec4 H_mj2lr4 = shadow2DProj(shadowSampler2D, C_gyy781);
	vec4 H_4rdrg21 = shadow2DProj(shadowSampler2D, C_gyy781, C_2d0);
	vec4 H_mlyi8l1 = texelFetch(texSampler2D, C_ivec2p0ca5p, C_1);
	vec4 H_58znf61 = textureGrad(texSampler2D, coords2D, dFdx(coords2D), dFdy(coords2D));
	vec3 H_qoi6ir1 = vec3(coords2D.x, coords2D.y, C_2d0);
	vec4 H_6jjgmc = textureProjGrad(texSampler2D, H_qoi6ir1, dFdx(coords2D), dFdy(coords2D));
	vec4 H_2xa0hh1 = textureGradOffset(texSampler2D, coords2D, dFdx(coords2D), dFdy(coords2D), C_oezkvl1);
	vec4 color_c3 = ((((((((H_5n7yy21 + color_c2) + H_acrfl9) + H_kpuwh81) + H_mj2lr4) + H_4rdrg21) + H_mlyi8l1) + H_58znf61) + H_6jjgmc) + H_2xa0hh1;
	vec4 H_4znut41 = textureProjGradOffset(texSampler2D, C_t1ff8m1, dFdx(coords2D), dFdy(coords2D), C_oezkvl1);
	vec3 H_7u8f7h1 = vec3(coords2D.x, coords2D.y, C_3d0);
	float H_1z6kz6 = textureGrad(shadowSampler2D, H_7u8f7h1, dFdx(coords2D), dFdy(coords2D));
	gl_FragColor = mix(((H_4znut41 + color_c3) + vec4(H_1z6kz6)), u, (C_1d789 * blend));
	
}

texture.vert
#version 130
// LunarGOO output
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
in vec2 coords2D;
const float C_1d789 = 1.789;
const float C_3d0 = 3.0;
const vec4 C_gyy781 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 C_t1ff8m1 = vec3(1.789, 2.718, 3.453);

void main()
{
	vec4 H_0qpvtx1 = textureLod(texSampler1D, C_1d789, C_3d0);
	vec4 H_yvk8wl1 = textureProjLod(texSampler1D, coords2D, C_3d0);
	vec4 H_3r4t23 = textureProjLod(texSampler1D, C_gyy781, C_3d0);
	vec4 H_i6hmcl1 = textureLod(texSampler2D, coords2D, C_3d0);
	vec4 H_2dlp3 = textureProjLod(texSampler2D, C_t1ff8m1, C_3d0);
	vec4 H_0sz3ml = textureProjLod(texSampler2D, C_gyy781, C_3d0);
	vec4 H_881hky1 = textureLod(texSampler3D, C_t1ff8m1, C_3d0);
	vec4 H_1nxs6l = textureProjLod(texSampler3D, C_gyy781, C_3d0);
	vec4 H_e1rooj = textureLod(texSamplerCube, C_t1ff8m1, C_3d0);
	vec4 H_dvhnv41 = shadow1DLod(shadowSampler1D, C_t1ff8m1, C_3d0);
	vec4 color_c1 = ((((((((H_0qpvtx1 + H_yvk8wl1) + H_3r4t23) + H_i6hmcl1) + H_2dlp3) + H_0sz3ml) + H_881hky1) + H_1nxs6l) + H_e1rooj) + H_dvhnv41;
	vec4 H_3aj8jo1 = shadow2DLod(shadowSampler2D, C_t1ff8m1, C_3d0);
	vec4 H_cjdt3q1 = shadow1DProjLod(shadowSampler1D, C_gyy781, C_3d0);
	vec4 H_a9un4x = shadow2DProjLod(shadowSampler2D, C_gyy781, C_3d0);
	gl_Position = (((H_3aj8jo1 + color_c1) + H_cjdt3q1) + H_a9un4x);
	
}

300BuiltIns.frag
#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations
uniform bvec3 bv;
uniform mediump int imin;
uniform mediump int imax;
uniform mediump uint umin;
uniform mediump uint umax;
in mediump vec3 x;
in mediump vec3 y;
flat in mediump ivec4 iv4a;
flat in mediump ivec4 iv4b;
flat in mediump uvec2 uv2x;
flat in mediump uvec2 uv2y;
flat in mediump uvec4 uv4y;
flat in mediump uint uy;
flat in mediump ivec3 iv3a;
flat in mediump ivec3 iv3b;
flat in mediump uvec2 uv2c;
in mediump float f;
in mediump vec2 v2a;
in mediump vec4 v4;
in mediump vec2 v2b;
out mediump vec4 result;
const float C_0d0 = 0.0;
const int C_0 = 0;
const vec2 C_vec2p2d0p = vec2(2.0);
const float C_0d1 = 0.1;

void main()
{
	mediump vec3 H_rsymfy = mix(x, y, bv);
	vec4 H_2f9m82 = vec4(H_rsymfy.x, H_rsymfy.y, H_rsymfy.z, C_0d0);
	mediump ivec4 isum_c1 = abs(iv4a);
	mediump ivec4 H_bh9ar6 = sign(iv4a);
	mediump ivec4 H_75gwur = min(iv4a, iv4b);
	mediump ivec4 H_vgqkyq = min(iv4a, imin);
	mediump ivec2 H_hzeqx4 = min(ivec2(uv2x), ivec2(uv2y));
	ivec4 H_4l54vw = ivec4(H_hzeqx4.x, H_hzeqx4.y, C_0, C_0);
	mediump ivec4 H_61bfck = min(ivec4(uv4y), int(uy));
	mediump ivec3 H_pf1wc21 = max(iv3a, iv3b);
	ivec4 H_9qn0ej1 = ivec4(H_pf1wc21.x, H_pf1wc21.y, H_pf1wc21.z, C_0);
	mediump ivec4 H_jsk1o8 = max(iv4a, imax);
	mediump ivec2 H_blgwez = max(ivec2(uv2x), ivec2(uv2y));
	mediump ivec2 H_t00eqj = max(ivec2(uv2x), int(uy));
	ivec4 H_t86uxe1 = ivec4(H_blgwez.x, H_blgwez.y, H_t00eqj.x, H_t00eqj.y);
	mediump ivec4 H_kqs8tt1 = clamp(iv4a, iv4a, iv4b);
	mediump ivec4 H_douq0p1 = clamp(iv4a, imin, imax);
	mediump ivec2 H_ctk6mt = clamp(ivec2(uv2x), ivec2(uv2y), ivec2(uv2c));
	ivec4 H_o4xdcc1 = ivec4(H_ctk6mt.x, H_ctk6mt.y, C_0, C_0);
	mediump ivec4 H_lgj8ul1 = clamp(ivec4(uv4y), int(umin), int(umax));
	struct  {
	vec3 member0;
	vec3 member1;
} Lg_1; Lg_1.member0 = modf(x, Lg_1.member1);
	vec4 H_ynrwua1 = vec4(Lg_1.member0.x, Lg_1.member0.y, Lg_1.member0.z, Lg_1.member1.x);
	mediump float H_u8ukc2 = trunc(f);
	mediump vec2 H_z56gqk1 = round(v2a);
	mediump vec2 H_z05d6r = roundEven(v2a);
	vec4 H_kqw9d31 = vec4(H_z56gqk1.x, H_z56gqk1.y, H_z05d6r.x, H_z05d6r.y);
	ivec4 H_plwp0g1 = ivec4((ivec2(isnan(v2a))).x, (ivec2(isnan(v2a))).y, (ivec4(isinf(v4))).x, (ivec4(isinf(v4))).y);
	mediump int H_i86q1r = floatBitsToInt(f);
	mediump ivec4 isum_c2 = ((((((((H_bh9ar6 + isum_c1) + H_75gwur) + H_vgqkyq) + H_9qn0ej1) + H_jsk1o8) + H_kqs8tt1) + H_douq0p1) + H_plwp0g1) + ivec4(H_i86q1r);
	mediump ivec4 H_4poblp1 = floatBitsToInt(v4);
	mediump vec4 H_k2uey71 = intBitsToFloat(iv4a);
	mediump vec2 H_awczdb = intBitsToFloat(ivec2(uv2c));
	vec4 H_h40lmx1 = vec4(H_awczdb.x, H_awczdb.y, C_0d0, C_0d0);
	highp int H_aqcc2q1 = int(packSnorm2x16(v2a));
	highp vec2 H_bcj1fu = unpackSnorm2x16(uint(int(uy)));
	highp int H_slyzqu1 = int(packUnorm2x16(v2a));
	highp vec2 H_pltztp1 = unpackUnorm2x16(uint(int(uy)));
	highp int H_jzskf11 = int(packHalf2x16(v2b));
	mediump vec2 H_73yecd1 = unpackHalf2x16(uint(int(uy)));
	ivec4 H_3vcyzg = ivec4(H_aqcc2q1, H_slyzqu1, H_jzskf11, C_0);
	vec4 H_wppdxa1 = vec4(H_bcj1fu.x, H_bcj1fu.y, H_pltztp1.x, H_pltztp1.y);
	vec4 H_f628sr1 = vec4(H_73yecd1.x, H_73yecd1.y, C_0d0, C_0d0);
	mediump vec4 H_5hsaaf1 = (((((((H_2f9m82 + H_ynrwua1) + vec4(H_u8ukc2)) + H_kqw9d31) + H_k2uey71) + H_h40lmx1) + H_wppdxa1) + H_f628sr1) + (vec4(isum_c2));
	mediump vec4 result_c3 = (vec4(((((((H_4l54vw + H_61bfck) + H_t86uxe1) + H_o4xdcc1) + H_lgj8ul1) + H_4poblp1) + H_3vcyzg))) + H_5hsaaf1;
	result = result_c3;
	mediump vec2 H_67d0kq1 = gl_PointCoord * C_vec2p2d0p;
	vec4 H_0wse3z = vec4(gl_PointCoord.x, gl_PointCoord.y, H_67d0kq1.x, H_67d0kq1.y);
	highp vec4 result_c4 = (H_0wse3z + gl_FragCoord) + result_c3;
	result = result_c4;
	highp float Ll_FragDepth_c5 = f + C_0d1;
	gl_FragDepth = Ll_FragDepth_c5;
	
}

300BuiltIns.vert
#version 300 es
// LunarGOO output
in mediump float ps;
const int C_2 = 2;
const int C_a10 = -10;
invariant gl_Position ;
void main()
{
	gl_Position = (vec4((float(((gl_VertexID << C_2) + C_a10)))) * vec4(ps));
	gl_PointSize = ((float(((gl_VertexID << C_2) + C_a10))) * ps);
	
}

uniformArray.frag
#version 130
// LunarGOO output
uniform vec4 color[6];
uniform vec3 inColor;
uniform float alpha[16];
uniform sampler2D texSampler2D;

void main()
{
	vec4 texColor_c1 = color[1] + color[1];
	vec3 H_4wg7yy1 = inColor + texColor_c1.xyz;
	vec4 H_fwjaas = vec4(H_4wg7yy1.x, H_4wg7yy1.y, H_4wg7yy1.z, (alpha[12] + texColor_c1.w));
	gl_FragColor = H_fwjaas;
	
}

newTexture.frag
#version 430 core
// LunarGOO output
uniform sampler2D s2D;
uniform sampler3D s3D;
uniform sampler2DArray s2DArray;
uniform sampler2DShadow s2DShadow;
uniform samplerCube sCube;
uniform sampler2DArrayShadow s2DArrayShadow;
uniform isampler2D is2D;
uniform isampler3D is3D;
uniform isamplerCube isCube;
uniform isampler2DArray is2DArray;
uniform samplerCubeShadow sCubeShadow;
uniform isampler2D is2Dms;
uniform usampler2D us2D;
uniform usampler3D us3D;
uniform usamplerCube usCube;
uniform usampler2DArray us2DArray;
in vec2 c2D;
in vec4 c4D;
in vec3 c3D;
in float c1D;
flat in ivec3 ic3D;
flat in int ic1D;
flat in ivec2 ic2D;
flat in ivec4 ic4D;
out vec4 FragData;
const float C_1d2 = 1.2;
const ivec2 C_ivec2p3p = ivec2(3);
const int C_4 = 4;
const float C_4d2 = 4.2;
const int C_2 = 2;
const float C_0d0 = 0.0;

void main()
{
	vec4 H_psozrr1 = texture(s2D, c2D);
	vec4 H_hrxjei = textureProj(s3D, c4D);
	vec4 H_zy7hav1 = textureLod(s2DArray, c3D, C_1d2);
	vec4 H_q5p9e = (H_hrxjei + H_psozrr1) + H_zy7hav1;
	float H_hjrk4h = textureOffset(s2DShadow, c3D, C_ivec2p3p, c1D);
	vec4 H_4rp6wp1 = H_q5p9e;
	H_4rp6wp1.y = (H_hjrk4h + H_q5p9e.y);
	vec4 H_8sp3bo1 = texelFetch(s3D, ic3D, ic1D);
	vec4 H_w1booj = texelFetchOffset(s2D, ic2D, C_4, ic2D);
	vec4 H_p6fxzh1 = (H_4rp6wp1 + H_8sp3bo1) + H_w1booj;
	float H_cyjcmi = textureLodOffset(s2DShadow, c3D, c1D, C_ivec2p3p);
	vec4 H_xtgpu61 = H_p6fxzh1;
	H_xtgpu61.y = (H_cyjcmi + H_p6fxzh1.y);
	vec4 H_rng2f5 = textureProjLodOffset(s2D, c3D, c1D, C_ivec2p3p);
	vec4 H_lr92sb = textureGrad(sCube, c3D, c3D, c3D);
	vec4 H_419l9v = (H_rng2f5 + H_xtgpu61) + H_lr92sb;
	float H_b9nber = textureGradOffset(s2DArrayShadow, c4D, c2D, c2D, C_ivec2p3p);
	vec4 H_567ed41 = H_419l9v;
	H_567ed41.x = (H_419l9v.x + H_b9nber);
	vec4 H_pkmpj3 = textureProjGrad(s3D, c4D, c3D, c3D);
	vec4 H_ot18mt = textureProjGradOffset(s2D, c3D, c2D, c2D, C_ivec2p3p);
	ivec4 iv_c1 = texture(is2D, c2D);
	ivec4 iv_c2 = textureProjOffset(is2D, c4D, C_ivec2p3p);
	ivec4 iv_c3 = textureProjLod(is2D, c3D, c1D);
	ivec4 iv_c4 = textureProjGrad(is2D, c3D, c2D, c2D);
	ivec4 iv_c5 = texture(is3D, c3D, C_4d2);
	vec4 H_vz5my = ((((((H_567ed41 + H_pkmpj3) + H_ot18mt) + (vec4(iv_c1))) + (vec4(iv_c2))) + (vec4(iv_c3))) + (vec4(iv_c4))) + (vec4(iv_c5));
	ivec4 iv_c6 = textureLod(isCube, c3D, c1D);
	ivec4 iv_c7 = texelFetch(is2DArray, ic3D, ic1D);
	ivec2 iv_c8 = textureSize(sCubeShadow, C_2);
	vec4 H_748b3t1 = vec4((vec2(iv_c8)).x, (vec2(iv_c8)).y, C_0d0, C_0d0);
	FragData = ((((vec4(iv_c6)) + H_vz5my) + (vec4(iv_c7))) + H_748b3t1);
	
}

qualifiers.frag
#version 430 core
// LunarGOO output
uniform vec4 buf;
uniform image2D imageVc;
uniform image2D imageVv;
uniform image2D imageVr;
uniform image2D imageVro;
uniform image2D imageVwo;
uniform image2D imageVall;
centroid in vec4 inVc;
in vec4 inVs;
flat in vec4 inVf;
noperspective in vec4 inVn;
centroid noperspective in vec4 inVcn;
sample in vec4 inV;
out vec4 outVi;
invariant outVi ;
void main()
{
	outVi = ((((inVc + inVs) + inVf) + inVn) + inVcn);
	
}

