test.frag
#version 110
// LunarGOO output
uniform sampler2D texSampler2D;
uniform vec2 scale;
uniform sampler3D texSampler3D;
uniform vec4 u;
uniform float blend;
varying vec2 t;
varying vec3 coords;
const float C_1d789 = 1.789;

void main()
{
	vec2 H_4wn73n1 = scale + t;
	vec2 H_hop76e = H_4wn73n1 / scale;
	vec4 H_y7dumr = texture2D(texSampler2D, H_hop76e);
	vec4 H_ehrlka1 = texture3D(texSampler3D, coords);
	vec4 H_ui7hl51 = H_ehrlka1 + H_y7dumr.wzyx;
	float H_lcv9ud = blend * C_1d789;
	vec4 Ll_FragColor_c1 = mix(H_ui7hl51, u, H_lcv9ud);
	gl_FragColor = Ll_FragColor_c1;
	
}

test.vert
#version 130
// LunarGOO output
uniform mat4 transform;
in vec2 uv_in;
in vec4 position;
out vec2 uv;

void main()
{
	uv = uv_in;
	vec4 H_ksnjy81 = ftransform();
	vec4 Ll_Position_c1 = H_ksnjy81 + position;
	gl_Position = Ll_Position_c1;
	
}

deepRvalue.frag
#version 120
// LunarGOO output
uniform sampler2D sampler;
const vec2 C_vec2p0d5p = vec2(0.5);
const float C_0d1 = 0.1;
const float C_7d0 = 7.0;
const float C_19d0 = 19.0;
const vec4 C_yypiob1 = vec4(361.0, 841.0, 5.0, 0.0);

void main()
{
	vec4 H_wqgd641 = texture2D(sampler, C_vec2p0d5p);
	bool H_qkexhz = H_wqgd641.y > C_0d1;
	float H_1fdumq = H_qkexhz ? C_7d0 : C_19d0;
	float H_tprxde = H_1fdumq + H_wqgd641.y;
	float H_fzxwdz = C_7d0 + H_tprxde;
	vec4 H_q57d5g1 = C_yypiob1;
	H_q57d5g1.w = H_fzxwdz;
	gl_FragColor = H_q57d5g1;
	
}

block.frag
#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations
struct S {
	mediump vec4 u;
	mediump uvec4 v;
	lowp isampler2D sampler;
	mediump vec3 w;
	mediump mat3 m3a[5];
};
uniform S s;
uniform fooBlock {
	mediump vec4 bu;
	mediump vec2 bw;
	mediump uvec4 bv;
	S bs;
	mediump mat2 bm2;
	mediump mat4 m4a[8];
} ;
uniform barBlock {
	mediump vec4 nbu;
	mediump mat3 nbm;
	mediump uvec4 nbv;
	mediump int ni;
} inst[4];
out mediump vec4 color;

void main()
{
	mediump ivec4 H_rk1gxo = texture(s.sampler, bw);
	mediump vec4 H_ha2iq6 = vec4(H_rk1gxo);
	mediump vec4 H_k8r1ny = H_ha2iq6 + inst[3].nbu;
	mediump vec4 color_c1 = H_k8r1ny + bu;
	color = color_c1;
	
}

length.frag
#version 120
// LunarGOO output
uniform vec4 u[3];
varying vec2 v[2];
const vec4 C_vec4p30d0p = vec4(30.0);

void main()
{
	gl_FragColor = C_vec4p30d0p;
	
}

matrix2.frag
#version 150 core
// LunarGOO output
uniform mat3x4 un34;
uniform mat4x3 um43;
uniform mat4 um4;
uniform mat2 um2;
uniform mat3 um3;
uniform mat3 colorTransform;
uniform mat4 m;
uniform mat4 n;
in vec4 v;
in vec3 u;
in vec3 Color;
out vec4 FragColor;
const vec4 C_dqug23 = vec4(4.3, 0.0, 0.0, 0.0);
const vec4 C_rpbzb2 = vec4(0.0, 4.3, 0.0, 0.0);
const vec4 C_1a5vcu = vec4(0.0, 0.0, 4.3, 0.0);
const float C_1d0 = 1.0;
const vec4 C_xx1m2m1 = vec4(0.0, 0.0, 0.0, 1.0);
const float C_0d0 = 0.0;

void main()
{
	float element_c1 = u.x * v.x;
	float element_c2 = u.x * v.y;
	float element_c3 = u.x * v.z;
	float element_c4 = u.x * v.w;
	vec4 H_cj1z9f = vec4(element_c1, element_c2, element_c3, element_c4);
	float element_c5 = u.y * v.x;
	float element_c6 = u.y * v.y;
	float element_c7 = u.y * v.z;
	float element_c8 = u.y * v.w;
	vec4 H_k1vh41 = vec4(element_c5, element_c6, element_c7, element_c8);
	float element_c9 = u.z * v.x;
	float element_c10 = u.z * v.y;
	float element_c11 = u.z * v.z;
	float element_c12 = u.z * v.w;
	vec4 H_5ttbik1 = vec4(element_c9, element_c10, element_c11, element_c12);
	vec4 column_c13 = H_cj1z9f + C_dqug23;
	vec4 column_c14 = H_k1vh41 + C_rpbzb2;
	vec4 column_c15 = H_5ttbik1 + C_1a5vcu;
	vec4 H_f89cek1 = vec4(Color.x, Color.y, Color.z, C_1d0);
	float dotres_c16 = dot(H_f89cek1, column_c13);
	float dotres_c17 = dot(H_f89cek1, column_c14);
	float dotres_c18 = dot(H_f89cek1, column_c15);
	vec4 H_uimhd41 = vec4(dotres_c16, dotres_c17, dotres_c18, C_1d0);
	vec4 FragColor_c19 = H_f89cek1 * H_uimhd41;
	FragColor = FragColor_c19;
	float H_h7tnz = column_c13.x * v.x;
	float H_eeiw511 = column_c13.y * v.x;
	float H_r79by01 = column_c13.z * v.x;
	float H_kyff8m = column_c13.w * v.x;
	float H_kzcfx41 = column_c14.x * v.x;
	float H_vmwyku1 = column_c14.y * v.x;
	float H_m4t4fx1 = column_c14.z * v.x;
	float H_1a5pwv1 = column_c14.w * v.x;
	float H_v7fa1b1 = column_c15.x * v.x;
	float H_kka47n = column_c15.y * v.x;
	float H_5rt8a71 = column_c15.z * v.x;
	float H_maxwsl1 = column_c15.w * v.x;
	float product_c20 = H_h7tnz * um43[0].x;
	float product_c21 = H_kzcfx41 * um43[0].y;
	float dotProduct_c22 = product_c20 + product_c21;
	float product_c23 = H_v7fa1b1 * um43[0].z;
	float dotProduct_c24 = dotProduct_c22 + product_c23;
	float product_c25 = H_eeiw511 * um43[0].x;
	float product_c26 = H_vmwyku1 * um43[0].y;
	float dotProduct_c27 = product_c25 + product_c26;
	float product_c28 = H_kka47n * um43[0].z;
	float dotProduct_c29 = dotProduct_c27 + product_c28;
	float product_c30 = H_r79by01 * um43[0].x;
	float product_c31 = H_m4t4fx1 * um43[0].y;
	float dotProduct_c32 = product_c30 + product_c31;
	float product_c33 = H_5rt8a71 * um43[0].z;
	float dotProduct_c34 = dotProduct_c32 + product_c33;
	float product_c35 = H_kyff8m * um43[0].x;
	float product_c36 = H_1a5pwv1 * um43[0].y;
	float dotProduct_c37 = product_c35 + product_c36;
	float product_c38 = H_maxwsl1 * um43[0].z;
	float dotProduct_c39 = dotProduct_c37 + product_c38;
	vec4 H_worovn = vec4(dotProduct_c24, dotProduct_c29, dotProduct_c34, dotProduct_c39);
	float product_c40 = H_h7tnz * um43[1].x;
	float product_c41 = H_kzcfx41 * um43[1].y;
	float dotProduct_c42 = product_c40 + product_c41;
	float product_c43 = H_v7fa1b1 * um43[1].z;
	float dotProduct_c44 = dotProduct_c42 + product_c43;
	float product_c45 = H_eeiw511 * um43[1].x;
	float product_c46 = H_vmwyku1 * um43[1].y;
	float dotProduct_c47 = product_c45 + product_c46;
	float product_c48 = H_kka47n * um43[1].z;
	float dotProduct_c49 = dotProduct_c47 + product_c48;
	float product_c50 = H_r79by01 * um43[1].x;
	float product_c51 = H_m4t4fx1 * um43[1].y;
	float dotProduct_c52 = product_c50 + product_c51;
	float product_c53 = H_5rt8a71 * um43[1].z;
	float dotProduct_c54 = dotProduct_c52 + product_c53;
	float product_c55 = H_kyff8m * um43[1].x;
	float product_c56 = H_1a5pwv1 * um43[1].y;
	float dotProduct_c57 = product_c55 + product_c56;
	float product_c58 = H_maxwsl1 * um43[1].z;
	float dotProduct_c59 = dotProduct_c57 + product_c58;
	vec4 H_04d1mq = vec4(dotProduct_c44, dotProduct_c49, dotProduct_c54, dotProduct_c59);
	float product_c60 = H_h7tnz * um43[2].x;
	float product_c61 = H_kzcfx41 * um43[2].y;
	float dotProduct_c62 = product_c60 + product_c61;
	float product_c63 = H_v7fa1b1 * um43[2].z;
	float dotProduct_c64 = dotProduct_c62 + product_c63;
	float product_c65 = H_eeiw511 * um43[2].x;
	float product_c66 = H_vmwyku1 * um43[2].y;
	float dotProduct_c67 = product_c65 + product_c66;
	float product_c68 = H_kka47n * um43[2].z;
	float dotProduct_c69 = dotProduct_c67 + product_c68;
	float product_c70 = H_r79by01 * um43[2].x;
	float product_c71 = H_m4t4fx1 * um43[2].y;
	float dotProduct_c72 = product_c70 + product_c71;
	float product_c73 = H_5rt8a71 * um43[2].z;
	float dotProduct_c74 = dotProduct_c72 + product_c73;
	float product_c75 = H_kyff8m * um43[2].x;
	float product_c76 = H_1a5pwv1 * um43[2].y;
	float dotProduct_c77 = product_c75 + product_c76;
	float product_c78 = H_maxwsl1 * um43[2].z;
	float dotProduct_c79 = dotProduct_c77 + product_c78;
	vec4 H_oevtjm = vec4(dotProduct_c64, dotProduct_c69, dotProduct_c74, dotProduct_c79);
	float product_c80 = H_h7tnz * um43[3].x;
	float product_c81 = H_kzcfx41 * um43[3].y;
	float dotProduct_c82 = product_c80 + product_c81;
	float product_c83 = H_v7fa1b1 * um43[3].z;
	float dotProduct_c84 = dotProduct_c82 + product_c83;
	float product_c85 = H_eeiw511 * um43[3].x;
	float product_c86 = H_vmwyku1 * um43[3].y;
	float dotProduct_c87 = product_c85 + product_c86;
	float product_c88 = H_kka47n * um43[3].z;
	float dotProduct_c89 = dotProduct_c87 + product_c88;
	float product_c90 = H_r79by01 * um43[3].x;
	float product_c91 = H_m4t4fx1 * um43[3].y;
	float dotProduct_c92 = product_c90 + product_c91;
	float product_c93 = H_5rt8a71 * um43[3].z;
	float dotProduct_c94 = dotProduct_c92 + product_c93;
	float product_c95 = H_kyff8m * um43[3].x;
	float product_c96 = H_1a5pwv1 * um43[3].y;
	float dotProduct_c97 = product_c95 + product_c96;
	float product_c98 = H_maxwsl1 * um43[3].z;
	float dotProduct_c99 = dotProduct_c97 + product_c98;
	vec4 H_omby2j = vec4(dotProduct_c84, dotProduct_c89, dotProduct_c94, dotProduct_c99);
	vec4 column_c100 = H_worovn + un34[0];
	vec4 column_c101 = H_04d1mq + un34[1];
	vec4 column_c102 = H_oevtjm + un34[2];
	vec4 column_c103 = H_omby2j + C_xx1m2m1;
	float H_fb0vs7 = C_0d0 - column_c100.x;
	float H_gmevi7 = C_0d0 - column_c100.y;
	float H_dp7uc8 = C_0d0 - column_c100.z;
	float H_i87wy6 = C_0d0 - column_c100.w;
	float H_wdwiae1 = C_0d0 - column_c101.x;
	float H_v2iike1 = C_0d0 - column_c101.y;
	float H_ur3iue1 = C_0d0 - column_c101.z;
	float H_55hmsb1 = C_0d0 - column_c101.w;
	float H_5jw8aj = C_0d0 - column_c102.x;
	float H_6ua90j = C_0d0 - column_c102.y;
	float H_75p9qi = C_0d0 - column_c102.z;
	float H_coobch = C_0d0 - column_c102.w;
	float H_uzg2yp1 = C_0d0 - column_c103.x;
	float H_to228q1 = C_0d0 - column_c103.y;
	float H_wl93ep1 = C_0d0 - column_c103.z;
	float H_7zm7cm1 = C_0d0 - column_c103.w;
	float product_c104 = H_fb0vs7 * v.x;
	float product_c105 = H_wdwiae1 * v.y;
	float dotProduct_c106 = product_c104 + product_c105;
	float product_c107 = H_5jw8aj * v.z;
	float dotProduct_c108 = dotProduct_c106 + product_c107;
	float product_c109 = H_uzg2yp1 * v.w;
	float dotProduct_c110 = dotProduct_c108 + product_c109;
	float product_c111 = H_gmevi7 * v.x;
	float product_c112 = H_v2iike1 * v.y;
	float dotProduct_c113 = product_c111 + product_c112;
	float product_c114 = H_6ua90j * v.z;
	float dotProduct_c115 = dotProduct_c113 + product_c114;
	float product_c116 = H_to228q1 * v.w;
	float dotProduct_c117 = dotProduct_c115 + product_c116;
	float product_c118 = H_dp7uc8 * v.x;
	float product_c119 = H_ur3iue1 * v.y;
	float dotProduct_c120 = product_c118 + product_c119;
	float product_c121 = H_75p9qi * v.z;
	float dotProduct_c122 = dotProduct_c120 + product_c121;
	float product_c123 = H_wl93ep1 * v.w;
	float dotProduct_c124 = dotProduct_c122 + product_c123;
	float product_c125 = H_i87wy6 * v.x;
	float product_c126 = H_55hmsb1 * v.y;
	float dotProduct_c127 = product_c125 + product_c126;
	float product_c128 = H_coobch * v.z;
	float dotProduct_c129 = dotProduct_c127 + product_c128;
	float product_c130 = H_7zm7cm1 * v.w;
	float dotProduct_c131 = dotProduct_c129 + product_c130;
	vec4 H_ri435h1 = vec4(dotProduct_c110, dotProduct_c117, dotProduct_c124, dotProduct_c131);
	vec4 FragColor_c132 = FragColor + H_ri435h1;
	vec4 column_c133 = column_c100 * column_c100;
	vec4 column_c134 = column_c101 * column_c101;
	vec4 column_c135 = column_c102 * column_c102;
	vec4 column_c136 = column_c103 * column_c103;
	float dotres_c137 = dot(FragColor_c132, column_c133);
	float dotres_c138 = dot(FragColor_c132, column_c134);
	float dotres_c139 = dot(FragColor_c132, column_c135);
	float dotres_c140 = dot(FragColor_c132, column_c136);
	vec4 H_3l4fp1 = vec4(dotres_c137, dotres_c138, dotres_c139, dotres_c140);
	FragColor = H_3l4fp1;
	vec4 H_kwzczo = vec4(um43[0].x, um43[1].x, um43[2].x, um43[3].x);
	vec4 H_kgu2311 = vec4(um43[0].y, um43[1].y, um43[2].y, um43[3].y);
	vec4 H_kv20e21 = vec4(um43[0].z, um43[1].z, um43[2].z, um43[3].z);
	float dotres_c141 = dot(H_3l4fp1, H_kwzczo);
	float dotres_c142 = dot(H_3l4fp1, H_kgu2311);
	float dotres_c143 = dot(H_3l4fp1, H_kv20e21);
	vec4 H_3dsf111 = vec4(dotres_c141, dotres_c142, dotres_c143, C_1d0);
	vec4 FragColor_c144 = H_3dsf111 * H_3l4fp1;
	FragColor = FragColor_c144;
	float H_3li6wo = um4[2].z * um4[3].w;
	float H_l15ytn = um4[2].w * um4[3].z;
	float H_t2shgo1 = H_3li6wo - H_l15ytn;
	float H_ghwwrc = H_t2shgo1 * um4[1].y;
	float H_m74evs = um4[1].z * um4[3].w;
	float H_kh0649 = um4[1].w * um4[3].z;
	float H_qmghsx = H_m74evs - H_kh0649;
	float H_nrl37d1 = H_qmghsx * um4[2].y;
	float H_f1v9y2 = H_ghwwrc - H_nrl37d1;
	float H_ztcjf7 = um4[1].z * um4[2].w;
	float H_tfjde61 = um4[1].w * um4[2].z;
	float H_2mwh9b = H_ztcjf7 - H_tfjde61;
	float H_z8bayb = H_2mwh9b * um4[3].y;
	float H_39v7uu = H_f1v9y2 + H_z8bayb;
	float H_jvuhgz = H_39v7uu * um4[0].x;
	float H_115e0k = H_t2shgo1 * um4[0].y;
	float H_1shxba = um4[0].z * um4[3].w;
	float H_jkir871 = um4[0].w * um4[3].z;
	float H_xev94a = H_1shxba - H_jkir871;
	float H_am5qd51 = H_xev94a * um4[2].y;
	float H_rzojvc1 = H_115e0k - H_am5qd51;
	float H_ov62hq1 = um4[0].z * um4[2].w;
	float H_ulhosr1 = um4[0].w * um4[2].z;
	float H_927ghn1 = H_ov62hq1 - H_ulhosr1;
	float H_u6kl2p1 = H_927ghn1 * um4[3].y;
	float H_aqdzhm1 = H_rzojvc1 + H_u6kl2p1;
	float H_r8un9j1 = H_aqdzhm1 * um4[1].x;
	float H_tb8s0q1 = H_jvuhgz - H_r8un9j1;
	float H_t5q2h9 = H_qmghsx * um4[0].y;
	float H_16sjyg = H_xev94a * um4[1].y;
	float H_3t8hwu1 = H_t5q2h9 - H_16sjyg;
	float H_77kxqf1 = um4[0].z * um4[1].w;
	float H_1p635d1 = um4[0].w * um4[1].z;
	float H_jht1fu = H_77kxqf1 - H_1p635d1;
	float H_kjabsp = H_jht1fu * um4[3].y;
	float H_5u33bp = H_3t8hwu1 + H_kjabsp;
	float H_8cqhgo1 = H_5u33bp * um4[2].x;
	float H_gn2svw = H_8cqhgo1 + H_tb8s0q1;
	float H_kblvuv1 = H_2mwh9b * um4[0].y;
	float H_g7sztq = H_927ghn1 * um4[1].y;
	float H_d2jvfn = H_kblvuv1 - H_g7sztq;
	float H_t5tn0h = H_jht1fu * um4[2].y;
	float H_5yzvee1 = H_d2jvfn + H_t5tn0h;
	float H_aadfrz = H_5yzvee1 * um4[3].x;
	float H_rjdp921 = H_gn2svw - H_aadfrz;
	vec4 H_lh5ure = vec4(H_rjdp921);
	vec4 FragColor_c145 = FragColor_c144 * H_lh5ure;
	FragColor = FragColor_c145;
	float H_b6222b1 = um2[0].x * um2[1].y;
	float H_16xwf31 = um2[0].y * um2[1].x;
	float H_nwxe9d = H_b6222b1 - H_16xwf31;
	float H_1fxrzi1 = C_1d0 / H_nwxe9d;
	float H_dr15j9 = H_1fxrzi1 * um2[1].y;
	float H_e2g599 = H_1fxrzi1 * um2[1].x;
	float H_ubpr1f = C_0d0 - H_e2g599;
	float H_45nk4i = H_1fxrzi1 * um2[0].y;
	float H_k38io8 = C_0d0 - H_45nk4i;
	float H_3u8kei = H_1fxrzi1 * um2[0].x;
	vec4 H_ay2pjl = vec4(H_dr15j9, H_ubpr1f, H_k38io8, H_3u8kei);
	vec4 FragColor_c146 = FragColor_c145 * H_ay2pjl;
	FragColor = FragColor_c146;
	float H_qglfme = um3[0].x * um3[2].y;
	float H_gxj04t1 = um3[0].y * um3[2].x;
	float H_gha4hp1 = H_qglfme - H_gxj04t1;
	float H_tql9f41 = um3[1].y * um3[2].z;
	float H_n3tbtc = um3[1].z * um3[2].y;
	float H_vrojuk = H_tql9f41 - H_n3tbtc;
	float H_44m56n1 = H_vrojuk * um3[0].x;
	float H_ebrznt1 = um3[0].y * um3[2].z;
	float H_s5hfvd1 = um3[0].z * um3[2].y;
	float H_nzqwd21 = H_ebrznt1 - H_s5hfvd1;
	float H_xxz15r = H_nzqwd21 * um3[1].x;
	float H_plwbhx1 = H_44m56n1 - H_xxz15r;
	float H_p5a3xi = um3[0].y * um3[1].z;
	float H_ft4jtw = um3[0].z * um3[1].y;
	float H_1mc5ce = H_p5a3xi - H_ft4jtw;
	float H_74ry191 = H_1mc5ce * um3[2].x;
	float H_1oj4yo = H_74ry191 + H_plwbhx1;
	float H_ufr60m = C_1d0 / H_1oj4yo;
	float H_od9ja41 = H_gha4hp1 * H_ufr60m;
	float H_hgdc9p1 = C_0d0 - H_od9ja41;
	vec4 H_7qfklq1 = vec4(H_hgdc9p1);
	vec4 FragColor_c147 = FragColor_c146 * H_7qfklq1;
	FragColor = FragColor_c147;
	float H_3li6wor = um4[2].z * um4[3].w;
	float H_l15ytnr = um4[2].w * um4[3].z;
	float H_zxm3yu = H_3li6wor - H_l15ytnr;
	float H_6kxwqp1 = H_zxm3yu * um4[1].y;
	float H_m74evsr = um4[1].z * um4[3].w;
	float H_kh0649r = um4[1].w * um4[3].z;
	float H_mi6bsr = H_m74evsr - H_kh0649r;
	float H_gzqyp7 = H_mi6bsr * um4[2].y;
	float H_spnr071 = H_6kxwqp1 - H_gzqyp7;
	float H_ztcjf7r = um4[1].z * um4[2].w;
	float H_tfjde61r = um4[1].w * um4[2].z;
	float H_eat6ef = H_ztcjf7r - H_tfjde61r;
	float H_1y3hr6 = H_eat6ef * um4[3].y;
	float H_209nuu1 = H_1y3hr6 + H_spnr071;
	float H_zvecet1 = H_zxm3yu * um4[0].y;
	float H_1shxbar = um4[0].z * um4[3].w;
	float H_jkir871r = um4[0].w * um4[3].z;
	float H_1wgt9k = H_1shxbar - H_jkir871r;
	float H_w5dpev = H_1wgt9k * um4[2].y;
	float H_ba16km = H_zvecet1 - H_w5dpev;
	float H_ov62hq1r = um4[0].z * um4[2].w;
	float H_ulhosr1r = um4[0].w * um4[2].z;
	float H_9ypwrb = H_ov62hq1r - H_ulhosr1r;
	float H_l5n0s61 = H_9ypwrb * um4[3].y;
	float H_vxu2ms = H_ba16km + H_l5n0s61;
	float H_umhlx2 = H_mi6bsr * um4[0].y;
	float H_rzucjq1 = H_1wgt9k * um4[1].y;
	float H_47q6xs = H_umhlx2 - H_rzucjq1;
	float H_77kxqf1r = um4[0].z * um4[1].w;
	float H_1p635d1r = um4[0].w * um4[1].z;
	float H_7a2vzp1 = H_77kxqf1r - H_1p635d1r;
	float H_3i5c371 = H_7a2vzp1 * um4[3].y;
	float H_el5zkl1 = H_3i5c371 + H_47q6xs;
	float H_ehaf721 = H_eat6ef * um4[0].y;
	float H_z6m3ry = H_9ypwrb * um4[1].y;
	float H_33yuv41 = H_ehaf721 - H_z6m3ry;
	float H_qmi5jb = H_7a2vzp1 * um4[2].y;
	float H_d99psd1 = H_33yuv41 + H_qmi5jb;
	float H_59jw0q1 = H_zxm3yu * um4[1].x;
	float H_focyz7 = H_mi6bsr * um4[2].x;
	float H_rzijp61 = H_59jw0q1 - H_focyz7;
	float H_29ihh6 = H_eat6ef * um4[3].x;
	float H_w5tyjj1 = H_29ihh6 + H_rzijp61;
	float H_07tc4t1 = H_zxm3yu * um4[0].x;
	float H_vuyoov = H_1wgt9k * um4[2].x;
	float H_h7wzbs = H_07tc4t1 - H_vuyoov;
	float H_mg11i61 = H_9ypwrb * um4[3].x;
	float H_1abjwc = H_h7wzbs + H_mg11i61;
	float H_tb3l73 = H_mi6bsr * um4[0].x;
	float H_sa9d9q1 = H_1wgt9k * um4[1].x;
	float H_d3penl1 = H_tb3l73 - H_sa9d9q1;
	float H_4tjct61 = H_7a2vzp1 * um4[3].x;
	float H_55jrt71 = H_4tjct61 + H_d3penl1;
	float H_d6weh21 = H_eat6ef * um4[0].x;
	float H_0i04hy = H_9ypwrb * um4[1].x;
	float H_tbzsnn1 = H_d6weh21 - H_0i04hy;
	float H_pb45tb = H_7a2vzp1 * um4[2].x;
	float H_12125n = H_pb45tb + H_tbzsnn1;
	float H_supot = um4[2].y * um4[3].w;
	float H_oybzzm = um4[2].w * um4[3].y;
	float H_k9e60m = H_supot - H_oybzzm;
	float H_l37ydo1 = H_k9e60m * um4[1].x;
	float H_5xwilx = um4[1].y * um4[3].w;
	float H_hkt4y9 = um4[1].w * um4[3].y;
	float H_s1vr3r1 = H_5xwilx - H_hkt4y9;
	float H_yvuvd41 = H_s1vr3r1 * um4[2].x;
	float H_o3b8591 = H_l37ydo1 - H_yvuvd41;
	float H_kulft11 = um4[1].y * um4[2].w;
	float H_wcqek51 = um4[1].w * um4[2].y;
	float H_7ndc331 = H_kulft11 - H_wcqek51;
	float H_ov9x691 = H_7ndc331 * um4[3].x;
	float H_78cnyl1 = H_o3b8591 + H_ov9x691;
	float H_4sfuv8 = H_k9e60m * um4[0].x;
	float H_6x6th21 = um4[0].y * um4[3].w;
	float H_i94ri71 = um4[0].w * um4[3].y;
	float H_mxwnr6 = H_6x6th21 - H_i94ri71;
	float H_60m5an = H_mxwnr6 * um4[2].x;
	float H_xbx79c1 = H_4sfuv8 - H_60m5an;
	float H_znnd6o = um4[0].y * um4[2].w;
	float H_vwvoir1 = um4[0].w * um4[2].y;
	float H_z1ycwe1 = H_znnd6o - H_vwvoir1;
	float H_ntfv1r = H_z1ycwe1 * um4[3].x;
	float H_9bam4s = H_ntfv1r + H_xbx79c1;
	float H_slhk3g = H_s1vr3r1 * um4[0].x;
	float H_hxz2aj1 = H_mxwnr6 * um4[1].x;
	float H_2nqj5x1 = H_slhk3g - H_hxz2aj1;
	float H_86dtga1 = um4[0].y * um4[1].w;
	float H_4md4bc1 = um4[0].w * um4[1].y;
	float H_yx2t34 = H_86dtga1 - H_4md4bc1;
	float H_nd1n9s1 = H_yx2t34 * um4[3].x;
	float H_3m31g61 = H_2nqj5x1 + H_nd1n9s1;
	float H_3dllsu = H_7ndc331 * um4[0].x;
	float H_d61epq = H_z1ycwe1 * um4[1].x;
	float H_arheuf1 = H_3dllsu - H_d61epq;
	float H_yl884j1 = H_yx2t34 * um4[2].x;
	float H_idyv91 = H_arheuf1 + H_yl884j1;
	float H_775xsw1 = um4[2].y * um4[3].z;
	float H_dnha4m = um4[2].z * um4[3].y;
	float H_yilpft = H_775xsw1 - H_dnha4m;
	float H_pb1puf = H_yilpft * um4[1].x;
	float H_ujjen01 = um4[1].y * um4[3].z;
	float H_klbdft = um4[1].z * um4[3].y;
	float H_2svmmm = H_ujjen01 - H_klbdft;
	float H_u274q11 = H_2svmmm * um4[2].x;
	float H_pusgkj1 = H_pb1puf - H_u274q11;
	float H_fbmd731 = um4[1].y * um4[2].z;
	float H_9wbnn4 = um4[1].z * um4[2].y;
	float H_k2bkuq = H_fbmd731 - H_9wbnn4;
	float H_vz0rfd1 = H_k2bkuq * um4[3].x;
	float H_2jg71w1 = H_pusgkj1 + H_vz0rfd1;
	float H_c3egiu = H_yilpft * um4[0].x;
	float H_hakxfz = um4[0].y * um4[3].z;
	float H_7mvzn8 = um4[0].z * um4[3].y;
	float H_21jt0c1 = H_hakxfz - H_7mvzn8;
	float H_l6hesv = H_21jt0c1 * um4[2].x;
	float H_kpc5mv1 = H_c3egiu - H_l6hesv;
	float H_wqgc0p = um4[0].y * um4[2].z;
	float H_yx56pn1 = um4[0].z * um4[2].y;
	float H_xg0zgo = H_wqgc0p - H_yx56pn1;
	float H_k5r0ms1 = H_xg0zgo * um4[3].x;
	float H_8g1ksk = H_k5r0ms1 + H_kpc5mv1;
	float H_wmo9im = H_2svmmm * um4[0].x;
	float H_ecy4q6 = H_21jt0c1 * um4[1].x;
	float H_kbo8ax = H_wmo9im - H_ecy4q6;
	float H_v67o2e1 = um4[0].y * um4[1].z;
	float H_twzrmj1 = um4[0].z * um4[1].y;
	float H_fqw6r = H_v67o2e1 - H_twzrmj1;
	float H_djhool1 = H_fqw6r * um4[3].x;
	float H_o4jy991 = H_djhool1 + H_kbo8ax;
	float H_wuzc29 = H_k2bkuq * um4[0].x;
	float H_em7rs8 = H_xg0zgo * um4[1].x;
	float H_647b9l = H_wuzc29 - H_em7rs8;
	float H_gff5r5 = H_fqw6r * um4[2].x;
	float H_9e9nmp1 = H_647b9l + H_gff5r5;
	float H_iqvkgn = H_209nuu1 * um4[0].x;
	float H_u2g6rf1 = H_vxu2ms * um4[1].x;
	float H_1hy0be = H_iqvkgn - H_u2g6rf1;
	float H_qs9ugk1 = H_el5zkl1 * um4[2].x;
	float H_sipbvx1 = H_1hy0be + H_qs9ugk1;
	float H_z616v41 = H_d99psd1 * um4[3].x;
	float H_zvhf6o = H_sipbvx1 - H_z616v41;
	float H_t1hcue = C_1d0 / H_zvhf6o;
	float H_xginn71 = H_209nuu1 * H_t1hcue;
	float H_v589h01 = H_t1hcue * H_w5tyjj1;
	float H_cm7r011 = C_0d0 - H_v589h01;
	float H_9hgbge = H_78cnyl1 * H_t1hcue;
	float H_kmrjr71 = H_2jg71w1 * H_t1hcue;
	float H_n2yjmi = C_0d0 - H_kmrjr71;
	float H_6q9akv1 = H_t1hcue * H_vxu2ms;
	float H_0qu5sr1 = C_0d0 - H_6q9akv1;
	float H_jccscc = H_1abjwc * H_t1hcue;
	float H_jqki6 = H_9bam4s * H_t1hcue;
	float H_4xwuwl1 = C_0d0 - H_jqki6;
	float H_qnf6i21 = H_8g1ksk * H_t1hcue;
	float H_jskht9 = H_el5zkl1 * H_t1hcue;
	float H_lnw4r2 = H_55jrt71 * H_t1hcue;
	float H_aky70z = C_0d0 - H_lnw4r2;
	float H_b28uk3 = H_3m31g61 * H_t1hcue;
	float H_2ax7x = H_o4jy991 * H_t1hcue;
	float H_ltkrca = C_0d0 - H_2ax7x;
	float H_vye1pr = H_d99psd1 * H_t1hcue;
	float H_q1ana51 = C_0d0 - H_vye1pr;
	float H_2i52xj1 = H_12125n * H_t1hcue;
	float H_r0747 = H_idyv91 * H_t1hcue;
	float H_zk4wra1 = C_0d0 - H_r0747;
	float H_ijkoua = H_9e9nmp1 * H_t1hcue;
	vec4 H_ep53uo = vec4(H_xginn71, H_0qu5sr1, H_jskht9, H_q1ana51);
	vec4 H_jmvgo5 = vec4(H_cm7r011, H_jccscc, H_aky70z, H_2i52xj1);
	vec4 H_1mm19w1 = vec4(H_9hgbge, H_4xwuwl1, H_b28uk3, H_zk4wra1);
	vec4 H_k8iufe1 = vec4(H_n2yjmi, H_qnf6i21, H_ltkrca, H_ijkoua);
	float dotres_c148 = dot(FragColor_c147, H_ep53uo);
	float dotres_c149 = dot(FragColor_c147, H_jmvgo5);
	float dotres_c150 = dot(FragColor_c147, H_1mm19w1);
	float dotres_c151 = dot(FragColor_c147, H_k8iufe1);
	vec4 H_6j9y661 = vec4(dotres_c148, dotres_c149, dotres_c150, dotres_c151);
	FragColor = H_6j9y661;
	vec4 column_c152 = un34[0] * un34[0];
	vec4 column_c153 = un34[1] * un34[1];
	vec4 column_c154 = un34[2] * un34[2];
	float dotres_c155 = dot(H_6j9y661, column_c152);
	float dotres_c156 = dot(H_6j9y661, column_c153);
	float dotres_c157 = dot(H_6j9y661, column_c154);
	vec4 H_phi7od1 = vec4(dotres_c155, dotres_c156, dotres_c157, dotres_c151);
	FragColor = H_phi7od1;
	
}

matrixAgg.frag
#version 120
// LunarGOO output
struct s {
	int count;
	mat4x3 sm[12];
};
uniform s us;
uniform int i;
uniform mat4x3 am[8];
uniform mat4x3 m;
varying vec3 v;

void main()
{
	vec3 column_c1 = am[4][0] + us.sm[i][0];
	vec3 column_c2 = am[4][1] + us.sm[i][1];
	vec3 column_c3 = am[4][2] + us.sm[i][2];
	vec3 column_c4 = am[4][3] + us.sm[i][3];
	float dotres_c5 = dot(v, column_c1);
	float dotres_c6 = dot(v, column_c2);
	float dotres_c7 = dot(v, column_c3);
	float dotres_c8 = dot(v, column_c4);
	vec4 H_k2rlbv = vec4(dotres_c5, dotres_c6, dotres_c7, dotres_c8);
	gl_FragColor = H_k2rlbv;
	
}

texture.frag
#version 130
// LunarGOO output
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
uniform vec4 u;
uniform float blend;
uniform vec2 scale;
in vec2 coords2D;
in vec2 t;
const float C_1d789 = 1.789;
const float C_2d0 = 2.0;
const vec4 C_gyy781 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 C_t1ff8m1 = vec3(1.789, 2.718, 3.453);
const ivec2 C_ivec2p0ca5p = ivec2(0, 5);
const int C_1 = 1;
const ivec2 C_oezkvl1 = ivec2(3, -7);
const float C_3d0 = 3.0;

void main()
{
	vec4 H_c54nid1 = texture(texSampler1D, C_1d789);
	vec4 H_ixrwd6 = texture(texSampler1D, C_1d789, C_2d0);
	vec4 color_c1 = H_c54nid1 + H_ixrwd6;
	vec4 H_qegvgw1 = textureProj(texSampler1D, coords2D);
	vec4 color_c2 = H_qegvgw1 + color_c1;
	vec4 H_5gs61 = textureProj(texSampler1D, C_gyy781);
	vec4 color_c3 = H_5gs61 + color_c2;
	vec4 H_8ux9bg = textureProj(texSampler1D, coords2D, C_2d0);
	vec4 color_c4 = H_8ux9bg + color_c3;
	vec4 H_pploon = textureProj(texSampler1D, C_gyy781, C_2d0);
	vec4 color_c5 = H_pploon + color_c4;
	vec4 H_st59sq = texture(texSampler2D, coords2D);
	vec4 color_c6 = H_st59sq + color_c5;
	vec4 H_y1istq1 = texture(texSampler2D, coords2D, C_2d0);
	vec4 color_c7 = H_y1istq1 + color_c6;
	vec4 H_cjc7ui = textureProj(texSampler2D, C_t1ff8m1);
	vec4 color_c8 = H_cjc7ui + color_c7;
	vec4 H_q8kxxe1 = textureProj(texSampler2D, C_gyy781, C_2d0);
	vec4 color_c9 = H_q8kxxe1 + color_c8;
	vec4 H_4wm8jg1 = texture(texSampler3D, C_t1ff8m1);
	vec4 color_c10 = H_4wm8jg1 + color_c9;
	vec4 H_y6pwuo1 = texture(texSampler3D, C_t1ff8m1, C_2d0);
	vec4 color_c11 = H_y6pwuo1 + color_c10;
	vec4 H_rhvzmb1 = textureProj(texSampler3D, C_gyy781);
	vec4 color_c12 = H_rhvzmb1 + color_c11;
	vec4 H_ncpn5u1 = textureProj(texSampler3D, C_gyy781, C_2d0);
	vec4 color_c13 = H_ncpn5u1 + color_c12;
	vec4 H_m659dg = texture(texSamplerCube, C_t1ff8m1);
	vec4 color_c14 = H_m659dg + color_c13;
	vec4 H_c4wfoz = texture(texSamplerCube, C_t1ff8m1, C_2d0);
	vec4 color_c15 = H_c4wfoz + color_c14;
	vec4 H_5zg3xx1 = shadow1D(shadowSampler1D, C_t1ff8m1);
	vec4 color_c16 = H_5zg3xx1 + color_c15;
	vec4 H_pszjph1 = shadow1D(shadowSampler1D, C_t1ff8m1, C_2d0);
	vec4 color_c17 = H_pszjph1 + color_c16;
	vec4 H_xu0mzx = shadow2D(shadowSampler2D, C_t1ff8m1);
	vec4 color_c18 = H_xu0mzx + color_c17;
	vec4 H_5n7yy21 = shadow2D(shadowSampler2D, C_t1ff8m1, C_2d0);
	vec4 color_c19 = H_5n7yy21 + color_c18;
	vec4 H_acrfl9 = shadow1DProj(shadowSampler1D, C_gyy781);
	vec4 color_c20 = H_acrfl9 + color_c19;
	vec4 H_kpuwh81 = shadow1DProj(shadowSampler1D, C_gyy781, C_2d0);
	vec4 color_c21 = H_kpuwh81 + color_c20;
	vec4 H_mj2lr4 = shadow2DProj(shadowSampler2D, C_gyy781);
	vec4 color_c22 = H_mj2lr4 + color_c21;
	vec4 H_4rdrg21 = shadow2DProj(shadowSampler2D, C_gyy781, C_2d0);
	vec4 color_c23 = H_4rdrg21 + color_c22;
	vec4 H_mlyi8l1 = texelFetch(texSampler2D, C_ivec2p0ca5p, C_1);
	vec4 color_c24 = H_mlyi8l1 + color_c23;
	vec2 gradX_c25 = dFdx(coords2D);
	vec2 gradY_c26 = dFdy(coords2D);
	vec4 H_ky9txu = textureGrad(texSampler2D, coords2D, gradX_c25, gradY_c26);
	vec4 color_c27 = H_ky9txu + color_c24;
	vec3 H_qoi6ir1 = vec3(coords2D.x, coords2D.y, C_2d0);
	vec4 H_jdtzpp = textureProjGrad(texSampler2D, H_qoi6ir1, gradX_c25, gradY_c26);
	vec4 color_c28 = H_jdtzpp + color_c27;
	vec4 H_93bru1 = textureGradOffset(texSampler2D, coords2D, gradX_c25, gradY_c26, C_oezkvl1);
	vec4 color_c29 = H_93bru1 + color_c28;
	vec4 H_zym6v3 = textureProjGradOffset(texSampler2D, C_t1ff8m1, gradX_c25, gradY_c26, C_oezkvl1);
	vec4 color_c30 = H_zym6v3 + color_c29;
	vec3 H_7u8f7h1 = vec3(coords2D.x, coords2D.y, C_3d0);
	float H_ceg0eh1 = textureGrad(shadowSampler2D, H_7u8f7h1, gradX_c25, gradY_c26);
	vec4 H_ktovlr = vec4(H_ceg0eh1);
	vec4 color_c31 = H_ktovlr + color_c30;
	float H_tualej = C_1d789 * blend;
	vec4 Ll_FragColor_c32 = mix(color_c31, u, H_tualej);
	gl_FragColor = Ll_FragColor_c32;
	
}

texture.vert
#version 130
// LunarGOO output
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
in vec2 coords2D;
const float C_1d789 = 1.789;
const float C_3d0 = 3.0;
const vec4 C_gyy781 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 C_t1ff8m1 = vec3(1.789, 2.718, 3.453);

void main()
{
	vec4 H_0qpvtx1 = textureLod(texSampler1D, C_1d789, C_3d0);
	vec4 H_yvk8wl1 = textureProjLod(texSampler1D, coords2D, C_3d0);
	vec4 color_c1 = H_0qpvtx1 + H_yvk8wl1;
	vec4 H_3r4t23 = textureProjLod(texSampler1D, C_gyy781, C_3d0);
	vec4 color_c2 = H_3r4t23 + color_c1;
	vec4 H_i6hmcl1 = textureLod(texSampler2D, coords2D, C_3d0);
	vec4 color_c3 = H_i6hmcl1 + color_c2;
	vec4 H_2dlp3 = textureProjLod(texSampler2D, C_t1ff8m1, C_3d0);
	vec4 color_c4 = H_2dlp3 + color_c3;
	vec4 H_0sz3ml = textureProjLod(texSampler2D, C_gyy781, C_3d0);
	vec4 color_c5 = H_0sz3ml + color_c4;
	vec4 H_881hky1 = textureLod(texSampler3D, C_t1ff8m1, C_3d0);
	vec4 color_c6 = H_881hky1 + color_c5;
	vec4 H_1nxs6l = textureProjLod(texSampler3D, C_gyy781, C_3d0);
	vec4 color_c7 = H_1nxs6l + color_c6;
	vec4 H_e1rooj = textureLod(texSamplerCube, C_t1ff8m1, C_3d0);
	vec4 color_c8 = H_e1rooj + color_c7;
	vec4 H_dvhnv41 = shadow1DLod(shadowSampler1D, C_t1ff8m1, C_3d0);
	vec4 color_c9 = H_dvhnv41 + color_c8;
	vec4 H_3aj8jo1 = shadow2DLod(shadowSampler2D, C_t1ff8m1, C_3d0);
	vec4 color_c10 = H_3aj8jo1 + color_c9;
	vec4 H_cjdt3q1 = shadow1DProjLod(shadowSampler1D, C_gyy781, C_3d0);
	vec4 color_c11 = H_cjdt3q1 + color_c10;
	vec4 H_a9un4x = shadow2DProjLod(shadowSampler2D, C_gyy781, C_3d0);
	vec4 color_c12 = H_a9un4x + color_c11;
	gl_Position = color_c12;
	
}

300BuiltIns.frag
#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations
uniform bvec3 bv;
uniform mediump int imin;
uniform mediump int imax;
uniform mediump uint umin;
uniform mediump uint umax;
in mediump vec3 x;
in mediump vec3 y;
flat in mediump ivec4 iv4a;
flat in mediump ivec4 iv4b;
flat in mediump uvec2 uv2x;
flat in mediump uvec2 uv2y;
flat in mediump uvec4 uv4y;
flat in mediump uint uy;
flat in mediump ivec3 iv3a;
flat in mediump ivec3 iv3b;
flat in mediump uvec2 uv2c;
in mediump float f;
in mediump vec2 v2a;
in mediump vec4 v4;
in mediump vec2 v2b;
out mediump vec4 result;
const float C_0d0 = 0.0;
const int C_0 = 0;
const vec2 C_vec2p2d0p = vec2(2.0);
const float C_0d1 = 0.1;

void main()
{
	mediump vec3 H_rsymfy = mix(x, y, bv);
	vec4 H_2f9m82 = vec4(H_rsymfy.x, H_rsymfy.y, H_rsymfy.z, C_0d0);
	mediump ivec4 isum_c1 = abs(iv4a);
	mediump ivec4 H_bh9ar6 = sign(iv4a);
	mediump ivec4 isum_c2 = H_bh9ar6 + isum_c1;
	mediump ivec4 H_75gwur = min(iv4a, iv4b);
	mediump ivec4 isum_c3 = H_75gwur + isum_c2;
	mediump ivec4 H_vgqkyq = min(iv4a, imin);
	mediump ivec4 isum_c4 = H_vgqkyq + isum_c3;
	mediump ivec2 H_hzeqx4 = min(ivec2(uv2x), ivec2(uv2y));
	ivec4 H_4l54vw = ivec4(H_hzeqx4.x, H_hzeqx4.y, C_0, C_0);
	mediump ivec4 H_61bfck = min(ivec4(uv4y), int(uy));
	mediump ivec4 usum_c5 = H_4l54vw + H_61bfck;
	mediump ivec3 H_pf1wc21 = max(iv3a, iv3b);
	ivec4 H_9qn0ej1 = ivec4(H_pf1wc21.x, H_pf1wc21.y, H_pf1wc21.z, C_0);
	mediump ivec4 isum_c6 = H_9qn0ej1 + isum_c4;
	mediump ivec4 H_jsk1o8 = max(iv4a, imax);
	mediump ivec4 isum_c7 = H_jsk1o8 + isum_c6;
	mediump ivec2 H_blgwez = max(ivec2(uv2x), ivec2(uv2y));
	mediump ivec2 H_t00eqj = max(ivec2(uv2x), int(uy));
	ivec4 H_t86uxe1 = ivec4(H_blgwez.x, H_blgwez.y, H_t00eqj.x, H_t00eqj.y);
	mediump ivec4 usum_c8 = H_t86uxe1 + usum_c5;
	mediump ivec4 H_kqs8tt1 = clamp(iv4a, iv4a, iv4b);
	mediump ivec4 isum_c9 = H_kqs8tt1 + isum_c7;
	mediump ivec4 H_douq0p1 = clamp(iv4a, imin, imax);
	mediump ivec4 isum_c10 = H_douq0p1 + isum_c9;
	mediump ivec2 H_ctk6mt = clamp(ivec2(uv2x), ivec2(uv2y), ivec2(uv2c));
	ivec4 H_o4xdcc1 = ivec4(H_ctk6mt.x, H_ctk6mt.y, C_0, C_0);
	mediump ivec4 usum_c11 = H_o4xdcc1 + usum_c8;
	mediump ivec4 H_lgj8ul1 = clamp(ivec4(uv4y), int(umin), int(umax));
	mediump ivec4 usum_c12 = H_lgj8ul1 + usum_c11;
	struct  {
	vec3 member0;
	vec3 member1;
} Lg_1; Lg_1.member0 = modf(x, Lg_1.member1);
	vec4 H_ynrwua1 = vec4(Lg_1.member0.x, Lg_1.member0.y, Lg_1.member0.z, Lg_1.member1.x);
	mediump vec4 sum_c13 = H_2f9m82 + H_ynrwua1;
	mediump float H_u8ukc2 = trunc(f);
	vec4 H_7z3jvz = vec4(H_u8ukc2);
	mediump vec4 sum_c14 = H_7z3jvz + sum_c13;
	mediump vec2 H_z56gqk1 = round(v2a);
	mediump vec2 H_z05d6r = roundEven(v2a);
	vec4 H_kqw9d31 = vec4(H_z56gqk1.x, H_z56gqk1.y, H_z05d6r.x, H_z05d6r.y);
	mediump vec4 sum_c15 = H_kqw9d31 + sum_c14;
	bvec2 H_cy3k1z = isnan(v2a);
	bvec4 H_tx61al1 = isinf(v4);
	mediump ivec2 H_r3r3xx = ivec2(H_cy3k1z);
	mediump ivec4 H_tad3bu1 = ivec4(H_tx61al1);
	ivec4 H_vxhdx71 = ivec4(H_r3r3xx.x, H_r3r3xx.y, H_tad3bu1.x, H_tad3bu1.y);
	mediump ivec4 isum_c16 = H_vxhdx71 + isum_c10;
	mediump int H_i86q1r = floatBitsToInt(f);
	ivec4 H_vvf8zk1 = ivec4(H_i86q1r);
	mediump ivec4 isum_c17 = H_vvf8zk1 + isum_c16;
	mediump ivec4 H_4poblp1 = floatBitsToInt(v4);
	mediump ivec4 usum_c18 = H_4poblp1 + usum_c12;
	mediump vec4 H_k2uey71 = intBitsToFloat(iv4a);
	mediump vec4 sum_c19 = H_k2uey71 + sum_c15;
	mediump vec2 H_awczdb = intBitsToFloat(ivec2(uv2c));
	vec4 H_h40lmx1 = vec4(H_awczdb.x, H_awczdb.y, C_0d0, C_0d0);
	mediump vec4 sum_c20 = H_h40lmx1 + sum_c19;
	highp int H_aqcc2q1 = int(packSnorm2x16(v2a));
	highp vec2 H_bcj1fu = unpackSnorm2x16(uint(int(uy)));
	highp int H_slyzqu1 = int(packUnorm2x16(v2a));
	highp vec2 H_pltztp1 = unpackUnorm2x16(uint(int(uy)));
	highp int H_jzskf11 = int(packHalf2x16(v2b));
	mediump vec2 H_73yecd1 = unpackHalf2x16(uint(int(uy)));
	ivec4 H_3vcyzg = ivec4(H_aqcc2q1, H_slyzqu1, H_jzskf11, C_0);
	mediump ivec4 usum_c21 = H_3vcyzg + usum_c18;
	vec4 H_wppdxa1 = vec4(H_bcj1fu.x, H_bcj1fu.y, H_pltztp1.x, H_pltztp1.y);
	mediump vec4 sum_c22 = H_wppdxa1 + sum_c20;
	vec4 H_f628sr1 = vec4(H_73yecd1.x, H_73yecd1.y, C_0d0, C_0d0);
	mediump vec4 sum_c23 = H_f628sr1 + sum_c22;
	mediump vec4 H_c38sw11 = vec4(isum_c17);
	mediump vec4 H_1grb611 = H_c38sw11 + sum_c23;
	mediump vec4 H_7pivx2 = vec4(usum_c21);
	mediump vec4 result_c24 = H_1grb611 + H_7pivx2;
	result = result_c24;
	mediump vec2 H_67d0kq1 = gl_PointCoord * C_vec2p2d0p;
	vec4 H_0wse3z = vec4(gl_PointCoord.x, gl_PointCoord.y, H_67d0kq1.x, H_67d0kq1.y);
	highp vec4 H_uyk0mz = H_0wse3z + gl_FragCoord;
	highp vec4 result_c25 = H_uyk0mz + result_c24;
	result = result_c25;
	highp float Ll_FragDepth_c26 = f + C_0d1;
	gl_FragDepth = Ll_FragDepth_c26;
	
}

300BuiltIns.vert
#version 300 es
// LunarGOO output
in mediump float ps;
const int C_2 = 2;
const int C_a10 = -10;
invariant gl_Position ;
void main()
{
	int H_0e5x2b = gl_VertexID << C_2;
	int H_zzd96r = H_0e5x2b + C_a10;
	vec4 H_n1bm9l1 = vec4(ps);
	highp float H_sgg9t9 = float(H_zzd96r);
	vec4 H_g3cgr71 = vec4(H_sgg9t9);
	highp vec4 Ll_Position_c1 = H_g3cgr71 * H_n1bm9l1;
	gl_Position = Ll_Position_c1;
	highp float Ll_PointSize_c2 = H_sgg9t9 * ps;
	gl_PointSize = Ll_PointSize_c2;
	
}

uniformArray.frag
#version 130
// LunarGOO output
uniform vec4 color[6];
uniform vec3 inColor;
uniform float alpha[16];
uniform sampler2D texSampler2D;

void main()
{
	vec4 texColor_c1 = color[1] + color[1];
	vec3 H_4wg7yy1 = inColor + texColor_c1.xyz;
	float H_hf0zno = alpha[12] + texColor_c1.w;
	vec4 H_s1mm3h1 = vec4(H_4wg7yy1.x, H_4wg7yy1.y, H_4wg7yy1.z, H_hf0zno);
	gl_FragColor = H_s1mm3h1;
	
}

newTexture.frag
#version 430 core
// LunarGOO output
uniform sampler2D s2D;
uniform sampler3D s3D;
uniform sampler2DArray s2DArray;
uniform sampler2DShadow s2DShadow;
uniform samplerCube sCube;
uniform sampler2DArrayShadow s2DArrayShadow;
uniform isampler2D is2D;
uniform isampler3D is3D;
uniform isamplerCube isCube;
uniform isampler2DArray is2DArray;
uniform samplerCubeShadow sCubeShadow;
uniform isampler2D is2Dms;
uniform usampler2D us2D;
uniform usampler3D us3D;
uniform usamplerCube usCube;
uniform usampler2DArray us2DArray;
in vec2 c2D;
in vec4 c4D;
in vec3 c3D;
in float c1D;
flat in ivec3 ic3D;
flat in int ic1D;
flat in ivec2 ic2D;
flat in ivec4 ic4D;
out vec4 FragData;
const float C_1d2 = 1.2;
const ivec2 C_ivec2p3p = ivec2(3);
const int C_4 = 4;
const float C_4d2 = 4.2;
const int C_2 = 2;
const float C_0d0 = 0.0;

void main()
{
	vec4 H_psozrr1 = texture(s2D, c2D);
	vec4 H_hrxjei = textureProj(s3D, c4D);
	vec4 H_j5s1i91 = H_hrxjei + H_psozrr1;
	vec4 H_zy7hav1 = textureLod(s2DArray, c3D, C_1d2);
	vec4 H_4uplnx = H_j5s1i91 + H_zy7hav1;
	float H_hjrk4h = textureOffset(s2DShadow, c3D, C_ivec2p3p, c1D);
	float H_7jsn5f = H_4uplnx.y + H_hjrk4h;
	vec4 H_xgwibs = H_4uplnx;
	H_xgwibs.y = H_7jsn5f;
	vec4 H_8sp3bo1 = texelFetch(s3D, ic3D, ic1D);
	vec4 H_yfqtjc1 = H_8sp3bo1 + H_xgwibs;
	vec4 H_w1booj = texelFetchOffset(s2D, ic2D, C_4, ic2D);
	vec4 H_o77xck1 = H_w1booj + H_yfqtjc1;
	float H_cyjcmi = textureLodOffset(s2DShadow, c3D, c1D, C_ivec2p3p);
	float H_0q4wej1 = H_cyjcmi + H_o77xck1.y;
	vec4 H_mbhnl21 = H_o77xck1;
	H_mbhnl21.y = H_0q4wej1;
	vec4 H_rng2f5 = textureProjLodOffset(s2D, c3D, c1D, C_ivec2p3p);
	vec4 H_8f7hu8 = H_mbhnl21 + H_rng2f5;
	vec4 H_lr92sb = textureGrad(sCube, c3D, c3D, c3D);
	vec4 H_64fhq61 = H_8f7hu8 + H_lr92sb;
	float H_b9nber = textureGradOffset(s2DArrayShadow, c4D, c2D, c2D, C_ivec2p3p);
	float H_oxgvt11 = H_64fhq61.x + H_b9nber;
	vec4 H_iv0jvn = H_64fhq61;
	H_iv0jvn.x = H_oxgvt11;
	vec4 H_pkmpj3 = textureProjGrad(s3D, c4D, c3D, c3D);
	vec4 H_u1hknb1 = H_iv0jvn + H_pkmpj3;
	vec4 H_ot18mt = textureProjGradOffset(s2D, c3D, c2D, c2D, C_ivec2p3p);
	vec4 H_vx78251 = H_ot18mt + H_u1hknb1;
	ivec4 iv_c1 = texture(is2D, c2D);
	vec4 H_ai3hns = vec4(iv_c1);
	vec4 H_zkmr4u1 = H_ai3hns + H_vx78251;
	ivec4 iv_c2 = textureProjOffset(is2D, c4D, C_ivec2p3p);
	vec4 H_hgfnfq = vec4(iv_c2);
	vec4 H_gxxdxn = H_hgfnfq + H_zkmr4u1;
	ivec4 iv_c3 = textureProjLod(is2D, c3D, c1D);
	vec4 H_obum6i1 = vec4(iv_c3);
	vec4 H_ad1x2n1 = H_gxxdxn + H_obum6i1;
	ivec4 iv_c4 = textureProjGrad(is2D, c3D, c2D, c2D);
	vec4 H_boq1yf1 = vec4(iv_c4);
	vec4 H_o86t0t1 = H_ad1x2n1 + H_boq1yf1;
	ivec4 iv_c5 = texture(is3D, c3D, C_4d2);
	vec4 H_a5lqxp1 = vec4(iv_c5);
	vec4 H_2beeph = H_a5lqxp1 + H_o86t0t1;
	ivec4 iv_c6 = textureLod(isCube, c3D, c1D);
	vec4 H_xz93aj1 = vec4(iv_c6);
	vec4 H_oiewlz = H_2beeph + H_xz93aj1;
	ivec4 iv_c7 = texelFetch(is2DArray, ic3D, ic1D);
	vec4 H_cdhyto1 = vec4(iv_c7);
	vec4 H_kb21mq = H_cdhyto1 + H_oiewlz;
	ivec2 iv_c8 = textureSize(sCubeShadow, C_2);
	vec2 H_9sscc91 = vec2(iv_c8);
	vec4 H_dxeock = vec4(H_9sscc91.x, H_9sscc91.y, C_0d0, C_0d0);
	vec4 FragData_c9 = H_dxeock + H_kb21mq;
	FragData = FragData_c9;
	
}

qualifiers.frag
#version 430 core
// LunarGOO output
uniform image2D imageVc;
uniform image2D imageVv;
uniform image2D imageVr;
uniform image2D imageVro;
uniform image2D imageVwo;
uniform image2D imageVall;
centroid in vec4 inVc;
in vec4 inVs;
flat in vec4 inVf;
noperspective in vec4 inVn;
centroid noperspective in vec4 inVcn;
sample in vec4 inV;
out vec4 outVi;
invariant outVi ;
void main()
{
	vec4 H_gwjc1z = inVc + inVs;
	vec4 H_ywu9xw = H_gwjc1z + inVf;
	vec4 H_96hcbo = H_ywu9xw + inVn;
	vec4 outVi_c1 = H_96hcbo + inVcn;
	outVi = outVi_c1;
	
}

