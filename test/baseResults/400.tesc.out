
Top IR:
; ModuleID = 'Glslang'

%gl_PerVertex = type { <4 x float>, float, [1 x float] }
%gl_PerVertex.0 = type { <4 x float>, float, [1 x float] }

@gl_in = global [32 x %gl_PerVertex] zeroinitializer
@gl_PatchVerticesIn = global i32 0
@gl_PrimitiveID = global i32 0
@gl_InvocationID = global i32 0
@gl_out = global [4 x %gl_PerVertex.0] zeroinitializer
@gl_TessLevelOuter = global [4 x float] zeroinitializer
@gl_TessLevelInner = global [2 x float] zeroinitializer
@outa = internal global [4 x i32] zeroinitializer
@patchOut = global <4 x float> zeroinitializer
@inb = global [32 x <2 x float>] zeroinitializer
@ind = global [32 x <2 x float>] zeroinitializer
@ivla = global [32 x <4 x float>] zeroinitializer
@ivlb = global [32 x <4 x float>] zeroinitializer
@ovla = global [4 x <4 x float>] zeroinitializer
@ovlb = global [4 x <4 x float>] zeroinitializer

define fastcc void @main() {
entry:
  %iid = alloca i32
  %pid = alloca i32
  %pvi = alloca i32
  %cd = alloca float
  %ps = alloca float
  %p = alloca <4 x float>
  %a = alloca i32
  call void @llvm.gla.barrier()
  store i32 5392, i32* %a
  %p1 = load <4 x float>* getelementptr inbounds ([32 x %gl_PerVertex]* @gl_in, i32 0, i32 1, i32 0)
  store <4 x float> %p1, <4 x float>* %p
  %ps2 = load float* getelementptr inbounds ([32 x %gl_PerVertex]* @gl_in, i32 0, i32 1, i32 1)
  store float %ps2, float* %ps
  %cd3 = load float* getelementptr ([32 x %gl_PerVertex]* @gl_in, i32 0, i32 1, i32 2, i32 2)
  store float %cd3, float* %cd
  %pvi4 = load i32* @gl_PatchVerticesIn
  store i32 %pvi4, i32* %pvi
  %pid5 = load i32* @gl_PrimitiveID
  store i32 %pid5, i32* %pid
  %iid6 = load i32* @gl_InvocationID
  store i32 %iid6, i32* %iid
  %0 = load <4 x float>* %p
  store <4 x float> %0, <4 x float>* getelementptr inbounds ([4 x %gl_PerVertex.0]* @gl_out, i32 0, i32 1, i32 0)
  %1 = load float* %ps
  store float %1, float* getelementptr inbounds ([4 x %gl_PerVertex.0]* @gl_out, i32 0, i32 1, i32 1)
  %2 = load float* %cd
  store float %2, float* getelementptr ([4 x %gl_PerVertex.0]* @gl_out, i32 0, i32 1, i32 2, i32 1)
  store float 0x40099999A0000000, float* getelementptr inbounds ([4 x float]* @gl_TessLevelOuter, i32 0, i32 3)
  store float 0x3FF4CCCCC0000000, float* getelementptr inbounds ([2 x float]* @gl_TessLevelInner, i32 0, i32 1)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind
declare void @llvm.gla.barrier() #0

attributes #0 = { nounwind }

!gla.numVertices = !{!0}
!gla.entrypoint = !{!1}
!gla.inputs = !{!2, !7, !9, !11, !13, !15, !17, !19}
!gla.outputs = !{!21, !23, !25, !27, !29, !30}
!gla.noStaticUse = !{!27, !13, !15, !17, !19, !29, !30}

!0 = metadata !{i32 4}
!1 = metadata !{metadata !"main", i32 15}
!2 = metadata !{metadata !"gl_in", i32 17, [32 x %gl_PerVertex]* @gl_in_typeProxy, metadata !3, metadata !4}
!3 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!4 = metadata !{metadata !"gl_PerVertex", metadata !5, metadata !"gl_Position", metadata !6, metadata !"gl_PointSize", metadata !6, metadata !"gl_ClipDistance", metadata !6}
!5 = metadata !{i32 0, i32 0, i32 1024, null}
!6 = metadata !{metadata !"", metadata !5}
!7 = metadata !{metadata !"gl_PatchVerticesIn", i32 1, i32* @gl_PatchVerticesIn_typeProxy, metadata !8}
!8 = metadata !{i32 0, i32 0, i32 1120, null, i32 0}
!9 = metadata !{metadata !"gl_PrimitiveID", i32 1, i32* @gl_PrimitiveID_typeProxy, metadata !10}
!10 = metadata !{i32 0, i32 0, i32 1121, null, i32 0}
!11 = metadata !{metadata !"gl_InvocationID", i32 1, i32* @gl_InvocationID_typeProxy, metadata !12}
!12 = metadata !{i32 0, i32 0, i32 1122, null, i32 0}
!13 = metadata !{metadata !"inb", i32 1, [32 x <2 x float>]* @inb_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 0, i32 1142, null, i32 0}
!15 = metadata !{metadata !"ind", i32 1, [32 x <2 x float>]* @ind_typeProxy, metadata !16}
!16 = metadata !{i32 0, i32 0, i32 1174, null, i32 0}
!17 = metadata !{metadata !"ivla", i32 1, [32 x <4 x float>]* @ivla_typeProxy, metadata !18}
!18 = metadata !{i32 0, i32 0, i32 3, null, i32 0}
!19 = metadata !{metadata !"ivlb", i32 1, [32 x <4 x float>]* @ivlb_typeProxy, metadata !20}
!20 = metadata !{i32 0, i32 0, i32 4, null, i32 0}
!21 = metadata !{metadata !"gl_out", i32 16, [4 x %gl_PerVertex.0]* @gl_out_typeProxy, metadata !22, metadata !4}
!22 = metadata !{i32 0, i32 0, i32 1123, null, i32 0}
!23 = metadata !{metadata !"gl_TessLevelOuter", i32 7, [4 x float]* @gl_TessLevelOuter_typeProxy, metadata !24}
!24 = metadata !{i32 0, i32 0, i32 1135, null, i32 3}
!25 = metadata !{metadata !"gl_TessLevelInner", i32 7, [2 x float]* @gl_TessLevelInner_typeProxy, metadata !26}
!26 = metadata !{i32 0, i32 0, i32 1139, null, i32 3}
!27 = metadata !{metadata !"patchOut", i32 7, <4 x float>* @patchOut_typeProxy, metadata !28}
!28 = metadata !{i32 0, i32 0, i32 1141, null, i32 3}
!29 = metadata !{metadata !"ovla", i32 7, [4 x <4 x float>]* @ovla_typeProxy, metadata !18}
!30 = metadata !{metadata !"ovlb", i32 7, [4 x <4 x float>]* @ovlb_typeProxy, metadata !20}


Bottom IR:
; ModuleID = 'Glslang'

%gl_PerVertex = type { <4 x float>, float, [1 x float] }
%gl_PerVertex.0 = type { <4 x float>, float, [1 x float] }

@gl_in = global [32 x %gl_PerVertex] zeroinitializer
@gl_PatchVerticesIn = global i32 0
@gl_PrimitiveID = global i32 0
@gl_InvocationID = global i32 0
@gl_out = global [4 x %gl_PerVertex.0] zeroinitializer
@gl_TessLevelOuter = global [4 x float] zeroinitializer
@gl_TessLevelInner = global [2 x float] zeroinitializer
@patchOut = global <4 x float> zeroinitializer
@inb = global [32 x <2 x float>] zeroinitializer
@ind = global [32 x <2 x float>] zeroinitializer
@ivla = global [32 x <4 x float>] zeroinitializer
@ivlb = global [32 x <4 x float>] zeroinitializer
@ovla = global [4 x <4 x float>] zeroinitializer
@ovlb = global [4 x <4 x float>] zeroinitializer

define fastcc void @main() {
entry:
  call void @llvm.gla.barrier()
  %gla_constGEP = getelementptr [32 x %gl_PerVertex]* @gl_in, i32 0, i32 1, i32 0
  %p1 = load <4 x float>* %gla_constGEP, align 16
  %gla_constGEP7 = getelementptr [32 x %gl_PerVertex]* @gl_in, i32 0, i32 1, i32 1
  %ps2 = load float* %gla_constGEP7, align 16
  %cd3 = load float* getelementptr ([32 x %gl_PerVertex]* @gl_in, i32 0, i32 1, i32 2, i32 2), align 4
  %gla_constGEP8 = getelementptr [4 x %gl_PerVertex.0]* @gl_out, i32 0, i32 1, i32 0
  store <4 x float> %p1, <4 x float>* %gla_constGEP8, align 16
  %gla_constGEP9 = getelementptr [4 x %gl_PerVertex.0]* @gl_out, i32 0, i32 1, i32 1
  store float %ps2, float* %gla_constGEP9, align 16
  store float %cd3, float* getelementptr ([4 x %gl_PerVertex.0]* @gl_out, i32 0, i32 1, i32 2, i32 1), align 4
  %gla_constGEP10 = getelementptr [4 x float]* @gl_TessLevelOuter, i32 0, i32 3
  store float 0x40099999A0000000, float* %gla_constGEP10, align 4
  %gla_constGEP11 = getelementptr [2 x float]* @gl_TessLevelInner, i32 0, i32 1
  store float 0x3FF4CCCCC0000000, float* %gla_constGEP11, align 4
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind
declare void @llvm.gla.barrier() #0

attributes #0 = { nounwind }

!gla.numVertices = !{!0}
!gla.entrypoint = !{!1}
!gla.inputs = !{!2, !7, !9, !11, !13, !15, !17, !19}
!gla.outputs = !{!21, !23, !25, !27, !29, !30}
!gla.noStaticUse = !{!27, !13, !15, !17, !19, !29, !30}

!0 = metadata !{i32 4}
!1 = metadata !{metadata !"main", i32 15}
!2 = metadata !{metadata !"gl_in", i32 17, [32 x %gl_PerVertex]* @gl_in_typeProxy, metadata !3, metadata !4}
!3 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!4 = metadata !{metadata !"gl_PerVertex", metadata !5, metadata !"gl_Position", metadata !6, metadata !"gl_PointSize", metadata !6, metadata !"gl_ClipDistance", metadata !6}
!5 = metadata !{i32 0, i32 0, i32 1024, null}
!6 = metadata !{metadata !"", metadata !5}
!7 = metadata !{metadata !"gl_PatchVerticesIn", i32 1, i32* @gl_PatchVerticesIn_typeProxy, metadata !8}
!8 = metadata !{i32 0, i32 0, i32 1120, null, i32 0}
!9 = metadata !{metadata !"gl_PrimitiveID", i32 1, i32* @gl_PrimitiveID_typeProxy, metadata !10}
!10 = metadata !{i32 0, i32 0, i32 1121, null, i32 0}
!11 = metadata !{metadata !"gl_InvocationID", i32 1, i32* @gl_InvocationID_typeProxy, metadata !12}
!12 = metadata !{i32 0, i32 0, i32 1122, null, i32 0}
!13 = metadata !{metadata !"inb", i32 1, [32 x <2 x float>]* @inb_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 0, i32 1142, null, i32 0}
!15 = metadata !{metadata !"ind", i32 1, [32 x <2 x float>]* @ind_typeProxy, metadata !16}
!16 = metadata !{i32 0, i32 0, i32 1174, null, i32 0}
!17 = metadata !{metadata !"ivla", i32 1, [32 x <4 x float>]* @ivla_typeProxy, metadata !18}
!18 = metadata !{i32 0, i32 0, i32 3, null, i32 0}
!19 = metadata !{metadata !"ivlb", i32 1, [32 x <4 x float>]* @ivlb_typeProxy, metadata !20}
!20 = metadata !{i32 0, i32 0, i32 4, null, i32 0}
!21 = metadata !{metadata !"gl_out", i32 16, [4 x %gl_PerVertex.0]* @gl_out_typeProxy, metadata !22, metadata !4}
!22 = metadata !{i32 0, i32 0, i32 1123, null, i32 0}
!23 = metadata !{metadata !"gl_TessLevelOuter", i32 7, [4 x float]* @gl_TessLevelOuter_typeProxy, metadata !24}
!24 = metadata !{i32 0, i32 0, i32 1135, null, i32 3}
!25 = metadata !{metadata !"gl_TessLevelInner", i32 7, [2 x float]* @gl_TessLevelInner_typeProxy, metadata !26}
!26 = metadata !{i32 0, i32 0, i32 1139, null, i32 3}
!27 = metadata !{metadata !"patchOut", i32 7, <4 x float>* @patchOut_typeProxy, metadata !28}
!28 = metadata !{i32 0, i32 0, i32 1141, null, i32 3}
!29 = metadata !{metadata !"ovla", i32 7, [4 x <4 x float>]* @ovla_typeProxy, metadata !18}
!30 = metadata !{metadata !"ovlb", i32 7, [4 x <4 x float>]* @ovlb_typeProxy, metadata !20}
#version 400 core
// LunarGOO output
#extension GL_ARB_separate_shader_objects : enable
layout(vertices = 4) out;
in gl_PerVertex {
	vec4 gl_Position;
	float gl_PointSize;
	float gl_ClipDistance[1];
} gl_in[32];
in vec2 inb[32];
in vec2 ind[32];
layout(location=3) in vec4 ivla[32];
layout(location=4) in vec4 ivlb[32];
out gl_PerVertex {
	vec4 gl_Position;
	float gl_PointSize;
	float gl_ClipDistance[1];
} gl_out[4];
patch out vec4 patchOut;
layout(location=3) out vec4 ovla[4];
layout(location=4) out vec4 ovlb[4];
const float L_1 = 3.2;
const float L_2 = 1.3;

void main()
{
	barrier();
	gl_out[1].gl_Position = gl_in[1].gl_Position;
	gl_out[1].gl_PointSize = gl_in[1].gl_PointSize;
	gl_out[1].gl_ClipDistance[1] = gl_in[1].gl_ClipDistance[2];
	gl_TessLevelOuter[3] = L_1;
	gl_TessLevelInner[1] = L_2;
	
}

#version 400 core
// LunarGOO output
#extension GL_ARB_separate_shader_objects : enable
layout(vertices = 4) out;
in gl_PerVertex {
	vec4 gl_Position;
	float gl_PointSize;
	float gl_ClipDistance[1];
} gl_in[32];
in vec2 inb[32];
in vec2 ind[32];
layout(location=3) in vec4 ivla[32];
layout(location=4) in vec4 ivlb[32];
out gl_PerVertex {
	vec4 gl_Position;
	float gl_PointSize;
	float gl_ClipDistance[1];
} gl_out[4];
patch out vec4 patchOut;
layout(location=3) out vec4 ovla[4];
layout(location=4) out vec4 ovlb[4];
const float L_1 = 3.2;
const float L_2 = 1.3;

void main()
{
	barrier();
	gl_out[1].gl_Position = gl_in[1].gl_Position;
	gl_out[1].gl_PointSize = gl_in[1].gl_PointSize;
	gl_out[1].gl_ClipDistance[1] = gl_in[1].gl_ClipDistance[2];
	gl_TessLevelOuter[3] = L_1;
	gl_TessLevelInner[1] = L_2;
	
}

