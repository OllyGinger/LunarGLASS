
Top IR:
; ModuleID = 'Glslang'

@texSampler1D = external addrspace(1) constant i32
@coords2D_shadow = internal global <2 x float> zeroinitializer
@texSampler2D = external addrspace(1) constant i32
@texSampler3D = external addrspace(1) constant i32
@texSamplerCube = external addrspace(1) constant i32
@shadowSampler1D = external addrspace(1) constant i32
@shadowSampler2D = external addrspace(1) constant i32
@FragColor_shadow = internal global <4 x float> zeroinitializer
@u = external addrspace(2) constant <4 x float>
@blend = external addrspace(2) constant float
@scale = external addrspace(2) constant <2 x float>
@t_shadow = internal global <2 x float> zeroinitializer

define fastcc void @main() {
entry:
  %constructed41 = alloca <3 x float>
  %constructed = alloca <3 x float>
  %gradY = alloca <2 x float>
  %gradX = alloca <2 x float>
  %iLod = alloca i32
  %iCoords2D = alloca <2 x i32>
  %color = alloca <4 x float>
  %coords4D = alloca <4 x float>
  %coords3D = alloca <3 x float>
  %coords1D = alloca float
  %proj = alloca float
  %lod = alloca float
  %bias = alloca float
  %blendscale = alloca float
  store float 0x3FFC9FBE80000000, float* %blendscale
  store float 2.000000e+00, float* %bias
  store float 3.000000e+00, float* %lod
  store float 2.000000e+00, float* %proj
  store float 0x3FFC9FBE80000000, float* %coords1D
  store <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, <3 x float>* %coords3D
  store <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, <4 x float>* %coords4D
  store <4 x float> zeroinitializer, <4 x float>* %color
  %0 = load i32 addrspace(1)* @texSampler1D, !gla.uniform !1
  %1 = load float* %coords1D
  %2 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float %1)
  %3 = load <4 x float>* %color
  %color1 = fadd <4 x float> %3, %2
  store <4 x float> %color1, <4 x float>* %color
  %4 = load i32 addrspace(1)* @texSampler1D, !gla.uniform !1
  %5 = load float* %coords1D
  %6 = load float* %bias
  %7 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %4, i32 130, float %5, float %6, float undef)
  %8 = load <4 x float>* %color
  %color2 = fadd <4 x float> %8, %7
  store <4 x float> %color2, <4 x float>* %color
  %9 = load i32 addrspace(1)* @texSampler1D, !gla.uniform !1
  %coords2D = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D, <2 x float>* @coords2D_shadow
  %10 = load <2 x float>* @coords2D_shadow
  %11 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 1, i32 %9, i32 1, <2 x float> %10)
  %12 = load <4 x float>* %color
  %color3 = fadd <4 x float> %12, %11
  store <4 x float> %color3, <4 x float>* %color
  %13 = load i32 addrspace(1)* @texSampler1D, !gla.uniform !1
  %14 = load <4 x float>* %coords4D
  %15 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 1, i32 %13, i32 1, <4 x float> %14)
  %16 = load <4 x float>* %color
  %color4 = fadd <4 x float> %16, %15
  store <4 x float> %color4, <4 x float>* %color
  %17 = load i32 addrspace(1)* @texSampler1D, !gla.uniform !1
  %coords2D5 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D5, <2 x float>* @coords2D_shadow
  %18 = load <2 x float>* @coords2D_shadow
  %19 = load float* %bias
  %20 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 1, i32 %17, i32 131, <2 x float> %18, float %19, float undef)
  %21 = load <4 x float>* %color
  %color6 = fadd <4 x float> %21, %20
  store <4 x float> %color6, <4 x float>* %color
  %22 = load i32 addrspace(1)* @texSampler1D, !gla.uniform !1
  %23 = load <4 x float>* %coords4D
  %24 = load float* %bias
  %25 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %22, i32 131, <4 x float> %23, float %24, float undef)
  %26 = load <4 x float>* %color
  %color7 = fadd <4 x float> %26, %25
  store <4 x float> %color7, <4 x float>* %color
  %27 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %coords2D8 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D8, <2 x float>* @coords2D_shadow
  %28 = load <2 x float>* @coords2D_shadow
  %29 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %27, i32 0, <2 x float> %28)
  %30 = load <4 x float>* %color
  %color9 = fadd <4 x float> %30, %29
  store <4 x float> %color9, <4 x float>* %color
  %31 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %coords2D10 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D10, <2 x float>* @coords2D_shadow
  %32 = load <2 x float>* @coords2D_shadow
  %33 = load float* %bias
  %34 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %31, i32 130, <2 x float> %32, float %33, float undef)
  %35 = load <4 x float>* %color
  %color11 = fadd <4 x float> %35, %34
  store <4 x float> %color11, <4 x float>* %color
  %36 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %37 = load <3 x float>* %coords3D
  %38 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 2, i32 %36, i32 1, <3 x float> %37)
  %39 = load <4 x float>* %color
  %color12 = fadd <4 x float> %39, %38
  store <4 x float> %color12, <4 x float>* %color
  %40 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %41 = load <4 x float>* %coords4D
  %42 = load float* %bias
  %43 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %40, i32 131, <4 x float> %41, float %42, float undef)
  %44 = load <4 x float>* %color
  %color13 = fadd <4 x float> %44, %43
  store <4 x float> %color13, <4 x float>* %color
  %45 = load i32 addrspace(1)* @texSampler3D, !gla.uniform !7
  %46 = load <3 x float>* %coords3D
  %47 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %45, i32 0, <3 x float> %46)
  %48 = load <4 x float>* %color
  %color14 = fadd <4 x float> %48, %47
  store <4 x float> %color14, <4 x float>* %color
  %49 = load i32 addrspace(1)* @texSampler3D, !gla.uniform !7
  %50 = load <3 x float>* %coords3D
  %51 = load float* %bias
  %52 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %49, i32 130, <3 x float> %50, float %51, float undef)
  %53 = load <4 x float>* %color
  %color15 = fadd <4 x float> %53, %52
  store <4 x float> %color15, <4 x float>* %color
  %54 = load i32 addrspace(1)* @texSampler3D, !gla.uniform !7
  %55 = load <4 x float>* %coords4D
  %56 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %54, i32 1, <4 x float> %55)
  %57 = load <4 x float>* %color
  %color16 = fadd <4 x float> %57, %56
  store <4 x float> %color16, <4 x float>* %color
  %58 = load i32 addrspace(1)* @texSampler3D, !gla.uniform !7
  %59 = load <4 x float>* %coords4D
  %60 = load float* %bias
  %61 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 3, i32 %58, i32 131, <4 x float> %59, float %60, float undef)
  %62 = load <4 x float>* %color
  %color17 = fadd <4 x float> %62, %61
  store <4 x float> %color17, <4 x float>* %color
  %63 = load i32 addrspace(1)* @texSamplerCube, !gla.uniform !10
  %64 = load <3 x float>* %coords3D
  %65 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 4, i32 %63, i32 0, <3 x float> %64)
  %66 = load <4 x float>* %color
  %color18 = fadd <4 x float> %66, %65
  store <4 x float> %color18, <4 x float>* %color
  %67 = load i32 addrspace(1)* @texSamplerCube, !gla.uniform !10
  %68 = load <3 x float>* %coords3D
  %69 = load float* %bias
  %70 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %67, i32 130, <3 x float> %68, float %69, float undef)
  %71 = load <4 x float>* %color
  %color19 = fadd <4 x float> %71, %70
  store <4 x float> %color19, <4 x float>* %color
  %72 = load i32 addrspace(1)* @shadowSampler1D, !gla.uniform !13
  %73 = load <3 x float>* %coords3D
  %74 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %72, i32 8, <3 x float> %73, float undef, float undef)
  %75 = load <4 x float>* %color
  %color20 = fadd <4 x float> %75, %74
  store <4 x float> %color20, <4 x float>* %color
  %76 = load i32 addrspace(1)* @shadowSampler1D, !gla.uniform !13
  %77 = load <3 x float>* %coords3D
  %78 = load float* %bias
  %79 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %76, i32 138, <3 x float> %77, float %78, float undef)
  %80 = load <4 x float>* %color
  %color21 = fadd <4 x float> %80, %79
  store <4 x float> %color21, <4 x float>* %color
  %81 = load i32 addrspace(1)* @shadowSampler2D, !gla.uniform !16
  %82 = load <3 x float>* %coords3D
  %83 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %81, i32 8, <3 x float> %82, float undef, float undef)
  %84 = load <4 x float>* %color
  %color22 = fadd <4 x float> %84, %83
  store <4 x float> %color22, <4 x float>* %color
  %85 = load i32 addrspace(1)* @shadowSampler2D, !gla.uniform !16
  %86 = load <3 x float>* %coords3D
  %87 = load float* %bias
  %88 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %85, i32 138, <3 x float> %86, float %87, float undef)
  %89 = load <4 x float>* %color
  %color23 = fadd <4 x float> %89, %88
  store <4 x float> %color23, <4 x float>* %color
  %90 = load i32 addrspace(1)* @shadowSampler1D, !gla.uniform !13
  %91 = load <4 x float>* %coords4D
  %92 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %90, i32 9, <4 x float> %91, float undef, float undef)
  %93 = load <4 x float>* %color
  %color24 = fadd <4 x float> %93, %92
  store <4 x float> %color24, <4 x float>* %color
  %94 = load i32 addrspace(1)* @shadowSampler1D, !gla.uniform !13
  %95 = load <4 x float>* %coords4D
  %96 = load float* %bias
  %97 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %94, i32 139, <4 x float> %95, float %96, float undef)
  %98 = load <4 x float>* %color
  %color25 = fadd <4 x float> %98, %97
  store <4 x float> %color25, <4 x float>* %color
  %99 = load i32 addrspace(1)* @shadowSampler2D, !gla.uniform !16
  %100 = load <4 x float>* %coords4D
  %101 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %99, i32 9, <4 x float> %100, float undef, float undef)
  %102 = load <4 x float>* %color
  %color26 = fadd <4 x float> %102, %101
  store <4 x float> %color26, <4 x float>* %color
  %103 = load i32 addrspace(1)* @shadowSampler2D, !gla.uniform !16
  %104 = load <4 x float>* %coords4D
  %105 = load float* %bias
  %106 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %103, i32 139, <4 x float> %104, float %105, float undef)
  %107 = load <4 x float>* %color
  %color27 = fadd <4 x float> %107, %106
  store <4 x float> %color27, <4 x float>* %color
  store <2 x i32> <i32 0, i32 5>, <2 x i32>* %iCoords2D
  store i32 1, i32* %iLod
  %108 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %109 = load <2 x i32>* %iCoords2D
  %110 = load i32* %iLod
  %111 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32 2, i32 %108, i32 162, <2 x i32> %109, i32 %110, float undef, i32 undef)
  %112 = load <4 x float>* %color
  %color28 = fadd <4 x float> %112, %111
  store <4 x float> %color28, <4 x float>* %color
  %coords2D29 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D29, <2 x float>* @coords2D_shadow
  %113 = load <2 x float>* @coords2D_shadow
  %gradX30 = call <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float> %113)
  store <2 x float> %gradX30, <2 x float>* %gradX
  %coords2D31 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D31, <2 x float>* @coords2D_shadow
  %114 = load <2 x float>* @coords2D_shadow
  %gradY32 = call <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float> %114)
  store <2 x float> %gradY32, <2 x float>* %gradY
  %115 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %coords2D33 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D33, <2 x float>* @coords2D_shadow
  %116 = load <2 x float>* @coords2D_shadow
  %117 = load <2 x float>* %gradX
  %118 = load <2 x float>* %gradY
  %119 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32 2, i32 %115, i32 0, <2 x float> %116, float undef, float undef, i32 undef, <2 x float> %117, <2 x float> %118)
  %120 = load <4 x float>* %color
  %color34 = fadd <4 x float> %120, %119
  store <4 x float> %color34, <4 x float>* %color
  %121 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %coords2D35 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D35, <2 x float>* @coords2D_shadow
  %122 = load <2 x float>* @coords2D_shadow
  %123 = load float* %proj
  %124 = load <3 x float>* %constructed
  %125 = extractelement <2 x float> %122, i32 0
  %126 = insertelement <3 x float> %124, float %125, i32 0
  %127 = extractelement <2 x float> %122, i32 1
  %128 = insertelement <3 x float> %126, float %127, i32 1
  %129 = insertelement <3 x float> %128, float %123, i32 2
  %130 = load <2 x float>* %gradX
  %131 = load <2 x float>* %gradY
  %132 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v2f32.v2f32(i32 2, i32 %121, i32 1, <3 x float> %129, float undef, float undef, i32 undef, <2 x float> %130, <2 x float> %131)
  %133 = load <4 x float>* %color
  %color36 = fadd <4 x float> %133, %132
  store <4 x float> %color36, <4 x float>* %color
  %134 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %coords2D37 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D37, <2 x float>* @coords2D_shadow
  %135 = load <2 x float>* @coords2D_shadow
  %136 = load <2 x float>* %gradX
  %137 = load <2 x float>* %gradY
  %138 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.v2i32.v2f32.v2f32(i32 2, i32 %134, i32 256, <2 x float> %135, float undef, float undef, <2 x i32> <i32 3, i32 -7>, <2 x float> %136, <2 x float> %137)
  %139 = load <4 x float>* %color
  %color38 = fadd <4 x float> %139, %138
  store <4 x float> %color38, <4 x float>* %color
  %140 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !4
  %141 = load <3 x float>* %coords3D
  %142 = load <2 x float>* %gradX
  %143 = load <2 x float>* %gradY
  %144 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32 2, i32 %140, i32 257, <3 x float> %141, float undef, float undef, <2 x i32> <i32 3, i32 -7>, <2 x float> %142, <2 x float> %143)
  %145 = load <4 x float>* %color
  %color39 = fadd <4 x float> %145, %144
  store <4 x float> %color39, <4 x float>* %color
  %146 = load i32 addrspace(1)* @shadowSampler2D, !gla.uniform !16
  %coords2D40 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  store <2 x float> %coords2D40, <2 x float>* @coords2D_shadow
  %147 = load <2 x float>* @coords2D_shadow
  %148 = load float* %lod
  %149 = load <3 x float>* %constructed41
  %150 = extractelement <2 x float> %147, i32 0
  %151 = insertelement <3 x float> %149, float %150, i32 0
  %152 = extractelement <2 x float> %147, i32 1
  %153 = insertelement <3 x float> %151, float %152, i32 1
  %154 = insertelement <3 x float> %153, float %148, i32 2
  %155 = load <2 x float>* %gradX
  %156 = load <2 x float>* %gradY
  %157 = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v3f32.i32.v2f32.v2f32(i32 2, i32 %146, i32 8, <3 x float> %154, float undef, float undef, i32 undef, <2 x float> %155, <2 x float> %156)
  %158 = load <4 x float>* %color
  %159 = insertelement <4 x float> undef, float %157, i32 0
  %160 = insertelement <4 x float> %159, float %157, i32 1
  %161 = insertelement <4 x float> %160, float %157, i32 2
  %162 = insertelement <4 x float> %161, float %157, i32 3
  %color42 = fadd <4 x float> %158, %162
  store <4 x float> %color42, <4 x float>* %color
  %163 = load <4 x float>* %color
  %164 = load <4 x float> addrspace(2)* @u, !gla.uniform !19
  %165 = load float addrspace(2)* @blend, !gla.uniform !21
  %166 = load float* %blendscale
  %167 = fmul float %165, %166
  %FragColor_shadow = call <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float> %163, <4 x float> %164, float %167)
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %168 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1025, i32 -1, <4 x float> %168), !gla.output !27
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32, i32, i32, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32, i32, i32, <4 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32, i32, i32, <3 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32, i32, i32, <2 x i32>, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, i32, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.v2i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float>, <4 x float>, float) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !4, !7, !10, !13, !16, !19, !21, !22}
!gla.inputs = !{!23, !25}
!gla.outputs = !{!27}
!gla.noStaticUse = !{!22, !25}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"texSampler1D", i32 12, i32* @texSampler1D_typeProxy, metadata !2}
!2 = metadata !{i32 5, i32 0, i32 1024, metadata !3}
!3 = metadata !{i32 0, i32* @texSampler1D_typeProxy, i32 0, i1 false, i1 false, i32 0}
!4 = metadata !{metadata !"texSampler2D", i32 12, i32* @texSampler2D_typeProxy, metadata !5}
!5 = metadata !{i32 5, i32 0, i32 1024, metadata !6}
!6 = metadata !{i32 0, i32* @texSampler2D_typeProxy, i32 1, i1 false, i1 false, i32 0}
!7 = metadata !{metadata !"texSampler3D", i32 12, i32* @texSampler3D_typeProxy, metadata !8}
!8 = metadata !{i32 5, i32 0, i32 1024, metadata !9}
!9 = metadata !{i32 0, i32* @texSampler3D_typeProxy, i32 2, i1 false, i1 false, i32 0}
!10 = metadata !{metadata !"texSamplerCube", i32 12, i32* @texSamplerCube_typeProxy, metadata !11}
!11 = metadata !{i32 5, i32 0, i32 1024, metadata !12}
!12 = metadata !{i32 0, i32* @texSamplerCube_typeProxy, i32 3, i1 false, i1 false, i32 0}
!13 = metadata !{metadata !"shadowSampler1D", i32 12, i32* @shadowSampler1D_typeProxy, metadata !14}
!14 = metadata !{i32 5, i32 0, i32 1024, metadata !15}
!15 = metadata !{i32 0, i32* @shadowSampler1D_typeProxy, i32 0, i1 false, i1 true, i32 0}
!16 = metadata !{metadata !"shadowSampler2D", i32 12, i32* @shadowSampler2D_typeProxy, metadata !17}
!17 = metadata !{i32 5, i32 0, i32 1024, metadata !18}
!18 = metadata !{i32 0, i32* @shadowSampler2D_typeProxy, i32 1, i1 false, i1 true, i32 0}
!19 = metadata !{metadata !"u", i32 12, <4 x float>* @u_typeProxy, metadata !20}
!20 = metadata !{i32 0, i32 0, i32 1024, null}
!21 = metadata !{metadata !"blend", i32 12, float* @blend_typeProxy, metadata !20}
!22 = metadata !{metadata !"scale", i32 12, <2 x float>* @scale_typeProxy, metadata !20}
!23 = metadata !{metadata !"coords2D", i32 1, <2 x float>* @coords2D_shadow_typeProxy, metadata !24}
!24 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!25 = metadata !{metadata !"t", i32 1, <2 x float>* @t_shadow_typeProxy, metadata !26}
!26 = metadata !{i32 0, i32 0, i32 1026, null, i32 1}
!27 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !28}
!28 = metadata !{i32 0, i32 0, i32 1025, null, i32 0}


Bottom IR:
; ModuleID = 'Glslang'

@texSampler1D = external addrspace(1) constant i32
@texSampler2D = external addrspace(1) constant i32
@texSampler3D = external addrspace(1) constant i32
@texSamplerCube = external addrspace(1) constant i32
@shadowSampler1D = external addrspace(1) constant i32
@shadowSampler2D = external addrspace(1) constant i32
@u = external addrspace(2) constant <4 x float>
@blend = external addrspace(2) constant float

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @texSampler1D, align 4, !gla.uniform !1
  %1 = load i32 addrspace(1)* @texSampler2D, align 4, !gla.uniform !4
  %2 = load i32 addrspace(1)* @texSampler3D, align 4, !gla.uniform !7
  %3 = load i32 addrspace(1)* @texSamplerCube, align 4, !gla.uniform !10
  %4 = load i32 addrspace(1)* @shadowSampler1D, align 4, !gla.uniform !13
  %5 = load i32 addrspace(1)* @shadowSampler2D, align 4, !gla.uniform !16
  %coords2D29 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !23
  %gradX30 = call <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float> %coords2D29)
  %gradY32 = call <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float> %coords2D29)
  %6 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.v2f32.v2f32.f32.f32(<3 x float> undef, i32 7, <2 x float> %coords2D29, i32 0, <2 x float> %coords2D29, i32 1, float 3.000000e+00, i32 0, float undef, i32 undef)
  %7 = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v3f32.i32.v2f32.v2f32(i32 2, i32 %5, i32 8, <3 x float> %6, float undef, float undef, i32 undef, <2 x float> %gradX30, <2 x float> %gradY32)
  %8 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %7, <4 x i32> zeroinitializer)
  %9 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 130, float 0x3FFC9FBE80000000, float 2.000000e+00, float undef)
  %10 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float 0x3FFC9FBE80000000)
  %11 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 1, i32 %0, i32 1, <2 x float> %coords2D29)
  %color2 = fadd <4 x float> %9, %10
  %12 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 1, i32 %0, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>)
  %color3 = fadd <4 x float> %color2, %11
  %13 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 1, i32 %0, i32 131, <2 x float> %coords2D29, float 2.000000e+00, float undef)
  %color4 = fadd <4 x float> %color3, %12
  %14 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %0, i32 131, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color6 = fadd <4 x float> %color4, %13
  %15 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %1, i32 0, <2 x float> %coords2D29)
  %color7 = fadd <4 x float> %color6, %14
  %16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %1, i32 130, <2 x float> %coords2D29, float 2.000000e+00, float undef)
  %color9 = fadd <4 x float> %color7, %15
  %17 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 2, i32 %1, i32 1, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color11 = fadd <4 x float> %color9, %16
  %18 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %1, i32 131, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color12 = fadd <4 x float> %color11, %17
  %19 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %2, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color13 = fadd <4 x float> %color12, %18
  %20 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %2, i32 130, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color14 = fadd <4 x float> %color13, %19
  %21 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %2, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>)
  %color15 = fadd <4 x float> %color14, %20
  %22 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 3, i32 %2, i32 131, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color16 = fadd <4 x float> %color15, %21
  %23 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 4, i32 %3, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color17 = fadd <4 x float> %color16, %22
  %24 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %3, i32 130, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color18 = fadd <4 x float> %color17, %23
  %25 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %4, i32 8, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float undef, float undef)
  %color19 = fadd <4 x float> %color18, %24
  %26 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %4, i32 138, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color20 = fadd <4 x float> %color19, %25
  %27 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %5, i32 8, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float undef, float undef)
  %color21 = fadd <4 x float> %color20, %26
  %28 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %5, i32 138, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color22 = fadd <4 x float> %color21, %27
  %29 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %4, i32 9, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float undef, float undef)
  %color23 = fadd <4 x float> %color22, %28
  %30 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %4, i32 139, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color24 = fadd <4 x float> %color23, %29
  %31 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %5, i32 9, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float undef, float undef)
  %color25 = fadd <4 x float> %color24, %30
  %32 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %5, i32 139, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color26 = fadd <4 x float> %color25, %31
  %33 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32 2, i32 %1, i32 162, <2 x i32> <i32 0, i32 5>, i32 1, float undef, i32 undef)
  %color27 = fadd <4 x float> %color26, %32
  %34 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.v2f32.v2f32.f32.f32(<3 x float> undef, i32 7, <2 x float> %coords2D29, i32 0, <2 x float> %coords2D29, i32 1, float 2.000000e+00, i32 0, float undef, i32 undef)
  %35 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32 2, i32 %1, i32 0, <2 x float> %coords2D29, float undef, float undef, i32 undef, <2 x float> %gradX30, <2 x float> %gradY32)
  %color28 = fadd <4 x float> %color27, %33
  %36 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v2f32.v2f32(i32 2, i32 %1, i32 1, <3 x float> %34, float undef, float undef, i32 undef, <2 x float> %gradX30, <2 x float> %gradY32)
  %color34 = fadd <4 x float> %color28, %35
  %37 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.v2i32.v2f32.v2f32(i32 2, i32 %1, i32 256, <2 x float> %coords2D29, float undef, float undef, <2 x i32> <i32 3, i32 -7>, <2 x float> %gradX30, <2 x float> %gradY32)
  %color36 = fadd <4 x float> %color34, %36
  %38 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32 2, i32 %1, i32 257, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float undef, float undef, <2 x i32> <i32 3, i32 -7>, <2 x float> %gradX30, <2 x float> %gradY32)
  %color38 = fadd <4 x float> %color36, %37
  %39 = load float addrspace(2)* @blend, align 4, !gla.uniform !21
  %color39 = fadd <4 x float> %color38, %38
  %40 = fmul float %39, 0x3FFC9FBE80000000
  %41 = load <4 x float> addrspace(2)* @u, align 16, !gla.uniform !19
  %color42 = fadd <4 x float> %8, %color39
  %FragColor_shadow = call <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float> %color42, <4 x float> %41, float %40)
  call void @llvm.gla.fWriteData.v4f32(i32 1025, i32 -1, <4 x float> %FragColor_shadow), !gla.output !27
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32, i32, i32, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32, i32, i32, <4 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32, i32, i32, <3 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32, i32, i32, <2 x i32>, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, i32, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.v2i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float>, <4 x float>, float) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #1

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.v2f32.v2f32.f32.f32(<3 x float>, i32, <2 x float>, i32, <2 x float>, i32, float, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !4, !7, !10, !13, !16, !19, !21, !22}
!gla.inputs = !{!23, !25}
!gla.outputs = !{!27}
!gla.noStaticUse = !{!22, !25}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"texSampler1D", i32 12, i32* @texSampler1D_typeProxy, metadata !2}
!2 = metadata !{i32 5, i32 0, i32 1024, metadata !3}
!3 = metadata !{i32 0, i32* @texSampler1D_typeProxy, i32 0, i1 false, i1 false, i32 0}
!4 = metadata !{metadata !"texSampler2D", i32 12, i32* @texSampler2D_typeProxy, metadata !5}
!5 = metadata !{i32 5, i32 0, i32 1024, metadata !6}
!6 = metadata !{i32 0, i32* @texSampler2D_typeProxy, i32 1, i1 false, i1 false, i32 0}
!7 = metadata !{metadata !"texSampler3D", i32 12, i32* @texSampler3D_typeProxy, metadata !8}
!8 = metadata !{i32 5, i32 0, i32 1024, metadata !9}
!9 = metadata !{i32 0, i32* @texSampler3D_typeProxy, i32 2, i1 false, i1 false, i32 0}
!10 = metadata !{metadata !"texSamplerCube", i32 12, i32* @texSamplerCube_typeProxy, metadata !11}
!11 = metadata !{i32 5, i32 0, i32 1024, metadata !12}
!12 = metadata !{i32 0, i32* @texSamplerCube_typeProxy, i32 3, i1 false, i1 false, i32 0}
!13 = metadata !{metadata !"shadowSampler1D", i32 12, i32* @shadowSampler1D_typeProxy, metadata !14}
!14 = metadata !{i32 5, i32 0, i32 1024, metadata !15}
!15 = metadata !{i32 0, i32* @shadowSampler1D_typeProxy, i32 0, i1 false, i1 true, i32 0}
!16 = metadata !{metadata !"shadowSampler2D", i32 12, i32* @shadowSampler2D_typeProxy, metadata !17}
!17 = metadata !{i32 5, i32 0, i32 1024, metadata !18}
!18 = metadata !{i32 0, i32* @shadowSampler2D_typeProxy, i32 1, i1 false, i1 true, i32 0}
!19 = metadata !{metadata !"u", i32 12, <4 x float>* @u_typeProxy, metadata !20}
!20 = metadata !{i32 0, i32 0, i32 1024, null}
!21 = metadata !{metadata !"blend", i32 12, float* @blend_typeProxy, metadata !20}
!22 = metadata !{metadata !"scale", i32 12, <2 x float>* @scale_typeProxy, metadata !20}
!23 = metadata !{metadata !"coords2D", i32 1, <2 x float>* @coords2D_shadow_typeProxy, metadata !24}
!24 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!25 = metadata !{metadata !"t", i32 1, <2 x float>* @t_shadow_typeProxy, metadata !26}
!26 = metadata !{i32 0, i32 0, i32 1026, null, i32 1}
!27 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !28}
!28 = metadata !{i32 0, i32 0, i32 1025, null, i32 0}
#version 130
// LunarGOO output
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
uniform vec4 u;
uniform float blend;
uniform vec2 scale;
in vec2 coords2D;
in vec2 t;
const float const24 = 3.0;
const float const28 = 1.789;
const float const29 = 2.0;
const vec4 const34 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 const45 = vec3(1.789, 2.718, 3.453);
const ivec2 const78 = ivec2(0, 5);
const int const79i_1 = 1;
const ivec2 const87 = ivec2(3, -7);

void main()
{
    vec2 gradX_c1 = dFdx(coords2D);
    vec2 gradY_c2 = dFdy(coords2D);
    vec3 temp23;
    temp23.xyz = vec3(coords2D.x, coords2D.y, const24);
    float temp25 = textureGrad(shadowSampler2D, temp23, gradX_c1, gradY_c2);
    vec4 temp26 = vec4(temp25);
    vec4 temp27 = texture(texSampler1D, const28, const29);
    vec4 temp30 = texture(texSampler1D, const28);
    vec4 temp31 = textureProj(texSampler1D, coords2D);
    vec4 color_c3 = temp27 + temp30;
    vec4 temp33 = textureProj(texSampler1D, const34);
    vec4 color_c4 = color_c3 + temp31;
    vec4 temp36 = textureProj(texSampler1D, coords2D, const29);
    vec4 color_c5 = color_c4 + temp33;
    vec4 temp38 = textureProj(texSampler1D, const34, const29);
    vec4 color_c6 = color_c5 + temp36;
    vec4 temp40 = texture(texSampler2D, coords2D);
    vec4 color_c7 = color_c6 + temp38;
    vec4 temp42 = texture(texSampler2D, coords2D, const29);
    vec4 color_c8 = color_c7 + temp40;
    vec4 temp44 = textureProj(texSampler2D, const45);
    vec4 color_c9 = color_c8 + temp42;
    vec4 temp47 = textureProj(texSampler2D, const34, const29);
    vec4 color_c10 = color_c9 + temp44;
    vec4 temp49 = texture(texSampler3D, const45);
    vec4 color_c11 = color_c10 + temp47;
    vec4 temp51 = texture(texSampler3D, const45, const29);
    vec4 color_c12 = color_c11 + temp49;
    vec4 temp53 = textureProj(texSampler3D, const34);
    vec4 color_c13 = color_c12 + temp51;
    vec4 temp55 = textureProj(texSampler3D, const34, const29);
    vec4 color_c14 = color_c13 + temp53;
    vec4 temp57 = texture(texSamplerCube, const45);
    vec4 color_c15 = color_c14 + temp55;
    vec4 temp59 = texture(texSamplerCube, const45, const29);
    vec4 color_c16 = color_c15 + temp57;
    vec4 temp61 = shadow1D(shadowSampler1D, const45);
    vec4 color_c17 = color_c16 + temp59;
    vec4 temp63 = shadow1D(shadowSampler1D, const45, const29);
    vec4 color_c18 = color_c17 + temp61;
    vec4 temp65 = shadow2D(shadowSampler2D, const45);
    vec4 color_c19 = color_c18 + temp63;
    vec4 temp67 = shadow2D(shadowSampler2D, const45, const29);
    vec4 color_c20 = color_c19 + temp65;
    vec4 temp69 = shadow1DProj(shadowSampler1D, const34);
    vec4 color_c21 = color_c20 + temp67;
    vec4 temp71 = shadow1DProj(shadowSampler1D, const34, const29);
    vec4 color_c22 = color_c21 + temp69;
    vec4 temp73 = shadow2DProj(shadowSampler2D, const34);
    vec4 color_c23 = color_c22 + temp71;
    vec4 temp75 = shadow2DProj(shadowSampler2D, const34, const29);
    vec4 color_c24 = color_c23 + temp73;
    vec4 temp77 = texelFetch(texSampler2D, const78, const79i_1);
    vec4 color_c25 = color_c24 + temp75;
    vec3 temp81;
    temp81.xyz = vec3(coords2D.x, coords2D.y, const29);
    vec4 temp82 = textureGrad(texSampler2D, coords2D, gradX_c1, gradY_c2);
    vec4 color_c26 = color_c25 + temp77;
    vec4 temp84 = textureProjGrad(texSampler2D, temp81, gradX_c1, gradY_c2);
    vec4 color_c27 = color_c26 + temp82;
    vec4 temp86 = textureGradOffset(texSampler2D, coords2D, gradX_c1, gradY_c2, const87);
    vec4 color_c28 = color_c27 + temp84;
    vec4 temp89 = textureProjGradOffset(texSampler2D, const45, gradX_c1, gradY_c2, const87);
    vec4 color_c29 = color_c28 + temp86;
    vec4 color_c30 = color_c29 + temp89;
    float temp92 = blend * const28;
    vec4 color_c31 = color_c30 + temp26;
    vec4 FragColor_shadow_c32 = mix(color_c31, u, temp92);
    gl_FragColor = FragColor_shadow_c32;
    
}


#version 130
// LunarGOO output
uniform sampler2DShadow shadowSampler2D;
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform float blend;
uniform vec4 u;
uniform vec2 scale;
in vec2 coords2D;
in vec2 t;
const float const24 = 3.0;
const float const28 = 1.789;
const float const30 = 2.0;
const vec4 const35 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 const46 = vec3(1.789, 2.718, 3.453);
const ivec2 const79 = ivec2(0, 5);
const int const80i_1 = 1;
const ivec2 const88 = ivec2(3, -7);

void main()
{
    vec2 gradX_c1 = dFdx(coords2D);
    vec2 gradY_c2 = dFdy(coords2D);
    vec3 temp23;
    temp23.xyz = vec3(coords2D.x, coords2D.y, const24);
    float temp_c3 = textureGrad(shadowSampler2D, temp23, gradX_c1, gradY_c2);
    vec4 temp26 = vec4(temp_c3);
    vec4 temp_c4 = texture(texSampler1D, const28);
    vec4 temp_c5 = texture(texSampler1D, const28, const30);
    vec4 color_c6 = temp_c4 + temp_c5;
    vec4 temp_c7 = textureProj(texSampler1D, coords2D);
    vec4 color_c8 = color_c6 + temp_c7;
    vec4 temp_c9 = textureProj(texSampler1D, const35);
    vec4 color_c10 = color_c8 + temp_c9;
    vec4 temp_c11 = textureProj(texSampler1D, coords2D, const30);
    vec4 color_c12 = color_c10 + temp_c11;
    vec4 temp_c13 = textureProj(texSampler1D, const35, const30);
    vec4 color_c14 = color_c12 + temp_c13;
    vec4 temp_c15 = texture(texSampler2D, coords2D);
    vec4 color_c16 = color_c14 + temp_c15;
    vec4 temp_c17 = texture(texSampler2D, coords2D, const30);
    vec4 color_c18 = color_c16 + temp_c17;
    vec4 temp_c19 = textureProj(texSampler2D, const46);
    vec4 color_c20 = color_c18 + temp_c19;
    vec4 temp_c21 = textureProj(texSampler2D, const35, const30);
    vec4 color_c22 = color_c20 + temp_c21;
    vec4 temp_c23 = texture(texSampler3D, const46);
    vec4 color_c24 = color_c22 + temp_c23;
    vec4 temp_c25 = texture(texSampler3D, const46, const30);
    vec4 color_c26 = color_c24 + temp_c25;
    vec4 temp_c27 = textureProj(texSampler3D, const35);
    vec4 color_c28 = color_c26 + temp_c27;
    vec4 temp_c29 = textureProj(texSampler3D, const35, const30);
    vec4 color_c30 = color_c28 + temp_c29;
    vec4 temp_c31 = texture(texSamplerCube, const46);
    vec4 color_c32 = color_c30 + temp_c31;
    vec4 temp_c33 = texture(texSamplerCube, const46, const30);
    vec4 color_c34 = color_c32 + temp_c33;
    vec4 temp_c35 = shadow1D(shadowSampler1D, const46);
    vec4 color_c36 = color_c34 + temp_c35;
    vec4 temp_c37 = shadow1D(shadowSampler1D, const46, const30);
    vec4 color_c38 = color_c36 + temp_c37;
    vec4 temp_c39 = shadow2D(shadowSampler2D, const46);
    vec4 color_c40 = color_c38 + temp_c39;
    vec4 temp_c41 = shadow2D(shadowSampler2D, const46, const30);
    vec4 color_c42 = color_c40 + temp_c41;
    vec4 temp_c43 = shadow1DProj(shadowSampler1D, const35);
    vec4 color_c44 = color_c42 + temp_c43;
    vec4 temp_c45 = shadow1DProj(shadowSampler1D, const35, const30);
    vec4 color_c46 = color_c44 + temp_c45;
    vec4 temp_c47 = shadow2DProj(shadowSampler2D, const35);
    vec4 color_c48 = color_c46 + temp_c47;
    vec4 temp_c49 = shadow2DProj(shadowSampler2D, const35, const30);
    vec4 color_c50 = color_c48 + temp_c49;
    vec4 temp_c51 = texelFetch(texSampler2D, const79, const80i_1);
    vec4 color_c52 = color_c50 + temp_c51;
    vec4 temp_c53 = textureGrad(texSampler2D, coords2D, gradX_c1, gradY_c2);
    vec3 temp83;
    temp83.xyz = vec3(coords2D.x, coords2D.y, const30);
    vec4 color_c54 = color_c52 + temp_c53;
    vec4 temp_c55 = textureProjGrad(texSampler2D, temp83, gradX_c1, gradY_c2);
    vec4 color_c56 = color_c54 + temp_c55;
    vec4 temp_c57 = textureGradOffset(texSampler2D, coords2D, gradX_c1, gradY_c2, const88);
    vec4 color_c58 = color_c56 + temp_c57;
    vec4 temp_c59 = textureProjGradOffset(texSampler2D, const46, gradX_c1, gradY_c2, const88);
    vec4 color_c60 = color_c58 + temp_c59;
    vec4 color_c61 = color_c60 + temp26;
    float temp_c62 = blend * const28;
    vec4 FragColor_shadow_c63 = mix(color_c61, u, temp_c62);
    gl_FragColor = FragColor_shadow_c63;
    
}


