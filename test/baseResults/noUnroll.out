doWhileLoop.frag
#version 110
// LunarGOO output
uniform vec4 bigColor;
uniform float d;
varying vec4 BaseColor;
vec4 color1;

void main()
{
	vec4 color;
	color = BaseColor;
	while (true) {
		color1 = bigColor + color;
		bool H_6ao87e = color1.x >= d;
		if (H_6ao87e) {
			break;
		}
		
		color = color1;
	}
	
	gl_FragColor = color1;
	
}

forLoop.frag
#version 130
// LunarGOO output
uniform int Count;
uniform vec4 bigColor;
uniform uvec4 v4;
in vec4 BaseColor;
in float f;
vec4 gla_globalAgg;
const int C_0 = 0;
const float C_0d0 = 0.0;
vec4 Lg_7;
const int C_2 = 2;
vec3 Lg_8;
const int C_1 = 1;

void main()
{
	vec4 Lg_1;
	int i;
	float sum;
	int Lg_2;
	int Lg_3;
	vec4 tv;
	vec4 r;
	int Lg_4;
	vec4 Lg_5;
	int Lg_6;
	Lg_1 = BaseColor;
	i = C_0;
	for (i = 0; i < Count; ++i) {
		vec4 color = Lg_1 + bigColor;
		Lg_1 = color;
	}
	
	gl_FragColor = Lg_1;
	sum = C_0d0;
	Lg_2 = C_0;
	for ( ; Lg_2 != 4; ++Lg_2) {
		Lg_7 = vec4(sum);
		float H_gmopng = float(ivec4(v4)[Lg_2]);
		float sum1 = H_gmopng + sum;
		sum = sum1;
	}
	
	Lg_3 = C_0;
	tv = gla_globalAgg;
	for ( ; Lg_3 != 4; ++Lg_3) {
		int H_exkixg1 = ivec4(v4)[Lg_3] << C_2;
		float H_clpxp61 = float(H_exkixg1);
		vec4 tv1 = tv;
		tv1[Lg_3] = H_clpxp61;
		tv = tv1;
	}
	
	vec4 H_rxko521 = Lg_7 + tv;
	vec4 Ll_FragColor1 = H_rxko521 + Lg_1;
	gl_FragColor = Ll_FragColor1;
	vec4 H_wlwz58 = vec4(f);
	r = BaseColor;
	Lg_4 = C_0;
	while (true) {
		bool H_wox96k = Lg_4 < Count;
		if (! H_wox96k) {
			break;
		}
		
		vec4 H_xdyojw1 = r;
		H_xdyojw1.w = f;
		int H_zk97sd1 = Lg_4 + C_1;
		r = H_xdyojw1;
		Lg_4 = H_zk97sd1;
	}
	
	vec3 H_bbezxw = Ll_FragColor1.xyz + r.xyz;
	vec4 H_oazljt = Ll_FragColor1;
	H_oazljt.xyz = H_bbezxw.xyz;
	gl_FragColor = H_oazljt;
	Lg_5 = H_oazljt;
	Lg_6 = C_0;
	for ( ; Lg_6 <= 15; Lg_6 += 4) {
		vec4 Ll_FragColor2 = H_wlwz58 * Lg_5;
		gl_FragColor = Ll_FragColor2;
		Lg_5 = Ll_FragColor2;
	}
	
	
}

loops.frag
#version 130
// LunarGOO output
uniform float d;
uniform vec4 bigColor;
uniform vec4 bigColor1_1;
uniform float d2;
uniform float d3;
uniform vec4 bigColor1_2;
uniform vec4 bigColor1_3;
uniform float d4;
uniform int Count;
uniform vec4 bigColor2;
uniform vec4 bigColor3;
uniform vec4 bigColor4;
uniform vec4 bigColor5;
uniform float d5;
uniform float d6;
uniform vec4 bigColor6;
uniform float d7;
uniform vec4 bigColor7;
uniform float d8;
uniform float d9;
uniform float d10;
uniform float d11;
uniform float d12;
uniform vec4 bigColor8;
uniform float d14;
uniform float d15;
uniform float d16;
uniform float d18;
uniform float d17;
uniform float d13;
uniform float d19;
uniform float d20;
uniform float d21;
uniform float d22;
uniform float d23;
uniform float d24;
uniform float d25;
uniform float d26;
uniform float d27;
uniform float d28;
uniform float d29;
uniform float d30;
uniform float d31;
uniform float d32;
uniform float d33;
uniform float d34;
in vec4 BaseColor;
const float C_0d33 = 0.33;
const float C_0d66 = 0.66;
const vec4 C_vec4p0d66p = vec4(0.66);
const vec4 C_vec4p0d33p = vec4(0.33);
const float C_42d0 = 42.0;
const vec4 C_vec4p1d0p = vec4(1.0);
vec4 color81;
const int C_0 = 0;
vec4 colorb1;
const float C_20d0 = 20.0;
const float C_1d0 = 1.0;
const int C_41 = 41;
vec4 Lg_6;
const int C_1 = 1;
vec4 select7;
vec4 select8;
float Lg_7;
vec4 colorf1;
const float C_0d0 = 0.0;
vec4 colorg1;
vec4 colori1;
const float C_2d0 = 2.0;
vec4 colorj1;
const float C_5d0 = 5.0;
vec4 Lg_8;
const float C_10d0 = 10.0;
vec4 colorp1;

void main()
{
	vec4 color;
	vec4 color1;
	vec4 color2;
	vec4 color3;
	vec4 color4;
	vec4 color5;
	vec4 color6;
	int i;
	vec4 color7;
	vec4 color8;
	int Lg_1;
	vec4 color9;
	int Lg_2;
	vec4 colora;
	int Lg_3;
	vec4 colorb;
	int Lg_4;
	vec4 colorc;
	int Lg_5;
	vec4 colord;
	vec4 colore;
	vec4 colorf;
	vec4 colorg;
	vec4 colorh;
	vec4 colori;
	vec4 colorj;
	vec4 colork;
	vec4 colorl;
	vec4 colorm;
	vec4 colorn;
	vec4 coloro;
	vec4 colorp;
	vec4 colorq;
	vec4 colorr;
	vec4 colors;
	vec4 colort;
	vec4 coloru;
	vec4 colorv;
	vec4 colorw;
	vec4 colorx;
	vec4 colory;
	vec4 colorz;
	vec4 color01;
	vec4 color11;
	vec4 color21;
	bool H_bghf2q1 = BaseColor.x < C_0d33;
	bool H_9j9phn = BaseColor.x < C_0d66;
	vec4 select = H_9j9phn ? C_vec4p0d66p : C_vec4p0d33p;
	vec4 select1 = H_bghf2q1 ? C_vec4p0d33p : select;
	vec4 select2 = BaseColor + select1;
	color = select2;
	while (color.x < d) {
		vec4 color31 = bigColor + color;
		color = color31;
	}
	
	color1 = color;
	while (color1.z < d) {
		vec4 color41 = bigColor1_1 + color1;
		bool H_ciwe3y = color41.w < d;
		vec4 color51 = bigColor1_1 + color41;
		vec4 select3 = H_ciwe3y ? color41 : color51;
		color1 = select3;
	}
	
	color2 = color1;
	while (color2.x < C_42d0) {
		vec4 color61 = color2 + C_vec4p1d0p;
		color2 = color61;
	}
	
	color3 = color2;
	while (true) {
		bool notlhs = color3.w >= d2;
		bool notrhs = color3.y >= d3;
		bool H_nbn92x = notrhs || notlhs;
		if (H_nbn92x) {
			break;
		}
		
		vec4 color71 = bigColor1_2 + color3;
		color3 = color71;
	}
	
	color4 = color3;
	while (color4.z < d3) {
		color81 = bigColor1_3 + color4;
		bool H_aa30iq1 = color81.y < d4;
		if (H_aa30iq1) {
			color5 = color81;
			break;
		}
		
		vec4 color91 = bigColor1_3 + color81;
		color4 = color91;
	}
	
	color5 = color4;
	color6 = color5;
	i = C_0;
	for (i = 0; i < Count; ++i) {
		vec4 colora1 = bigColor2 + color6;
		color6 = colora1;
	}
	
	color7 = color6;
	while (true) {
		colorb1 = bigColor3 + color7;
		bool H_epjgbn = colorb1.x >= d2;
		if (H_epjgbn) {
			break;
		}
		
		color7 = colorb1;
	}
	
	color8 = colorb1;
	Lg_1 = C_0;
	for ( ; Lg_1 != 42; ++Lg_1) {
		float H_mjhfad = color8.z + d3;
		vec4 H_wgo1rc = color8;
		H_wgo1rc.z = H_mjhfad;
		color8 = H_wgo1rc;
	}
	
	color9 = color8;
	Lg_2 = C_0;
	for ( ; Lg_2 != 100; ++Lg_2) {
		bool H_dkcc0l1 = color9.z < C_20d0;
		float H_xi9dur1 = color9.x + C_1d0;
		vec4 H_v5a11d = color9;
		H_v5a11d.x = H_xi9dur1;
		float H_64nt4p = C_1d0 + color9.y;
		vec4 H_v5a11dr = color9;
		H_v5a11dr.y = H_64nt4p;
		vec4 select4 = H_dkcc0l1 ? H_v5a11d : H_v5a11dr;
		color9 = select4;
	}
	
	colora = color9;
	Lg_3 = C_0;
	for ( ; Lg_3 != 120; ++Lg_3) {
		bool H_5cg22m1 = colora.z < C_20d0;
		float H_t50h6y1 = C_1d0 + colora.x;
		vec4 H_ze6hx1 = colora;
		H_ze6hx1.x = H_t50h6y1;
		float H_ugehwx1 = C_1d0 + colora.y;
		vec4 H_ze6hx1r = colora;
		H_ze6hx1r.y = H_ugehwx1;
		vec4 select5 = H_5cg22m1 ? H_ze6hx1 : H_ze6hx1r;
		colora = select5;
	}
	
	colorb = colora;
	Lg_4 = C_0;
	for ( ; Lg_4 != 42; ++Lg_4) {
		float H_0f3y181 = colorb.z + d3;
		vec4 H_y3sg72 = colorb;
		H_y3sg72.z = H_0f3y181;
		bool H_0rnct = colorb.x < d4;
		float H_heycbr = C_1d0 + colorb.w;
		vec4 H_y3sg72r = colorb;
		H_y3sg72r.zw = vec2(H_0f3y181, H_heycbr);
		vec4 select6 = H_0rnct ? H_y3sg72 : H_y3sg72r;
		colorb = select6;
	}
	
	colorc = colorb;
	Lg_5 = C_0;
	while (Lg_5 <= C_41) {
		float H_hmpflb = colorc.z + d3;
		Lg_6 = colorc;
		Lg_6.z = H_hmpflb;
		bool H_1yyglv = colorc.x < d4;
		if (H_1yyglv) {
			colord = Lg_6;
			break;
		}
		
		float H_ygqqil1 = C_1d0 + colorc.w;
		vec4 H_xxjjwy = Lg_6;
		H_xxjjwy.w = H_ygqqil1;
		int H_cn5n1i1 = Lg_5 + C_1;
		colorc = H_xxjjwy;
		Lg_5 = H_cn5n1i1;
	}
	
	colord = colorc;
	colore = colord;
	while (true) {
		vec4 colorc1 = bigColor4 + colore;
		bool H_ijdwnl1 = colorc1.x < d4;
		if (H_ijdwnl1) {
			colorf = colorc1;
		} else {
			bool H_jno8xq1 = colorc1.y < d4;
			float H_wyxtie1 = colorc1.y + d4;
			vec4 H_cd5hos1 = colorc1;
			H_cd5hos1.y = H_wyxtie1;
			float H_dttg1m1 = colorc1.x + d4;
			vec4 H_cd5hos1r = colorc1;
			H_cd5hos1r.x = H_dttg1m1;
			select7 = H_jno8xq1 ? H_cd5hos1 : H_cd5hos1r;
			bool H_l1em9x = select7.z >= d4;
			if (H_l1em9x) {
				break;
			}
			
			colorf = select7;
		}
		
		colore = colorf;
	}
	
	colorg = select7;
	while (true) {
		vec4 colord1 = bigColor5 + colorg;
		bool H_pkmp2t1 = colord1.y < d5;
		float H_mov74t1 = colord1.y + d5;
		vec4 H_3f4hwu1 = colord1;
		H_3f4hwu1.y = H_mov74t1;
		select8 = H_pkmp2t1 ? H_3f4hwu1 : colord1;
		bool H_1bgbo9 = select8.x >= d5;
		if (H_1bgbo9) {
			break;
		}
		
		colorg = select8;
	}
	
	bool H_tg986f = select8.x < d6;
	if (H_tg986f) {
		colorh = select8;
		while (colorh.y < d6) {
			vec4 colore1 = bigColor6 + colorh;
			colorh = colore1;
		}
		
		colorj = colorh;
	} else {
		colori = select8;
		while (colori.z < d6) {
			float H_bkty18 = bigColor6.z + colori.z;
			vec4 H_bueoqy1 = colori;
			H_bueoqy1.z = H_bkty18;
			colori = H_bueoqy1;
		}
		
		colorj = colori;
	}
	
	bool H_ezf0u7 = colorj.x < d6;
	if (H_ezf0u7) {
		bool H_lmykhx1 = d7 < C_1d0;
		colork = colorj;
		while (colork.y < d6) {
			colorf1 = bigColor6 + colork;
			if (H_lmykhx1) {
				colorl = colorf1;
				break;
			}
			
			colork = colorf1;
		}
		
		colorl = colork;
		colorn = colorl;
	} else {
		colorm = colorj;
		while (colorm.z < d6) {
			float H_zd2cjv = bigColor6.z + colorm.z;
			vec4 H_3nrit = colorm;
			H_3nrit.z = H_zd2cjv;
			colorm = H_3nrit;
		}
		
		colorn = colorm;
	}
	
	bool H_2ecxn2 = d7 < C_0d0;
	bool H_lmykhx1r = d7 < C_1d0;
	coloro = colorn;
	while (true) {
		if (H_2ecxn2) {
			colorp = coloro;
			break;
		}
		
		colorg1 = bigColor7 + coloro;
		if (H_lmykhx1r) {
			float H_k5f2xg = C_1d0 + colorg1.z;
			vec4 H_wta1uz = colorg1;
			H_wta1uz.z = H_k5f2xg;
			colorp = H_wta1uz;
			break;
		}
		
		vec4 colorh1 = BaseColor + colorg1;
		coloro = colorh1;
	}
	
	bool H_zt4vz81 = d8 < C_0d0;
	bool H_cokhy9 = d8 < C_1d0;
	colorq = colorp;
	while (true) {
		if (H_zt4vz81) {
			colorr = colorq;
			break;
		}
		
		colori1 = bigColor7 + colorq;
		if (H_cokhy9) {
			float H_qktfc21 = C_1d0 + colori1.z;
			bool H_hrxnuy1 = d8 < C_2d0;
			float H_rv7g221 = C_1d0 + colori1.y;
			vec4 H_arow8u = colori1;
			H_arow8u.yz = vec2(H_rv7g221, H_qktfc21);
			float H_s6mgs11 = C_1d0 + colori1.x;
			vec4 H_arow8ur = colori1;
			H_arow8ur.xz = vec2(H_s6mgs11, H_qktfc21);
			vec4 select9 = H_hrxnuy1 ? H_arow8u : H_arow8ur;
			colorr = select9;
			break;
		}
		
		colorj1 = BaseColor + colori1;
		bool H_2tsvnv = colorj1.z >= d8;
		if (H_2tsvnv) {
			colorr = colorj1;
			break;
		}
		
		colorq = colorj1;
	}
	
	bool H_45lodh = d9 > d8;
	colors = colorr;
	while (colors.w < d9) {
		coloru = colors;
		if (H_45lodh) {
			bool H_mij56g1 = colors.x > d7;
			colort = colors;
			if (! H_mij56g1) {
				bool H_0nkq1l1 = colors.z == C_5d0;
				if (! H_0nkq1l1) {
					break;
				}
				
				float H_ysq1f = C_1d0 + colors.w;
				vec4 H_hosq2x1 = colors;
				H_hosq2x1.w = H_ysq1f;
				colort = H_hosq2x1;
			}
			
			coloru = colort;
		}
		
		colors = coloru;
	}
	
	colorv = colors;
	while (colorv.z < d10) {
		float H_fdtvsq1 = C_1d0 + colorv.y;
		Lg_8 = colorv;
		Lg_8.y = H_fdtvsq1;
		bool H_d1wl9y = H_fdtvsq1 < d11;
		if (! H_d1wl9y) {
			vec4 colork1 = C_vec4p1d0p + Lg_8;
			colorw = colork1;
			break;
		}
		
		float H_e2fv2r1 = C_1d0 + colorv.z;
		bool H_yfilct1 = colorv.w < d12;
		float H_139qou1 = C_1d0 + colorv.w;
		vec4 H_vbrigz = Lg_8;
		H_vbrigz.zw = vec2(H_e2fv2r1, H_139qou1);
		float H_go7wiq1 = C_1d0 + colorv.x;
		vec4 H_vbrigzr = Lg_8;
		H_vbrigzr.xz = vec2(H_go7wiq1, H_e2fv2r1);
		vec4 selecta = H_yfilct1 ? H_vbrigz : H_vbrigzr;
		colorv = selecta;
	}
	
	colorw = colorv;
	colorx = colorw;
	while (colorx.x < C_10d0) {
		vec4 colorl1 = bigColor8 + colorx;
		bool H_psvrzf1 = colorl1.z < d8;
		bool H_6uqm261 = colorl1.w < d6;
		float H_62h82p = bigColor8.x + colorl1.y;
		vec4 H_zx9fa = colorl1;
		H_zx9fa.y = H_62h82p;
		vec4 selectb = H_6uqm261 ? colorl1 : H_zx9fa;
		vec4 selectc = H_psvrzf1 ? selectb : H_zx9fa;
		colorx = selectc;
	}
	
	vec4 colorm1 = C_vec4p1d0p + colorx;
	gl_FragColor = colorm1;
	colory = colorm1;
	while (colory.x < d14) {
		bool H_8va7wx1 = colory.y < d15;
		if (H_8va7wx1) {
			return;
		}
		
		vec4 colorn1 = C_vec4p1d0p + colory;
		colory = colorn1;
	}
	
	vec4 coloro1 = C_vec4p1d0p + colory;
	colorz = coloro1;
	while (colorz.w < d16) {
		float H_5vyu83 = C_1d0 + colorz.w;
		vec4 H_qfduku1 = colorz;
		H_qfduku1.w = H_5vyu83;
		colorz = H_qfduku1;
	}
	
	color01 = colorz;
	while (true) {
		bool notlhs1 = color01.w >= d2;
		bool notrhs1 = color01.y >= d3;
		bool H_9acxdp1 = notrhs1 || notlhs1;
		if (H_9acxdp1) {
			color11 = color01;
			while (color11.y >= d18) {
				colorp1 = C_vec4p1d0p + color11;
				bool H_ad9kt51 = colorp1.x >= d17;
				if (H_ad9kt51) {
					color21 = colorp1;
					while (color21.y < d16) {
						bool H_1r3e221 = color21.w < d16;
						if (H_1r3e221) {
							discard;
						}
						
						vec4 colorq1 = C_vec4p1d0p + color21;
						color21 = colorq1;
					}
					
					vec4 colorr1 = C_vec4p1d0p + color21;
					gl_FragColor = colorr1;
					return;
				}
				
				color11 = colorp1;
			}
			
			return;
		}
		
		vec4 colors1 = bigColor1_2 + color01;
		bool H_l3tys91 = colors1.z < d3;
		if (H_l3tys91) {
			return;
		}
		
		color01 = colors1;
	}
	
}

whileLoop.frag
#version 110
// LunarGOO output
uniform float d;
uniform vec4 bigColor;
varying vec4 BaseColor;

void main()
{
	vec4 color;
	color = BaseColor;
	while (color.x < d) {
		vec4 color1 = bigColor + color;
		color = color1;
	}
	
	gl_FragColor = color;
	
}

