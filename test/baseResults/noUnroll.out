doWhileLoop.frag
#version 110
// LunarGOO output
uniform vec4 bigColor;
uniform float d;
varying vec4 BaseColor;
vec4 color_c2;

void main()
{
	vec4 color_uc1;
	color_uc1 = BaseColor;
	while (true) {
		color_c2 = bigColor + color_uc1;
		bool H_37dgs11 = color_c2.x >= d;
		if (H_37dgs11) {
			break;
		}
		
		color_uc1 = color_c2;
	}
	
	gl_FragColor = color_c2;
	
}

forLoop.frag
#version 130
// LunarGOO output
uniform int Count;
uniform vec4 bigColor;
uniform uvec4 v4;
in vec4 BaseColor;
in float f;
vec4 gla_globalAgg;
const int C_0 = 0;
const float C_0d0 = 0.0;
vec4 Lg_7;
const int C_2 = 2;
vec3 Lg_8;
const int C_1 = 1;

void main()
{
	vec4 Lg_1;
	int i_uc1;
	float sum_uc2;
	int Lg_2;
	int Lg_3;
	vec4 tv_c3;
	vec4 r_uc4;
	int Lg_4;
	vec4 Lg_5;
	int Lg_6;
	Lg_1 = BaseColor;
	i_uc1 = C_0;
	for (i_uc1 = 0; i_uc1 < Count; ++i_uc1) {
		vec4 color_c5 = Lg_1 + bigColor;
		Lg_1 = color_c5;
	}
	
	gl_FragColor = Lg_1;
	sum_uc2 = C_0d0;
	Lg_2 = C_0;
	for ( ; Lg_2 != 4; ++Lg_2) {
		Lg_7 = vec4(sum_uc2);
		float H_gmopng = float(ivec4(v4)[Lg_2]);
		float sum_c6 = H_gmopng + sum_uc2;
		sum_uc2 = sum_c6;
	}
	
	Lg_3 = C_0;
	tv_c3 = gla_globalAgg;
	for ( ; Lg_3 != 4; ++Lg_3) {
		int H_exkixg1 = ivec4(v4)[Lg_3] << C_2;
		float H_clpxp61 = float(H_exkixg1);
		vec4 tv_c7 = tv_c3;
		tv_c7[Lg_3] = H_clpxp61;
		tv_c3 = tv_c7;
	}
	
	vec4 H_ivdevd1 = Lg_7 + tv_c3;
	vec4 Ll_FragColor_c8 = H_ivdevd1 + Lg_1;
	gl_FragColor = Ll_FragColor_c8;
	vec4 H_wlwz58 = vec4(f);
	r_uc4 = BaseColor;
	Lg_4 = C_0;
	while (true) {
		bool H_wox96k = Lg_4 < Count;
		if (! H_wox96k) {
			break;
		}
		
		vec4 H_qbs9rg1 = r_uc4;
		H_qbs9rg1.w = f;
		int H_zk97sd1 = Lg_4 + C_1;
		r_uc4 = H_qbs9rg1;
		Lg_4 = H_zk97sd1;
	}
	
	vec3 H_9w0ojg1 = Ll_FragColor_c8.xyz + r_uc4.xyz;
	vec4 H_dnjqul1 = Ll_FragColor_c8;
	H_dnjqul1.xyz = H_9w0ojg1.xyz;
	gl_FragColor = H_dnjqul1;
	Lg_5 = H_dnjqul1;
	Lg_6 = C_0;
	for ( ; Lg_6 <= 15; Lg_6 += 4) {
		vec4 Ll_FragColor_c9 = H_wlwz58 * Lg_5;
		gl_FragColor = Ll_FragColor_c9;
		Lg_5 = Ll_FragColor_c9;
	}
	
	
}

loops.frag
#version 130
// LunarGOO output
uniform float d;
uniform vec4 bigColor;
uniform vec4 bigColor1_1;
uniform float d2;
uniform float d3;
uniform vec4 bigColor1_2;
uniform vec4 bigColor1_3;
uniform float d4;
uniform int Count;
uniform vec4 bigColor2;
uniform vec4 bigColor3;
uniform vec4 bigColor4;
uniform vec4 bigColor5;
uniform float d5;
uniform float d6;
uniform vec4 bigColor6;
uniform float d7;
uniform vec4 bigColor7;
uniform float d8;
uniform float d9;
uniform float d10;
uniform float d11;
uniform float d12;
uniform vec4 bigColor8;
uniform float d14;
uniform float d15;
uniform float d16;
uniform float d18;
uniform float d17;
uniform float d13;
uniform float d19;
uniform float d20;
uniform float d21;
uniform float d22;
uniform float d23;
uniform float d24;
uniform float d25;
uniform float d26;
uniform float d27;
uniform float d28;
uniform float d29;
uniform float d30;
uniform float d31;
uniform float d32;
uniform float d33;
uniform float d34;
in vec4 BaseColor;
const float C_0d33 = 0.33;
const float C_0d66 = 0.66;
const vec4 C_vec4p0d66p = vec4(0.66);
const vec4 C_vec4p0d33p = vec4(0.33);
const float C_42d0 = 42.0;
const vec4 C_vec4p1d0p = vec4(1.0);
vec4 color_c52;
const int C_0 = 0;
vec4 color_c55;
const float C_20d0 = 20.0;
const float C_1d0 = 1.0;
const int C_41 = 41;
vec4 Lg_6;
const int C_1 = 1;
vec4 select_c60;
vec4 select_c62;
float Lg_7;
vec4 color_c64;
const float C_0d0 = 0.0;
vec4 color_c65;
vec4 color_c67;
const float C_2d0 = 2.0;
vec4 color_c69;
const float C_5d0 = 5.0;
vec4 Lg_8;
const float C_10d0 = 10.0;
vec4 color_c80;

void main()
{
	vec4 color_uc1;
	vec4 color_uc2;
	vec4 color_uc3;
	vec4 color_uc4;
	vec4 color_uc5;
	vec4 color_uc6;
	vec4 color_uc7;
	int i_uc8;
	vec4 color_uc9;
	vec4 color_uc10;
	int Lg_1;
	vec4 color_uc11;
	int Lg_2;
	vec4 color_uc12;
	int Lg_3;
	vec4 color_uc13;
	int Lg_4;
	vec4 color_uc14;
	int Lg_5;
	vec4 color_uc15;
	vec4 color_uc16;
	vec4 color_uc17;
	vec4 color_uc18;
	vec4 color_uc19;
	vec4 color_uc20;
	vec4 color_uc21;
	vec4 color_uc22;
	vec4 color_uc23;
	vec4 color_uc24;
	vec4 color_uc25;
	vec4 color_uc26;
	vec4 color_uc27;
	vec4 color_uc28;
	vec4 color_uc29;
	vec4 color_uc30;
	vec4 color_uc31;
	vec4 color_uc32;
	vec4 color_uc33;
	vec4 color_uc34;
	vec4 color_uc35;
	vec4 color_uc36;
	vec4 color_uc37;
	vec4 color_uc38;
	vec4 color_uc39;
	vec4 color_uc40;
	bool H_bghf2q1 = BaseColor.x < C_0d33;
	bool H_9j9phn = BaseColor.x < C_0d66;
	vec4 select_c41 = H_9j9phn ? C_vec4p0d66p : C_vec4p0d33p;
	vec4 select_c42 = H_bghf2q1 ? C_vec4p0d33p : select_c41;
	vec4 select_c43 = BaseColor + select_c42;
	color_uc1 = select_c43;
	while (color_uc1.x < d) {
		vec4 color_c44 = bigColor + color_uc1;
		color_uc1 = color_c44;
	}
	
	color_uc2 = color_uc1;
	while (color_uc2.z < d) {
		vec4 color_c45 = bigColor1_1 + color_uc2;
		bool H_6pj6k71 = color_c45.w < d;
		vec4 color_c46 = bigColor1_1 + color_c45;
		vec4 select_c47 = H_6pj6k71 ? color_c45 : color_c46;
		color_uc2 = select_c47;
	}
	
	color_uc3 = color_uc2;
	while (color_uc3.x < C_42d0) {
		vec4 color_c48 = color_uc3 + C_vec4p1d0p;
		color_uc3 = color_c48;
	}
	
	color_uc4 = color_uc3;
	while (true) {
		bool notlhs_c49 = color_uc4.w >= d2;
		bool notrhs_c50 = color_uc4.y >= d3;
		bool H_ly63lh1 = notrhs_c50 || notlhs_c49;
		if (H_ly63lh1) {
			break;
		}
		
		vec4 color_c51 = bigColor1_2 + color_uc4;
		color_uc4 = color_c51;
	}
	
	color_uc5 = color_uc4;
	while (color_uc5.z < d3) {
		color_c52 = bigColor1_3 + color_uc5;
		bool H_0nm7s9 = color_c52.y < d4;
		if (H_0nm7s9) {
			color_uc6 = color_c52;
			break;
		}
		
		vec4 color_c53 = bigColor1_3 + color_c52;
		color_uc5 = color_c53;
	}
	
	color_uc6 = color_uc5;
	color_uc7 = color_uc6;
	i_uc8 = C_0;
	for (i_uc8 = 0; i_uc8 < Count; ++i_uc8) {
		vec4 color_c54 = bigColor2 + color_uc7;
		color_uc7 = color_c54;
	}
	
	color_uc9 = color_uc7;
	while (true) {
		color_c55 = bigColor3 + color_uc9;
		bool H_j51g95 = color_c55.x >= d2;
		if (H_j51g95) {
			break;
		}
		
		color_uc9 = color_c55;
	}
	
	color_uc10 = color_c55;
	Lg_1 = C_0;
	for ( ; Lg_1 != 42; ++Lg_1) {
		float H_acyhhp1 = color_uc10.z + d3;
		vec4 H_gad7u3 = color_uc10;
		H_gad7u3.z = H_acyhhp1;
		color_uc10 = H_gad7u3;
	}
	
	color_uc11 = color_uc10;
	Lg_2 = C_0;
	for ( ; Lg_2 != 100; ++Lg_2) {
		bool H_9rohuj1 = color_uc11.z < C_20d0;
		float H_tpyr49 = color_uc11.x + C_1d0;
		vec4 H_fzy644 = color_uc11;
		H_fzy644.x = H_tpyr49;
		float H_ewbwh51 = C_1d0 + color_uc11.y;
		vec4 H_fzy644r = color_uc11;
		H_fzy644r.y = H_ewbwh51;
		vec4 select_c56 = H_9rohuj1 ? H_fzy644 : H_fzy644r;
		color_uc11 = select_c56;
	}
	
	color_uc12 = color_uc11;
	Lg_3 = C_0;
	for ( ; Lg_3 != 120; ++Lg_3) {
		bool H_ixwh5x = color_uc12.z < C_20d0;
		float H_s2boe1 = C_1d0 + color_uc12.x;
		vec4 H_eok6e4 = color_uc12;
		H_eok6e4.x = H_s2boe1;
		float H_rrwno1 = C_1d0 + color_uc12.y;
		vec4 H_eok6e4r = color_uc12;
		H_eok6e4r.y = H_rrwno1;
		vec4 select_c57 = H_ixwh5x ? H_eok6e4 : H_eok6e4r;
		color_uc12 = select_c57;
	}
	
	color_uc13 = color_uc12;
	Lg_4 = C_0;
	for ( ; Lg_4 != 42; ++Lg_4) {
		float H_9gp8pd1 = color_uc13.z + d3;
		vec4 H_dd66o4 = color_uc13;
		H_dd66o4.z = H_9gp8pd1;
		bool H_l15dou = color_uc13.x < d4;
		float H_aiv74t = C_1d0 + color_uc13.w;
		vec4 H_dd66o4r = color_uc13;
		H_dd66o4r.zw = vec2(H_9gp8pd1, H_aiv74t);
		vec4 select_c58 = H_l15dou ? H_dd66o4 : H_dd66o4r;
		color_uc13 = select_c58;
	}
	
	color_uc14 = color_uc13;
	Lg_5 = C_0;
	while (Lg_5 <= C_41) {
		float H_a51bnn1 = color_uc14.z + d3;
		Lg_6 = color_uc14;
		Lg_6.z = H_a51bnn1;
		bool H_iio4aq = color_uc14.x < d4;
		if (H_iio4aq) {
			color_uc15 = Lg_6;
			break;
		}
		
		float H_j14n5z = C_1d0 + color_uc14.w;
		vec4 H_xxjjwy = Lg_6;
		H_xxjjwy.w = H_j14n5z;
		int H_cn5n1i1 = Lg_5 + C_1;
		color_uc14 = H_xxjjwy;
		Lg_5 = H_cn5n1i1;
	}
	
	color_uc15 = color_uc14;
	color_uc16 = color_uc15;
	while (true) {
		vec4 color_c59 = bigColor4 + color_uc16;
		bool H_ya1up11 = color_c59.x < d4;
		if (H_ya1up11) {
			color_uc17 = color_c59;
		} else {
			bool H_zim0a51 = color_c59.y < d4;
			float H_0n0x9n1 = color_c59.y + d4;
			vec4 H_40tys9 = color_c59;
			H_40tys9.y = H_0n0x9n1;
			float H_lo06l11 = color_c59.x + d4;
			vec4 H_40tys9r = color_c59;
			H_40tys9r.x = H_lo06l11;
			select_c60 = H_zim0a51 ? H_40tys9 : H_40tys9r;
			bool H_i779rp1 = select_c60.z >= d4;
			if (H_i779rp1) {
				break;
			}
			
			color_uc17 = select_c60;
		}
		
		color_uc16 = color_uc17;
	}
	
	color_uc18 = select_c60;
	while (true) {
		vec4 color_c61 = bigColor5 + color_uc18;
		bool H_1cwc4a1 = color_c61.y < d5;
		float H_irfdiq1 = color_c61.y + d5;
		vec4 H_n835jb1 = color_c61;
		H_n835jb1.y = H_irfdiq1;
		select_c62 = H_1cwc4a1 ? H_n835jb1 : color_c61;
		bool H_1gipqo1 = select_c62.x >= d5;
		if (H_1gipqo1) {
			break;
		}
		
		color_uc18 = select_c62;
	}
	
	bool H_p6brdh = select_c62.x < d6;
	if (H_p6brdh) {
		color_uc19 = select_c62;
		while (color_uc19.y < d6) {
			vec4 color_c63 = bigColor6 + color_uc19;
			color_uc19 = color_c63;
		}
		
		color_uc21 = color_uc19;
	} else {
		color_uc20 = select_c62;
		while (color_uc20.z < d6) {
			float H_3mkeso1 = bigColor6.z + color_uc20.z;
			vec4 H_7vi7hz = color_uc20;
			H_7vi7hz.z = H_3mkeso1;
			color_uc20 = H_7vi7hz;
		}
		
		color_uc21 = color_uc20;
	}
	
	bool H_8s3gct1 = color_uc21.x < d6;
	if (H_8s3gct1) {
		bool H_lmykhx1 = d7 < C_1d0;
		color_uc22 = color_uc21;
		while (color_uc22.y < d6) {
			color_c64 = bigColor6 + color_uc22;
			if (H_lmykhx1) {
				color_uc23 = color_c64;
				break;
			}
			
			color_uc22 = color_c64;
		}
		
		color_uc23 = color_uc22;
		color_uc25 = color_uc23;
	} else {
		color_uc24 = color_uc21;
		while (color_uc24.z < d6) {
			float H_ngrn8d = bigColor6.z + color_uc24.z;
			vec4 H_3nx5l01 = color_uc24;
			H_3nx5l01.z = H_ngrn8d;
			color_uc24 = H_3nx5l01;
		}
		
		color_uc25 = color_uc24;
	}
	
	bool H_2ecxn2 = d7 < C_0d0;
	bool H_lmykhx1r = d7 < C_1d0;
	color_uc26 = color_uc25;
	while (true) {
		if (H_2ecxn2) {
			color_uc27 = color_uc26;
			break;
		}
		
		color_c65 = bigColor7 + color_uc26;
		if (H_lmykhx1r) {
			float H_n1nsj5 = C_1d0 + color_c65.z;
			vec4 H_rgo6fa1 = color_c65;
			H_rgo6fa1.z = H_n1nsj5;
			color_uc27 = H_rgo6fa1;
			break;
		}
		
		vec4 color_c66 = BaseColor + color_c65;
		color_uc26 = color_c66;
	}
	
	bool H_zt4vz81 = d8 < C_0d0;
	bool H_cokhy9 = d8 < C_1d0;
	color_uc28 = color_uc27;
	while (true) {
		if (H_zt4vz81) {
			color_uc29 = color_uc28;
			break;
		}
		
		color_c67 = bigColor7 + color_uc28;
		if (H_cokhy9) {
			float H_hsu5vt1 = C_1d0 + color_c67.z;
			bool H_hrxnuy1 = d8 < C_2d0;
			float H_kp171t1 = C_1d0 + color_c67.y;
			vec4 H_puv5za1 = color_c67;
			H_puv5za1.yz = vec2(H_kp171t1, H_hsu5vt1);
			float H_jen6bt1 = C_1d0 + color_c67.x;
			vec4 H_puv5za1r = color_c67;
			H_puv5za1r.xz = vec2(H_jen6bt1, H_hsu5vt1);
			vec4 select_c68 = H_hrxnuy1 ? H_puv5za1 : H_puv5za1r;
			color_uc29 = select_c68;
			break;
		}
		
		color_c69 = BaseColor + color_c67;
		bool H_k2ceax1 = color_c69.z >= d8;
		if (H_k2ceax1) {
			color_uc29 = color_c69;
			break;
		}
		
		color_uc28 = color_c69;
	}
	
	bool H_45lodh = d9 > d8;
	color_uc30 = color_uc29;
	while (color_uc30.w < d9) {
		color_uc32 = color_uc30;
		if (H_45lodh) {
			bool H_bfcxvk1 = color_uc30.x > d7;
			color_uc31 = color_uc30;
			if (! H_bfcxvk1) {
				bool H_duijaq = color_uc30.z == C_5d0;
				if (! H_duijaq) {
					break;
				}
				
				float H_hlnfwl1 = C_1d0 + color_uc30.w;
				vec4 H_ie1uo61 = color_uc30;
				H_ie1uo61.w = H_hlnfwl1;
				color_uc31 = H_ie1uo61;
			}
			
			color_uc32 = color_uc31;
		}
		
		color_uc30 = color_uc32;
	}
	
	color_uc33 = color_uc30;
	while (color_uc33.z < d10) {
		float H_au83fv = C_1d0 + color_uc33.y;
		Lg_8 = color_uc33;
		Lg_8.y = H_au83fv;
		bool H_pqn74c1 = H_au83fv < d11;
		if (! H_pqn74c1) {
			vec4 color_c70 = C_vec4p1d0p + Lg_8;
			color_uc34 = color_c70;
			break;
		}
		
		float H_b5n35v = C_1d0 + color_uc33.z;
		bool H_rli1aa = color_uc33.w < d12;
		float H_88g2zv = C_1d0 + color_uc33.w;
		vec4 H_vbrigz = Lg_8;
		H_vbrigz.zw = vec2(H_b5n35v, H_88g2zv);
		float H_9ju2pv = C_1d0 + color_uc33.x;
		vec4 H_vbrigzr = Lg_8;
		H_vbrigzr.xz = vec2(H_9ju2pv, H_b5n35v);
		vec4 select_c71 = H_rli1aa ? H_vbrigz : H_vbrigzr;
		color_uc33 = select_c71;
	}
	
	color_uc34 = color_uc33;
	color_uc35 = color_uc34;
	while (color_uc35.x < C_10d0) {
		vec4 color_c72 = bigColor8 + color_uc35;
		bool H_9s6tqn = color_c72.z < d8;
		bool H_2n8gj41 = color_c72.w < d6;
		float H_yrhk0f1 = bigColor8.x + color_c72.y;
		vec4 H_jt17dc1 = color_c72;
		H_jt17dc1.y = H_yrhk0f1;
		vec4 select_c73 = H_2n8gj41 ? color_c72 : H_jt17dc1;
		vec4 select_c74 = H_9s6tqn ? select_c73 : H_jt17dc1;
		color_uc35 = select_c74;
	}
	
	vec4 color_c75 = C_vec4p1d0p + color_uc35;
	gl_FragColor = color_c75;
	color_uc36 = color_c75;
	while (color_uc36.x < d14) {
		bool H_vepnap1 = color_uc36.y < d15;
		if (H_vepnap1) {
			return;
		}
		
		vec4 color_c76 = C_vec4p1d0p + color_uc36;
		color_uc36 = color_c76;
	}
	
	vec4 color_c77 = C_vec4p1d0p + color_uc36;
	color_uc37 = color_c77;
	while (color_uc37.w < d16) {
		float H_cyuxya = C_1d0 + color_uc37.w;
		vec4 H_nx0wa51 = color_uc37;
		H_nx0wa51.w = H_cyuxya;
		color_uc37 = H_nx0wa51;
	}
	
	color_uc38 = color_uc37;
	while (true) {
		bool notlhs_c78 = color_uc38.w >= d2;
		bool notrhs_c79 = color_uc38.y >= d3;
		bool H_sd6zau1 = notrhs_c79 || notlhs_c78;
		if (H_sd6zau1) {
			color_uc39 = color_uc38;
			while (color_uc39.y >= d18) {
				color_c80 = C_vec4p1d0p + color_uc39;
				bool H_dnl9pn = color_c80.x >= d17;
				if (H_dnl9pn) {
					color_uc40 = color_c80;
					while (color_uc40.y < d16) {
						bool H_xdu5hw1 = color_uc40.w < d16;
						if (H_xdu5hw1) {
							discard;
						}
						
						vec4 color_c81 = C_vec4p1d0p + color_uc40;
						color_uc40 = color_c81;
					}
					
					vec4 color_c82 = C_vec4p1d0p + color_uc40;
					gl_FragColor = color_c82;
					return;
				}
				
				color_uc39 = color_c80;
			}
			
			return;
		}
		
		vec4 color_c83 = bigColor1_2 + color_uc38;
		bool H_wqxubj1 = color_c83.z < d3;
		if (H_wqxubj1) {
			return;
		}
		
		color_uc38 = color_c83;
	}
	
}

whileLoop.frag
#version 110
// LunarGOO output
uniform float d;
uniform vec4 bigColor;
varying vec4 BaseColor;

void main()
{
	vec4 color_uc1;
	color_uc1 = BaseColor;
	while (color_uc1.x < d) {
		vec4 color_c2 = bigColor + color_uc1;
		color_uc1 = color_c2;
	}
	
	gl_FragColor = color_uc1;
	
}

