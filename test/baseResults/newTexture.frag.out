
Top IR:
; ModuleID = 'Top'

@s2D = external addrspace(1) constant i32
@c2D_shadow = internal global <2 x float> zeroinitializer
@s3D = external addrspace(1) constant i32
@c4D_shadow = internal global <4 x float> zeroinitializer
@s2DArray = external addrspace(1) constant i32
@c3D_shadow = internal global <3 x float> zeroinitializer
@s2DShadow = external addrspace(1) constant i32
@c1D_shadow = internal global float 0.000000e+00
@ic3D_shadow = internal global <3 x i32> zeroinitializer
@ic1D_shadow = internal global i32 0
@ic2D_shadow = internal global <2 x i32> zeroinitializer
@sCube = external addrspace(1) constant i32
@s2DArrayShadow = external addrspace(1) constant i32
@is2D = external addrspace(1) constant i32
@is3D = external addrspace(1) constant i32
@isCube = external addrspace(1) constant i32
@is2DArray = external addrspace(1) constant i32
@sCubeShadow = external addrspace(1) constant i32
@FragData_shadow = internal global <4 x float> zeroinitializer
@is2Dms = external addrspace(1) constant i32
@us2D = external addrspace(1) constant i32
@us3D = external addrspace(1) constant i32
@usCube = external addrspace(1) constant i32
@us2DArray = external addrspace(1) constant i32
@ic4D_shadow = internal global <4 x i32> zeroinitializer

define fastcc void @main() {
entry:
  %constructed = alloca <4 x float>
  %iv2 = alloca <2 x i32>
  %iv = alloca <4 x i32>
  %v = alloca <4 x float>
  %0 = load i32 addrspace(1)* @s2D, !gla.uniform !1
  %c2D = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  store <2 x float> %c2D, <2 x float>* @c2D_shadow
  %1 = load <2 x float>* @c2D_shadow
  %v1 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %1)
  store <4 x float> %v1, <4 x float>* %v
  %2 = load i32 addrspace(1)* @s3D, !gla.uniform !4
  %c4D = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !51
  store <4 x float> %c4D, <4 x float>* @c4D_shadow
  %3 = load <4 x float>* @c4D_shadow
  %4 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %2, i32 1, <4 x float> %3)
  %5 = load <4 x float>* %v
  %v2 = fadd <4 x float> %5, %4
  store <4 x float> %v2, <4 x float>* %v
  %6 = load i32 addrspace(1)* @s2DArray, !gla.uniform !7
  %c3D = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D, <3 x float>* @c3D_shadow
  %7 = load <3 x float>* @c3D_shadow
  %8 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %6, i32 148, <3 x float> %7, float 0x3FF3333340000000, float undef)
  %9 = load <4 x float>* %v
  %v3 = fadd <4 x float> %9, %8
  store <4 x float> %v3, <4 x float>* %v
  %10 = load i32 addrspace(1)* @s2DShadow, !gla.uniform !10
  %c3D4 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D4, <3 x float>* @c3D_shadow
  %11 = load <3 x float>* @c3D_shadow
  %c1D = call float @llvm.gla.fReadInterpolant.f32(i32 1027, i32 -1, i32 1), !gla.input !55
  store float %c1D, float* @c1D_shadow
  %12 = load float* @c1D_shadow
  %13 = call float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32 2, i32 %10, i32 394, <3 x float> %11, float %12, float undef, <2 x i32> <i32 3, i32 3>)
  %14 = load <4 x float>* %v
  %15 = extractelement <4 x float> %14, i32 1
  %16 = fadd float %15, %13
  %17 = load <4 x float>* %v
  %v5 = insertelement <4 x float> %17, float %16, i32 1
  store <4 x float> %v5, <4 x float>* %v
  %18 = load i32 addrspace(1)* @s3D, !gla.uniform !4
  %ic3D = call <3 x i32> @llvm.gla.readData.v3i32(i32 1028, i32 -1), !gla.input !57
  store <3 x i32> %ic3D, <3 x i32>* @ic3D_shadow
  %19 = load <3 x i32>* @ic3D_shadow
  %ic1D = call i32 @llvm.gla.readData.i32(i32 1029, i32 -1), !gla.input !59
  store i32 %ic1D, i32* @ic1D_shadow
  %20 = load i32* @ic1D_shadow
  %21 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32 3, i32 %18, i32 162, <3 x i32> %19, i32 %20, float undef, i32 undef)
  %22 = load <4 x float>* %v
  %v6 = fadd <4 x float> %22, %21
  store <4 x float> %v6, <4 x float>* %v
  %23 = load i32 addrspace(1)* @s2D, !gla.uniform !1
  %ic2D = call <2 x i32> @llvm.gla.readData.v2i32(i32 1030, i32 -1), !gla.input !61
  store <2 x i32> %ic2D, <2 x i32>* @ic2D_shadow
  %24 = load <2 x i32>* @ic2D_shadow
  %ic2D7 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1030, i32 -1), !gla.input !61
  store <2 x i32> %ic2D7, <2 x i32>* @ic2D_shadow
  %25 = load <2 x i32>* @ic2D_shadow
  %26 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.v2i32.i32(i32 2, i32 %23, i32 418, <2 x i32> %24, <2 x i32> %25, float undef, i32 4)
  %27 = load <4 x float>* %v
  %v8 = fadd <4 x float> %27, %26
  store <4 x float> %v8, <4 x float>* %v
  %28 = load i32 addrspace(1)* @s2DShadow, !gla.uniform !10
  %c3D9 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D9, <3 x float>* @c3D_shadow
  %29 = load <3 x float>* @c3D_shadow
  %c1D10 = call float @llvm.gla.fReadInterpolant.f32(i32 1027, i32 -1, i32 1), !gla.input !55
  store float %c1D10, float* @c1D_shadow
  %30 = load float* @c1D_shadow
  %31 = call float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32 2, i32 %28, i32 396, <3 x float> %29, float %30, float undef, <2 x i32> <i32 3, i32 3>)
  %32 = load <4 x float>* %v
  %33 = extractelement <4 x float> %32, i32 1
  %34 = fadd float %33, %31
  %35 = load <4 x float>* %v
  %v11 = insertelement <4 x float> %35, float %34, i32 1
  store <4 x float> %v11, <4 x float>* %v
  %36 = load i32 addrspace(1)* @s2D, !gla.uniform !1
  %c3D12 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D12, <3 x float>* @c3D_shadow
  %37 = load <3 x float>* @c3D_shadow
  %c1D13 = call float @llvm.gla.fReadInterpolant.f32(i32 1027, i32 -1, i32 1), !gla.input !55
  store float %c1D13, float* @c1D_shadow
  %38 = load float* @c1D_shadow
  %39 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffset.v4f32.v3f32.v2i32(i32 2, i32 %36, i32 389, <3 x float> %37, float %38, float undef, <2 x i32> <i32 3, i32 3>)
  %40 = load <4 x float>* %v
  %v14 = fadd <4 x float> %40, %39
  store <4 x float> %v14, <4 x float>* %v
  %41 = load i32 addrspace(1)* @sCube, !gla.uniform !13
  %c3D15 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D15, <3 x float>* @c3D_shadow
  %42 = load <3 x float>* @c3D_shadow
  %c3D16 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D16, <3 x float>* @c3D_shadow
  %43 = load <3 x float>* @c3D_shadow
  %c3D17 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D17, <3 x float>* @c3D_shadow
  %44 = load <3 x float>* @c3D_shadow
  %45 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v3f32.v3f32(i32 4, i32 %41, i32 0, <3 x float> %42, float undef, float undef, i32 undef, <3 x float> %43, <3 x float> %44)
  %46 = load <4 x float>* %v
  %v18 = fadd <4 x float> %46, %45
  store <4 x float> %v18, <4 x float>* %v
  %47 = load i32 addrspace(1)* @s2DArrayShadow, !gla.uniform !16
  %c4D19 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !51
  store <4 x float> %c4D19, <4 x float>* @c4D_shadow
  %48 = load <4 x float>* @c4D_shadow
  %c2D20 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  store <2 x float> %c2D20, <2 x float>* @c2D_shadow
  %49 = load <2 x float>* @c2D_shadow
  %c2D21 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  store <2 x float> %c2D21, <2 x float>* @c2D_shadow
  %50 = load <2 x float>* @c2D_shadow
  %51 = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32 2, i32 %47, i32 280, <4 x float> %48, float undef, float undef, <2 x i32> <i32 3, i32 3>, <2 x float> %49, <2 x float> %50)
  %52 = load <4 x float>* %v
  %53 = extractelement <4 x float> %52, i32 0
  %54 = fadd float %53, %51
  %55 = load <4 x float>* %v
  %v22 = insertelement <4 x float> %55, float %54, i32 0
  store <4 x float> %v22, <4 x float>* %v
  %56 = load i32 addrspace(1)* @s3D, !gla.uniform !4
  %c4D23 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !51
  store <4 x float> %c4D23, <4 x float>* @c4D_shadow
  %57 = load <4 x float>* @c4D_shadow
  %c3D24 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D24, <3 x float>* @c3D_shadow
  %58 = load <3 x float>* @c3D_shadow
  %c3D25 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D25, <3 x float>* @c3D_shadow
  %59 = load <3 x float>* @c3D_shadow
  %60 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32 3, i32 %56, i32 1, <4 x float> %57, float undef, float undef, i32 undef, <3 x float> %58, <3 x float> %59)
  %61 = load <4 x float>* %v
  %v26 = fadd <4 x float> %61, %60
  store <4 x float> %v26, <4 x float>* %v
  %62 = load i32 addrspace(1)* @s2D, !gla.uniform !1
  %c3D27 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D27, <3 x float>* @c3D_shadow
  %63 = load <3 x float>* @c3D_shadow
  %c2D28 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  store <2 x float> %c2D28, <2 x float>* @c2D_shadow
  %64 = load <2 x float>* @c2D_shadow
  %c2D29 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  store <2 x float> %c2D29, <2 x float>* @c2D_shadow
  %65 = load <2 x float>* @c2D_shadow
  %66 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32 2, i32 %62, i32 257, <3 x float> %63, float undef, float undef, <2 x i32> <i32 3, i32 3>, <2 x float> %64, <2 x float> %65)
  %67 = load <4 x float>* %v
  %v30 = fadd <4 x float> %67, %66
  store <4 x float> %v30, <4 x float>* %v
  %68 = load i32 addrspace(1)* @is2D, !gla.uniform !19
  %c2D31 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  store <2 x float> %c2D31, <2 x float>* @c2D_shadow
  %69 = load <2 x float>* @c2D_shadow
  %iv32 = call <4 x i32> @llvm.gla.textureSample.v4i32.v2f32(i32 2, i32 %68, i32 0, <2 x float> %69)
  store <4 x i32> %iv32, <4 x i32>* %iv
  %70 = load <4 x i32>* %iv
  %71 = sitofp <4 x i32> %70 to <4 x float>
  %72 = load <4 x float>* %v
  %v33 = fadd <4 x float> %72, %71
  store <4 x float> %v33, <4 x float>* %v
  %73 = load i32 addrspace(1)* @is2D, !gla.uniform !19
  %c4D34 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !51
  store <4 x float> %c4D34, <4 x float>* @c4D_shadow
  %74 = load <4 x float>* @c4D_shadow
  %iv35 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffset.v4i32.v4f32.v2i32(i32 2, i32 %73, i32 257, <4 x float> %74, float undef, float undef, <2 x i32> <i32 3, i32 3>)
  store <4 x i32> %iv35, <4 x i32>* %iv
  %75 = load <4 x i32>* %iv
  %76 = sitofp <4 x i32> %75 to <4 x float>
  %77 = load <4 x float>* %v
  %v36 = fadd <4 x float> %77, %76
  store <4 x float> %v36, <4 x float>* %v
  %78 = load i32 addrspace(1)* @is2D, !gla.uniform !19
  %c3D37 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D37, <3 x float>* @c3D_shadow
  %79 = load <3 x float>* @c3D_shadow
  %c1D38 = call float @llvm.gla.fReadInterpolant.f32(i32 1027, i32 -1, i32 1), !gla.input !55
  store float %c1D38, float* @c1D_shadow
  %80 = load float* @c1D_shadow
  %iv39 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 2, i32 %78, i32 133, <3 x float> %79, float %80, float undef)
  store <4 x i32> %iv39, <4 x i32>* %iv
  %81 = load <4 x i32>* %iv
  %82 = sitofp <4 x i32> %81 to <4 x float>
  %83 = load <4 x float>* %v
  %v40 = fadd <4 x float> %83, %82
  store <4 x float> %v40, <4 x float>* %v
  %84 = load i32 addrspace(1)* @is2D, !gla.uniform !19
  %c3D41 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D41, <3 x float>* @c3D_shadow
  %85 = load <3 x float>* @c3D_shadow
  %c2D42 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  store <2 x float> %c2D42, <2 x float>* @c2D_shadow
  %86 = load <2 x float>* @c2D_shadow
  %c2D43 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  store <2 x float> %c2D43, <2 x float>* @c2D_shadow
  %87 = load <2 x float>* @c2D_shadow
  %iv44 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v3f32.i32.v2f32.v2f32(i32 2, i32 %84, i32 1, <3 x float> %85, float undef, float undef, i32 undef, <2 x float> %86, <2 x float> %87)
  store <4 x i32> %iv44, <4 x i32>* %iv
  %88 = load <4 x i32>* %iv
  %89 = sitofp <4 x i32> %88 to <4 x float>
  %90 = load <4 x float>* %v
  %v45 = fadd <4 x float> %90, %89
  store <4 x float> %v45, <4 x float>* %v
  %91 = load i32 addrspace(1)* @is3D, !gla.uniform !22
  %c3D46 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D46, <3 x float>* @c3D_shadow
  %92 = load <3 x float>* @c3D_shadow
  %iv47 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 3, i32 %91, i32 130, <3 x float> %92, float 0x4010CCCCC0000000, float undef)
  store <4 x i32> %iv47, <4 x i32>* %iv
  %93 = load <4 x i32>* %iv
  %94 = sitofp <4 x i32> %93 to <4 x float>
  %95 = load <4 x float>* %v
  %v48 = fadd <4 x float> %95, %94
  store <4 x float> %v48, <4 x float>* %v
  %96 = load i32 addrspace(1)* @isCube, !gla.uniform !25
  %c3D49 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  store <3 x float> %c3D49, <3 x float>* @c3D_shadow
  %97 = load <3 x float>* @c3D_shadow
  %c1D50 = call float @llvm.gla.fReadInterpolant.f32(i32 1027, i32 -1, i32 1), !gla.input !55
  store float %c1D50, float* @c1D_shadow
  %98 = load float* @c1D_shadow
  %iv51 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 4, i32 %96, i32 132, <3 x float> %97, float %98, float undef)
  store <4 x i32> %iv51, <4 x i32>* %iv
  %99 = load <4 x i32>* %iv
  %100 = sitofp <4 x i32> %99 to <4 x float>
  %101 = load <4 x float>* %v
  %v52 = fadd <4 x float> %101, %100
  store <4 x float> %v52, <4 x float>* %v
  %102 = load i32 addrspace(1)* @is2DArray, !gla.uniform !28
  %ic3D53 = call <3 x i32> @llvm.gla.readData.v3i32(i32 1028, i32 -1), !gla.input !57
  store <3 x i32> %ic3D53, <3 x i32>* @ic3D_shadow
  %103 = load <3 x i32>* @ic3D_shadow
  %ic1D54 = call i32 @llvm.gla.readData.i32(i32 1029, i32 -1), !gla.input !59
  store i32 %ic1D54, i32* @ic1D_shadow
  %104 = load i32* @ic1D_shadow
  %iv55 = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32 2, i32 %102, i32 178, <3 x i32> %103, i32 %104, float undef, i32 undef)
  store <4 x i32> %iv55, <4 x i32>* %iv
  %105 = load <4 x i32>* %iv
  %106 = sitofp <4 x i32> %105 to <4 x float>
  %107 = load <4 x float>* %v
  %v56 = fadd <4 x float> %107, %106
  store <4 x float> %v56, <4 x float>* %v
  %108 = load i32 addrspace(1)* @sCubeShadow, !gla.uniform !31
  %iv257 = call <2 x i32> @llvm.gla.queryTextureSize.v2i32(i32 4, i32 %108, i32 2)
  store <2 x i32> %iv257, <2 x i32>* %iv2
  %109 = load <4 x float>* %v
  %110 = load <2 x i32>* %iv2
  %111 = sitofp <2 x i32> %110 to <2 x float>
  %112 = load <4 x float>* %constructed
  %113 = extractelement <2 x float> %111, i32 0
  %114 = insertelement <4 x float> %112, float %113, i32 0
  %115 = extractelement <2 x float> %111, i32 1
  %116 = insertelement <4 x float> %114, float %115, i32 1
  %117 = insertelement <4 x float> %116, float 0.000000e+00, i32 2
  %118 = insertelement <4 x float> %117, float 0.000000e+00, i32 3
  %FragData_shadow = fadd <4 x float> %109, %118
  store <4 x float> %FragData_shadow, <4 x float>* @FragData_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %119 = load <4 x float>* @FragData_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1031, i32 -1, <4 x float> %119), !gla.output !65
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) #0

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32, i32, i32, <3 x float>, float, float, <2 x i32>) #0

; Function Attrs: nounwind readonly
declare <3 x i32> @llvm.gla.readData.v3i32(i32, i32) #1

; Function Attrs: nounwind readonly
declare i32 @llvm.gla.readData.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) #0

; Function Attrs: nounwind readonly
declare <2 x i32> @llvm.gla.readData.v2i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.v2i32.i32(i32, i32, i32, <2 x i32>, <2 x i32>, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffset.v4f32.v3f32.v2i32(i32, i32, i32, <3 x float>, float, float, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v3f32.v3f32(i32, i32, i32, <3 x float>, float, float, i32, <3 x float>, <3 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32, i32, i32, <4 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32, i32, i32, <4 x float>, float, float, i32, <3 x float>, <3 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSample.v4i32.v2f32(i32, i32, i32, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZOffset.v4i32.v4f32.v2i32(i32, i32, i32, <4 x float>, float, float, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32, i32, i32, <3 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.queryTextureSize.v2i32(i32, i32, i32) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !4, !7, !10, !13, !16, !19, !22, !25, !28, !31, !34, !37, !40, !43, !46}
!gla.inputs = !{!49, !51, !53, !55, !57, !59, !61, !63}
!gla.outputs = !{!65}
!gla.noStaticUse = !{!34, !37, !40, !43, !46, !63}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"s2D", i32 12, i32* @s2D_typeProxy, metadata !2}
!2 = metadata !{i32 5, i32 0, i32 1024, metadata !3}
!3 = metadata !{i32 0, i32* @s2D_typeProxy, i32 1, i1 false, i1 false, i32 0}
!4 = metadata !{metadata !"s3D", i32 12, i32* @s3D_typeProxy, metadata !5}
!5 = metadata !{i32 5, i32 0, i32 1024, metadata !6}
!6 = metadata !{i32 0, i32* @s3D_typeProxy, i32 2, i1 false, i1 false, i32 0}
!7 = metadata !{metadata !"s2DArray", i32 12, i32* @s2DArray_typeProxy, metadata !8}
!8 = metadata !{i32 5, i32 0, i32 1024, metadata !9}
!9 = metadata !{i32 0, i32* @s2DArray_typeProxy, i32 1, i1 true, i1 false, i32 0}
!10 = metadata !{metadata !"s2DShadow", i32 12, i32* @s2DShadow_typeProxy, metadata !11}
!11 = metadata !{i32 5, i32 0, i32 1024, metadata !12}
!12 = metadata !{i32 0, i32* @s2DShadow_typeProxy, i32 1, i1 false, i1 true, i32 0}
!13 = metadata !{metadata !"sCube", i32 12, i32* @sCube_typeProxy, metadata !14}
!14 = metadata !{i32 5, i32 0, i32 1024, metadata !15}
!15 = metadata !{i32 0, i32* @sCube_typeProxy, i32 3, i1 false, i1 false, i32 0}
!16 = metadata !{metadata !"s2DArrayShadow", i32 12, i32* @s2DArrayShadow_typeProxy, metadata !17}
!17 = metadata !{i32 5, i32 0, i32 1024, metadata !18}
!18 = metadata !{i32 0, i32* @s2DArrayShadow_typeProxy, i32 1, i1 true, i1 true, i32 0}
!19 = metadata !{metadata !"is2D", i32 12, i32* @is2D_typeProxy, metadata !20}
!20 = metadata !{i32 5, i32 0, i32 1024, metadata !21}
!21 = metadata !{i32 0, i32* @is2D_typeProxy, i32 1, i1 false, i1 false, i32 1}
!22 = metadata !{metadata !"is3D", i32 12, i32* @is3D_typeProxy, metadata !23}
!23 = metadata !{i32 5, i32 0, i32 1024, metadata !24}
!24 = metadata !{i32 0, i32* @is3D_typeProxy, i32 2, i1 false, i1 false, i32 1}
!25 = metadata !{metadata !"isCube", i32 12, i32* @isCube_typeProxy, metadata !26}
!26 = metadata !{i32 5, i32 0, i32 1024, metadata !27}
!27 = metadata !{i32 0, i32* @isCube_typeProxy, i32 3, i1 false, i1 false, i32 1}
!28 = metadata !{metadata !"is2DArray", i32 12, i32* @is2DArray_typeProxy, metadata !29}
!29 = metadata !{i32 5, i32 0, i32 1024, metadata !30}
!30 = metadata !{i32 0, i32* @is2DArray_typeProxy, i32 1, i1 true, i1 false, i32 1}
!31 = metadata !{metadata !"sCubeShadow", i32 12, i32* @sCubeShadow_typeProxy, metadata !32}
!32 = metadata !{i32 5, i32 0, i32 1024, metadata !33}
!33 = metadata !{i32 0, i32* @sCubeShadow_typeProxy, i32 3, i1 false, i1 true, i32 0}
!34 = metadata !{metadata !"is2Dms", i32 12, i32* @is2Dms_typeProxy, metadata !35}
!35 = metadata !{i32 5, i32 0, i32 1024, metadata !36}
!36 = metadata !{i32 0, i32* @is2Dms_typeProxy, i32 1, i1 false, i1 false, i32 1}
!37 = metadata !{metadata !"us2D", i32 12, i32* @us2D_typeProxy, metadata !38}
!38 = metadata !{i32 5, i32 0, i32 1024, metadata !39}
!39 = metadata !{i32 0, i32* @us2D_typeProxy, i32 1, i1 false, i1 false, i32 2}
!40 = metadata !{metadata !"us3D", i32 12, i32* @us3D_typeProxy, metadata !41}
!41 = metadata !{i32 5, i32 0, i32 1024, metadata !42}
!42 = metadata !{i32 0, i32* @us3D_typeProxy, i32 2, i1 false, i1 false, i32 2}
!43 = metadata !{metadata !"usCube", i32 12, i32* @usCube_typeProxy, metadata !44}
!44 = metadata !{i32 5, i32 0, i32 1024, metadata !45}
!45 = metadata !{i32 0, i32* @usCube_typeProxy, i32 3, i1 false, i1 false, i32 2}
!46 = metadata !{metadata !"us2DArray", i32 12, i32* @us2DArray_typeProxy, metadata !47}
!47 = metadata !{i32 5, i32 0, i32 1024, metadata !48}
!48 = metadata !{i32 0, i32* @us2DArray_typeProxy, i32 1, i1 true, i1 false, i32 2}
!49 = metadata !{metadata !"c2D", i32 1, <2 x float>* @c2D_shadow_typeProxy, metadata !50}
!50 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!51 = metadata !{metadata !"c4D", i32 1, <4 x float>* @c4D_shadow_typeProxy, metadata !52}
!52 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}
!53 = metadata !{metadata !"c3D", i32 1, <3 x float>* @c3D_shadow_typeProxy, metadata !54}
!54 = metadata !{i32 0, i32 0, i32 1026, null, i32 1}
!55 = metadata !{metadata !"c1D", i32 1, float* @c1D_shadow_typeProxy, metadata !56}
!56 = metadata !{i32 0, i32 0, i32 1027, null, i32 1}
!57 = metadata !{metadata !"ic3D", i32 1, <3 x i32>* @ic3D_shadow_typeProxy, metadata !58}
!58 = metadata !{i32 0, i32 0, i32 1028, null, i32 0}
!59 = metadata !{metadata !"ic1D", i32 1, i32* @ic1D_shadow_typeProxy, metadata !60}
!60 = metadata !{i32 0, i32 0, i32 1029, null, i32 0}
!61 = metadata !{metadata !"ic2D", i32 1, <2 x i32>* @ic2D_shadow_typeProxy, metadata !62}
!62 = metadata !{i32 0, i32 0, i32 1030, null, i32 0}
!63 = metadata !{metadata !"ic4D", i32 1, <4 x i32>* @ic4D_shadow_typeProxy, metadata !64}
!64 = metadata !{i32 0, i32 0, i32 1032, null, i32 0}
!65 = metadata !{metadata !"FragData", i32 7, <4 x float>* @FragData_shadow_typeProxy, metadata !66}
!66 = metadata !{i32 0, i32 0, i32 1031, null, i32 0}


Bottom IR:
; ModuleID = 'Top'

@s2D = external addrspace(1) constant i32
@s3D = external addrspace(1) constant i32
@s2DArray = external addrspace(1) constant i32
@s2DShadow = external addrspace(1) constant i32
@sCube = external addrspace(1) constant i32
@s2DArrayShadow = external addrspace(1) constant i32
@is2D = external addrspace(1) constant i32
@is3D = external addrspace(1) constant i32
@isCube = external addrspace(1) constant i32
@is2DArray = external addrspace(1) constant i32
@sCubeShadow = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @s2D, align 4, !gla.uniform !1
  %c2D = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !49
  %v1 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %c2D)
  %1 = load i32 addrspace(1)* @s3D, align 4, !gla.uniform !4
  %c4D = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !51
  %2 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %1, i32 1, <4 x float> %c4D)
  %v2 = fadd <4 x float> %v1, %2
  %3 = load i32 addrspace(1)* @s2DArray, align 4, !gla.uniform !7
  %c3D = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !53
  %4 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %3, i32 148, <3 x float> %c3D, float 0x3FF3333340000000, float undef)
  %v3 = fadd <4 x float> %v2, %4
  %5 = load i32 addrspace(1)* @s2DShadow, align 4, !gla.uniform !10
  %c1D = call float @llvm.gla.fReadInterpolant.f32(i32 1027, i32 -1, i32 1), !gla.input !55
  %6 = call float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32 2, i32 %5, i32 394, <3 x float> %c3D, float %c1D, float undef, <2 x i32> <i32 3, i32 3>)
  %7 = extractelement <4 x float> %v3, i32 1
  %8 = fadd float %7, %6
  %9 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %v3, i32 2, float undef, i32 undef, float %8, i32 0, float undef, i32 undef, float undef, i32 undef)
  %ic3D = call <3 x i32> @llvm.gla.readData.v3i32(i32 1028, i32 -1), !gla.input !57
  %ic1D = call i32 @llvm.gla.readData.i32(i32 1029, i32 -1), !gla.input !59
  %10 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32 3, i32 %1, i32 162, <3 x i32> %ic3D, i32 %ic1D, float undef, i32 undef)
  %v6 = fadd <4 x float> %9, %10
  %ic2D = call <2 x i32> @llvm.gla.readData.v2i32(i32 1030, i32 -1), !gla.input !61
  %11 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.v2i32.i32(i32 2, i32 %0, i32 418, <2 x i32> %ic2D, <2 x i32> %ic2D, float undef, i32 4)
  %v8 = fadd <4 x float> %v6, %11
  %12 = call float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32 2, i32 %5, i32 396, <3 x float> %c3D, float %c1D, float undef, <2 x i32> <i32 3, i32 3>)
  %13 = extractelement <4 x float> %v8, i32 1
  %14 = fadd float %12, %13
  %15 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %v8, i32 2, float undef, i32 undef, float %14, i32 0, float undef, i32 undef, float undef, i32 undef)
  %16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffset.v4f32.v3f32.v2i32(i32 2, i32 %0, i32 389, <3 x float> %c3D, float %c1D, float undef, <2 x i32> <i32 3, i32 3>)
  %v14 = fadd <4 x float> %16, %15
  %17 = load i32 addrspace(1)* @sCube, align 4, !gla.uniform !13
  %18 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v3f32.v3f32(i32 4, i32 %17, i32 0, <3 x float> %c3D, float undef, float undef, i32 undef, <3 x float> %c3D, <3 x float> %c3D)
  %v18 = fadd <4 x float> %18, %v14
  %19 = load i32 addrspace(1)* @is2D, align 4, !gla.uniform !19
  %20 = load i32 addrspace(1)* @sCubeShadow, align 4, !gla.uniform !31
  %iv257 = call <2 x i32> @llvm.gla.queryTextureSize.v2i32(i32 4, i32 %20, i32 2)
  %21 = sitofp <2 x i32> %iv257 to <2 x float>
  %22 = load i32 addrspace(1)* @s2DArrayShadow, align 4, !gla.uniform !16
  %23 = extractelement <4 x float> %v18, i32 0
  %24 = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32 2, i32 %22, i32 280, <4 x float> %c4D, float undef, float undef, <2 x i32> <i32 3, i32 3>, <2 x float> %c2D, <2 x float> %c2D)
  %25 = fadd float %23, %24
  %26 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32 3, i32 %1, i32 1, <4 x float> %c4D, float undef, float undef, i32 undef, <3 x float> %c3D, <3 x float> %c3D)
  %27 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %v18, i32 1, float %25, i32 0, float undef, i32 undef, float undef, i32 undef, float undef, i32 undef)
  %iv32 = call <4 x i32> @llvm.gla.textureSample.v4i32.v2f32(i32 2, i32 %19, i32 0, <2 x float> %c2D)
  %28 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32 2, i32 %0, i32 257, <3 x float> %c3D, float undef, float undef, <2 x i32> <i32 3, i32 3>, <2 x float> %c2D, <2 x float> %c2D)
  %v26 = fadd <4 x float> %26, %27
  %iv35 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffset.v4i32.v4f32.v2i32(i32 2, i32 %19, i32 257, <4 x float> %c4D, float undef, float undef, <2 x i32> <i32 3, i32 3>)
  %29 = sitofp <4 x i32> %iv32 to <4 x float>
  %v30 = fadd <4 x float> %v26, %28
  %iv39 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 2, i32 %19, i32 133, <3 x float> %c3D, float %c1D, float undef)
  %30 = sitofp <4 x i32> %iv35 to <4 x float>
  %v33 = fadd <4 x float> %29, %v30
  %31 = load i32 addrspace(1)* @is3D, align 4, !gla.uniform !22
  %iv44 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v3f32.i32.v2f32.v2f32(i32 2, i32 %19, i32 1, <3 x float> %c3D, float undef, float undef, i32 undef, <2 x float> %c2D, <2 x float> %c2D)
  %32 = sitofp <4 x i32> %iv39 to <4 x float>
  %v36 = fadd <4 x float> %v33, %30
  %33 = load i32 addrspace(1)* @isCube, align 4, !gla.uniform !25
  %iv47 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 3, i32 %31, i32 130, <3 x float> %c3D, float 0x4010CCCCC0000000, float undef)
  %34 = sitofp <4 x i32> %iv44 to <4 x float>
  %v40 = fadd <4 x float> %v36, %32
  %35 = load i32 addrspace(1)* @is2DArray, align 4, !gla.uniform !28
  %iv51 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 4, i32 %33, i32 132, <3 x float> %c3D, float %c1D, float undef)
  %36 = sitofp <4 x i32> %iv47 to <4 x float>
  %v45 = fadd <4 x float> %v40, %34
  %iv55 = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32 2, i32 %35, i32 178, <3 x i32> %ic3D, i32 %ic1D, float undef, i32 undef)
  %37 = sitofp <4 x i32> %iv51 to <4 x float>
  %v48 = fadd <4 x float> %v45, %36
  %38 = sitofp <4 x i32> %iv55 to <4 x float>
  %v52 = fadd <4 x float> %v48, %37
  %39 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.f32.f32(<4 x float> undef, i32 15, <2 x float> %21, i32 0, <2 x float> %21, i32 1, float 0.000000e+00, i32 0, float 0.000000e+00, i32 0)
  %v56 = fadd <4 x float> %v52, %38
  %FragData_shadow = fadd <4 x float> %39, %v56
  call void @llvm.gla.fWriteData.v4f32(i32 1031, i32 -1, <4 x float> %FragData_shadow), !gla.output !65
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) #0

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32, i32, i32, <3 x float>, float, float, <2 x i32>) #0

; Function Attrs: nounwind readonly
declare <3 x i32> @llvm.gla.readData.v3i32(i32, i32) #1

; Function Attrs: nounwind readonly
declare i32 @llvm.gla.readData.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) #0

; Function Attrs: nounwind readonly
declare <2 x i32> @llvm.gla.readData.v2i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.v2i32.i32(i32, i32, i32, <2 x i32>, <2 x i32>, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffset.v4f32.v3f32.v2i32(i32, i32, i32, <3 x float>, float, float, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v3f32.v3f32(i32, i32, i32, <3 x float>, float, float, i32, <3 x float>, <3 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32, i32, i32, <4 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32, i32, i32, <4 x float>, float, float, i32, <3 x float>, <3 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSample.v4i32.v2f32(i32, i32, i32, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZOffset.v4i32.v4f32.v2i32(i32, i32, i32, <4 x float>, float, float, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32, i32, i32, <3 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.queryTextureSize.v2i32(i32, i32, i32) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #2

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.f32.f32(<4 x float>, i32, <2 x float>, i32, <2 x float>, i32, float, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float>, i32, float, i32, float, i32, float, i32, float, i32) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !4, !7, !10, !13, !16, !19, !22, !25, !28, !31, !34, !37, !40, !43, !46}
!gla.inputs = !{!49, !51, !53, !55, !57, !59, !61, !63}
!gla.outputs = !{!65}
!gla.noStaticUse = !{!34, !37, !40, !43, !46, !63}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"s2D", i32 12, i32* @s2D_typeProxy, metadata !2}
!2 = metadata !{i32 5, i32 0, i32 1024, metadata !3}
!3 = metadata !{i32 0, i32* @s2D_typeProxy, i32 1, i1 false, i1 false, i32 0}
!4 = metadata !{metadata !"s3D", i32 12, i32* @s3D_typeProxy, metadata !5}
!5 = metadata !{i32 5, i32 0, i32 1024, metadata !6}
!6 = metadata !{i32 0, i32* @s3D_typeProxy, i32 2, i1 false, i1 false, i32 0}
!7 = metadata !{metadata !"s2DArray", i32 12, i32* @s2DArray_typeProxy, metadata !8}
!8 = metadata !{i32 5, i32 0, i32 1024, metadata !9}
!9 = metadata !{i32 0, i32* @s2DArray_typeProxy, i32 1, i1 true, i1 false, i32 0}
!10 = metadata !{metadata !"s2DShadow", i32 12, i32* @s2DShadow_typeProxy, metadata !11}
!11 = metadata !{i32 5, i32 0, i32 1024, metadata !12}
!12 = metadata !{i32 0, i32* @s2DShadow_typeProxy, i32 1, i1 false, i1 true, i32 0}
!13 = metadata !{metadata !"sCube", i32 12, i32* @sCube_typeProxy, metadata !14}
!14 = metadata !{i32 5, i32 0, i32 1024, metadata !15}
!15 = metadata !{i32 0, i32* @sCube_typeProxy, i32 3, i1 false, i1 false, i32 0}
!16 = metadata !{metadata !"s2DArrayShadow", i32 12, i32* @s2DArrayShadow_typeProxy, metadata !17}
!17 = metadata !{i32 5, i32 0, i32 1024, metadata !18}
!18 = metadata !{i32 0, i32* @s2DArrayShadow_typeProxy, i32 1, i1 true, i1 true, i32 0}
!19 = metadata !{metadata !"is2D", i32 12, i32* @is2D_typeProxy, metadata !20}
!20 = metadata !{i32 5, i32 0, i32 1024, metadata !21}
!21 = metadata !{i32 0, i32* @is2D_typeProxy, i32 1, i1 false, i1 false, i32 1}
!22 = metadata !{metadata !"is3D", i32 12, i32* @is3D_typeProxy, metadata !23}
!23 = metadata !{i32 5, i32 0, i32 1024, metadata !24}
!24 = metadata !{i32 0, i32* @is3D_typeProxy, i32 2, i1 false, i1 false, i32 1}
!25 = metadata !{metadata !"isCube", i32 12, i32* @isCube_typeProxy, metadata !26}
!26 = metadata !{i32 5, i32 0, i32 1024, metadata !27}
!27 = metadata !{i32 0, i32* @isCube_typeProxy, i32 3, i1 false, i1 false, i32 1}
!28 = metadata !{metadata !"is2DArray", i32 12, i32* @is2DArray_typeProxy, metadata !29}
!29 = metadata !{i32 5, i32 0, i32 1024, metadata !30}
!30 = metadata !{i32 0, i32* @is2DArray_typeProxy, i32 1, i1 true, i1 false, i32 1}
!31 = metadata !{metadata !"sCubeShadow", i32 12, i32* @sCubeShadow_typeProxy, metadata !32}
!32 = metadata !{i32 5, i32 0, i32 1024, metadata !33}
!33 = metadata !{i32 0, i32* @sCubeShadow_typeProxy, i32 3, i1 false, i1 true, i32 0}
!34 = metadata !{metadata !"is2Dms", i32 12, i32* @is2Dms_typeProxy, metadata !35}
!35 = metadata !{i32 5, i32 0, i32 1024, metadata !36}
!36 = metadata !{i32 0, i32* @is2Dms_typeProxy, i32 1, i1 false, i1 false, i32 1}
!37 = metadata !{metadata !"us2D", i32 12, i32* @us2D_typeProxy, metadata !38}
!38 = metadata !{i32 5, i32 0, i32 1024, metadata !39}
!39 = metadata !{i32 0, i32* @us2D_typeProxy, i32 1, i1 false, i1 false, i32 2}
!40 = metadata !{metadata !"us3D", i32 12, i32* @us3D_typeProxy, metadata !41}
!41 = metadata !{i32 5, i32 0, i32 1024, metadata !42}
!42 = metadata !{i32 0, i32* @us3D_typeProxy, i32 2, i1 false, i1 false, i32 2}
!43 = metadata !{metadata !"usCube", i32 12, i32* @usCube_typeProxy, metadata !44}
!44 = metadata !{i32 5, i32 0, i32 1024, metadata !45}
!45 = metadata !{i32 0, i32* @usCube_typeProxy, i32 3, i1 false, i1 false, i32 2}
!46 = metadata !{metadata !"us2DArray", i32 12, i32* @us2DArray_typeProxy, metadata !47}
!47 = metadata !{i32 5, i32 0, i32 1024, metadata !48}
!48 = metadata !{i32 0, i32* @us2DArray_typeProxy, i32 1, i1 true, i1 false, i32 2}
!49 = metadata !{metadata !"c2D", i32 1, <2 x float>* @c2D_shadow_typeProxy, metadata !50}
!50 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!51 = metadata !{metadata !"c4D", i32 1, <4 x float>* @c4D_shadow_typeProxy, metadata !52}
!52 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}
!53 = metadata !{metadata !"c3D", i32 1, <3 x float>* @c3D_shadow_typeProxy, metadata !54}
!54 = metadata !{i32 0, i32 0, i32 1026, null, i32 1}
!55 = metadata !{metadata !"c1D", i32 1, float* @c1D_shadow_typeProxy, metadata !56}
!56 = metadata !{i32 0, i32 0, i32 1027, null, i32 1}
!57 = metadata !{metadata !"ic3D", i32 1, <3 x i32>* @ic3D_shadow_typeProxy, metadata !58}
!58 = metadata !{i32 0, i32 0, i32 1028, null, i32 0}
!59 = metadata !{metadata !"ic1D", i32 1, i32* @ic1D_shadow_typeProxy, metadata !60}
!60 = metadata !{i32 0, i32 0, i32 1029, null, i32 0}
!61 = metadata !{metadata !"ic2D", i32 1, <2 x i32>* @ic2D_shadow_typeProxy, metadata !62}
!62 = metadata !{i32 0, i32 0, i32 1030, null, i32 0}
!63 = metadata !{metadata !"ic4D", i32 1, <4 x i32>* @ic4D_shadow_typeProxy, metadata !64}
!64 = metadata !{i32 0, i32 0, i32 1032, null, i32 0}
!65 = metadata !{metadata !"FragData", i32 7, <4 x float>* @FragData_shadow_typeProxy, metadata !66}
!66 = metadata !{i32 0, i32 0, i32 1031, null, i32 0}
#### BEGIN COMPILER 0 INFO LOG ####
Warning, version 430 is not yet complete; some version-specific features are present, but many are missing.
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 430 core
// LunarGOO output (r722)
uniform sampler2D s2D;
uniform sampler3D s3D;
uniform sampler2DArray s2DArray;
uniform sampler2DShadow s2DShadow;
uniform samplerCube sCube;
uniform sampler2DArrayShadow s2DArrayShadow;
uniform isampler2D is2D;
uniform isampler3D is3D;
uniform isamplerCube isCube;
uniform isampler2DArray is2DArray;
uniform samplerCubeShadow sCubeShadow;
uniform isampler2D is2Dms;
uniform usampler2D us2D;
uniform usampler3D us3D;
uniform usamplerCube usCube;
uniform usampler2DArray us2DArray;
in vec2 c2D;
in vec4 c4D;
in vec3 c3D;
in float c1D;
flat in ivec3 ic3D;
flat in int ic1D;
flat in ivec2 ic2D;
flat in ivec4 ic4D;
out vec4 FragData;
const float const25 = 1.2;
const ivec2 const28 = ivec2(3);
const int const34i_4 = 4;
const int const44i_2 = 2;
const float const63 = 4.2;
const float const75 = 0.0;

void main()
{
    vec4 temp21 = texture(s2D, c2D);
    vec4 temp22 = textureProj(s3D, c4D);
    vec4 temp23 = temp21 + temp22;
    vec4 temp24 = textureLod(s2DArray, c3D, const25);
    vec4 temp26 = temp23 + temp24;
    float temp27 = textureOffset(s2DShadow, c3D, const28, c1D);
    float temp29 = temp26.y + temp27;
    vec4 temp30 = temp26;
    temp30.y = temp29;
    vec4 temp31 = texelFetch(s3D, ic3D, ic1D);
    vec4 temp32 = temp30 + temp31;
    vec4 temp33 = texelFetchOffset(s2D, ic2D, const34i_4, ic2D);
    vec4 temp35 = temp32 + temp33;
    float temp36 = textureLodOffset(s2DShadow, c3D, c1D, const28);
    float temp37 = temp36 + temp35.y;
    vec4 temp38 = temp35;
    temp38.y = temp37;
    vec4 temp39 = textureProjLodOffset(s2D, c3D, c1D, const28);
    vec4 temp40 = temp39 + temp38;
    vec4 temp41 = textureGrad(sCube, c3D, c3D, c3D);
    vec4 temp42 = temp41 + temp40;
    ivec2 iv257 = textureSize(sCubeShadow, const44i_2);
    vec2 temp45 = vec2(iv257);
    float temp46 = textureGradOffset(s2DArrayShadow, c4D, c2D, c2D, const28);
    float temp47 = temp42.x + temp46;
    vec4 temp48 = textureProjGrad(s3D, c4D, c3D, c3D);
    vec4 temp49 = temp42;
    temp49.x = temp47;
    ivec4 iv32 = texture(is2D, c2D);
    vec4 temp51 = textureProjGradOffset(s2D, c3D, c2D, c2D, const28);
    vec4 temp52 = temp48 + temp49;
    ivec4 iv35 = textureProjOffset(is2D, c4D, const28);
    vec4 temp54 = vec4(iv32);
    vec4 temp55 = temp52 + temp51;
    ivec4 iv39 = textureProjLod(is2D, c3D, c1D);
    vec4 temp57 = vec4(iv35);
    vec4 temp58 = temp54 + temp55;
    ivec4 iv44 = textureProjGrad(is2D, c3D, c2D, c2D);
    vec4 temp60 = vec4(iv39);
    vec4 temp61 = temp58 + temp57;
    ivec4 iv47 = texture(is3D, c3D, const63);
    vec4 temp64 = vec4(iv44);
    vec4 temp65 = temp61 + temp60;
    ivec4 iv51 = textureLod(isCube, c3D, c1D);
    vec4 temp67 = vec4(iv47);
    vec4 temp68 = temp65 + temp64;
    ivec4 iv55 = texelFetch(is2DArray, ic3D, ic1D);
    vec4 temp70 = vec4(iv51);
    vec4 temp71 = temp68 + temp67;
    vec4 temp72 = vec4(iv55);
    vec4 temp73 = temp71 + temp70;
    vec4 temp74 = vec4(temp45.x, temp45.y, const75, const75);
    vec4 temp76 = temp73 + temp72;
    vec4 FragData_shadow = temp74 + temp76;
    FragData = FragData_shadow;
    
}

#### BEGIN COMPILER 0 INFO LOG ####
Warning, version 430 is not yet complete; some version-specific features are present, but many are missing.
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 430 core
// LunarGOO output (r722)
uniform sampler2D s2D;
uniform sampler3D s3D;
uniform sampler2DArray s2DArray;
uniform sampler2DShadow s2DShadow;
uniform samplerCube sCube;
uniform samplerCubeShadow sCubeShadow;
uniform sampler2DArrayShadow s2DArrayShadow;
uniform isampler2D is2D;
uniform isampler3D is3D;
uniform isamplerCube isCube;
uniform isampler2DArray is2DArray;
uniform isampler2D is2Dms;
uniform usampler2D us2D;
uniform usampler3D us3D;
uniform usamplerCube usCube;
uniform usampler2DArray us2DArray;
in vec2 c2D;
in vec4 c4D;
in vec3 c3D;
in float c1D;
flat in ivec3 ic3D;
flat in int ic1D;
flat in ivec2 ic2D;
flat in ivec4 ic4D;
out vec4 FragData;
const float const25 = 1.2;
const ivec2 const28 = ivec2(3);
const int const34i_4 = 4;
const int const44i_2 = 2;
const float const65 = 4.2;
const float const76 = 0.0;

void main()
{
    vec4 temp211 = texture(s2D, c2D);
    vec4 temp222 = textureProj(s3D, c4D);
    vec4 temp233 = temp211 + temp222;
    vec4 temp244 = textureLod(s2DArray, c3D, const25);
    vec4 temp265 = temp233 + temp244;
    float temp277 = textureOffset(s2DShadow, c3D, const28, c1D);
    float temp298 = temp265.y + temp277;
    vec4 temp30 = temp265;
    temp30.y = temp298;
    vec4 temp3111 = texelFetch(s3D, ic3D, ic1D);
    vec4 temp3212 = temp30 + temp3111;
    vec4 temp3314 = texelFetchOffset(s2D, ic2D, const34i_4, ic2D);
    vec4 temp3515 = temp3212 + temp3314;
    float temp3618 = textureLodOffset(s2DShadow, c3D, c1D, const28);
    float temp3719 = temp3618 + temp3515.y;
    vec4 temp38 = temp3515;
    temp38.y = temp3719;
    vec4 temp3924 = textureProjLodOffset(s2D, c3D, c1D, const28);
    vec4 temp4025 = temp3924 + temp38;
    vec4 temp4129 = textureGrad(sCube, c3D, c3D, c3D);
    vec4 temp4230 = temp4129 + temp4025;
    ivec2 iv25731 = textureSize(sCubeShadow, const44i_2);
    vec2 temp4532 = vec2(iv25731);
    float temp4636 = textureGradOffset(s2DArrayShadow, c4D, c2D, c2D, const28);
    float temp4737 = temp4230.x + temp4636;
    vec4 temp48 = temp4230;
    temp48.x = temp4737;
    vec4 temp4841 = textureProjGrad(s3D, c4D, c3D, c3D);
    vec4 temp5250 = temp4841 + temp48;
    vec4 temp5149 = textureProjGradOffset(s2D, c3D, c2D, c2D, const28);
    ivec4 iv3245 = texture(is2D, c2D);
    vec4 temp5554 = temp5149 + temp5250;
    vec4 temp5453 = vec4(iv3245);
    ivec4 iv3552 = textureProjOffset(is2D, c4D, const28);
    vec4 temp5859 = temp5453 + temp5554;
    vec4 temp5758 = vec4(iv3552);
    ivec4 iv3957 = textureProjLod(is2D, c3D, c1D);
    vec4 temp6165 = temp5859 + temp5758;
    vec4 temp6064 = vec4(iv3957);
    ivec4 iv4463 = textureProjGrad(is2D, c3D, c2D, c2D);
    vec4 temp6569 = temp6165 + temp6064;
    vec4 temp6468 = vec4(iv4463);
    ivec4 iv4767 = texture(is3D, c3D, const65);
    vec4 temp6874 = temp6569 + temp6468;
    vec4 temp6773 = vec4(iv4767);
    ivec4 iv5172 = textureLod(isCube, c3D, c1D);
    vec4 temp7179 = temp6874 + temp6773;
    vec4 temp7078 = vec4(iv5172);
    ivec4 iv5577 = texelFetch(is2DArray, ic3D, ic1D);
    vec4 temp7381 = temp7179 + temp7078;
    vec4 temp7280 = vec4(iv5577);
    vec4 temp7683 = temp7381 + temp7280;
    vec4 temp75 = vec4(temp4532.x, temp4532.y, const76, const76);
    vec4 FragData_shadow84 = temp75 + temp7683;
    FragData = FragData_shadow84;
    
}

