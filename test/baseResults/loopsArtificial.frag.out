
Top IR:
; ModuleID = 'Glslang'

@BaseColor = global <4 x float> zeroinitializer
@bigColor4 = external addrspace(2) constant <4 x float>
@d4 = external addrspace(2) constant float
@d13 = external addrspace(2) constant float
@gl_FragColor = global <4 x float> zeroinitializer
@bigColor = external addrspace(2) constant <4 x float>
@bigColor1_1 = external addrspace(2) constant <4 x float>
@bigColor1_2 = external addrspace(2) constant <4 x float>
@bigColor1_3 = external addrspace(2) constant <4 x float>
@bigColor2 = external addrspace(2) constant <4 x float>
@bigColor3 = external addrspace(2) constant <4 x float>
@bigColor5 = external addrspace(2) constant <4 x float>
@bigColor6 = external addrspace(2) constant <4 x float>
@bigColor7 = external addrspace(2) constant <4 x float>
@bigColor8 = external addrspace(2) constant <4 x float>
@d = external addrspace(2) constant float
@d2 = external addrspace(2) constant float
@d3 = external addrspace(2) constant float
@d5 = external addrspace(2) constant float
@d6 = external addrspace(2) constant float
@d7 = external addrspace(2) constant float
@d8 = external addrspace(2) constant float
@d9 = external addrspace(2) constant float
@d10 = external addrspace(2) constant float
@d11 = external addrspace(2) constant float
@d12 = external addrspace(2) constant float
@d14 = external addrspace(2) constant float
@d15 = external addrspace(2) constant float
@d16 = external addrspace(2) constant float
@d17 = external addrspace(2) constant float
@d18 = external addrspace(2) constant float
@d19 = external addrspace(2) constant float
@d20 = external addrspace(2) constant float
@d21 = external addrspace(2) constant float
@d22 = external addrspace(2) constant float
@d23 = external addrspace(2) constant float
@d24 = external addrspace(2) constant float
@d25 = external addrspace(2) constant float
@d26 = external addrspace(2) constant float
@d27 = external addrspace(2) constant float
@d28 = external addrspace(2) constant float
@d29 = external addrspace(2) constant float
@d30 = external addrspace(2) constant float
@d31 = external addrspace(2) constant float
@d32 = external addrspace(2) constant float
@d33 = external addrspace(2) constant float
@d34 = external addrspace(2) constant float
@Count = external addrspace(2) constant i32

define fastcc void @main() {
entry:
  %color = alloca <4 x float>
  %color1 = load <4 x float>* @BaseColor
  store <4 x float> %color1, <4 x float>* %color
  br label %loop-header

loop-header:                                      ; preds = %post-loop-continue13, %ifmerge12, %then4, %entry
  %0 = load <4 x float> addrspace(2)* @bigColor4, !gla.uniform !3
  %1 = load <4 x float>* %color
  %color2 = fadd <4 x float> %1, %0
  store <4 x float> %color2, <4 x float>* %color
  %2 = load <4 x float>* %color
  %3 = extractelement <4 x float> %2, i32 0
  %4 = load float addrspace(2)* @d4, !gla.uniform !5
  %5 = fcmp olt float %3, %4
  br i1 %5, label %then, label %ifmerge6

then:                                             ; preds = %loop-header
  %6 = load <4 x float>* %color
  %7 = extractelement <4 x float> %6, i32 2
  %8 = fadd float %7, 2.000000e+00
  %9 = load <4 x float>* %color
  %color3 = insertelement <4 x float> %9, float %8, i32 2
  store <4 x float> %color3, <4 x float>* %color
  %10 = load <4 x float>* %color
  %11 = extractelement <4 x float> %10, i32 2
  %12 = load float addrspace(2)* @d4, !gla.uniform !5
  %13 = fcmp olt float %11, %12
  br i1 %13, label %then4, label %ifmerge

then4:                                            ; preds = %then
  %14 = load <4 x float>* %color
  %15 = extractelement <4 x float> %14, i32 0
  %16 = fadd float %15, 1.000000e+00
  %17 = load <4 x float>* %color
  %color5 = insertelement <4 x float> %17, float %16, i32 0
  store <4 x float> %color5, <4 x float>* %color
  br label %loop-header

post-loop-continue:                               ; No predecessors!
  br label %ifmerge

ifmerge:                                          ; preds = %then, %post-loop-continue
  br label %ifmerge6

ifmerge6:                                         ; preds = %loop-header, %ifmerge
  %18 = load <4 x float>* %color
  %19 = extractelement <4 x float> %18, i32 1
  %20 = load float addrspace(2)* @d4, !gla.uniform !5
  %21 = fcmp olt float %19, %20
  br i1 %21, label %then7, label %else

then7:                                            ; preds = %ifmerge6
  %22 = load float addrspace(2)* @d4, !gla.uniform !5
  %23 = load <4 x float>* %color
  %24 = extractelement <4 x float> %23, i32 1
  %25 = fadd float %24, %22
  %26 = load <4 x float>* %color
  %color8 = insertelement <4 x float> %26, float %25, i32 1
  store <4 x float> %color8, <4 x float>* %color
  br label %ifmerge10

else:                                             ; preds = %ifmerge6
  %27 = load float addrspace(2)* @d4, !gla.uniform !5
  %28 = load <4 x float>* %color
  %29 = extractelement <4 x float> %28, i32 0
  %30 = fadd float %29, %27
  %31 = load <4 x float>* %color
  %color9 = insertelement <4 x float> %31, float %30, i32 0
  store <4 x float> %color9, <4 x float>* %color
  br label %ifmerge10

ifmerge10:                                        ; preds = %else, %then7
  %32 = load <4 x float>* %color
  %33 = extractelement <4 x float> %32, i32 2
  %34 = load float addrspace(2)* @d4, !gla.uniform !5
  %35 = fcmp olt float %33, %34
  %36 = xor i1 %35, true
  br i1 %36, label %then11, label %ifmerge12

then11:                                           ; preds = %ifmerge10
  br label %loop-merge

post-loop-break:                                  ; No predecessors!
  br label %ifmerge12

ifmerge12:                                        ; preds = %ifmerge10, %post-loop-break
  br label %loop-header

post-loop-continue13:                             ; No predecessors!
  br label %loop-header

loop-merge:                                       ; preds = %then11
  br label %loop-header14

loop-header14:                                    ; preds = %post-loop-continue36, %ifmerge35, %then26, %loop-merge
  %37 = load <4 x float>* %color
  %38 = extractelement <4 x float> %37, i32 3
  %39 = load float addrspace(2)* @d13, !gla.uniform !6
  %40 = fcmp olt float %38, %39
  %41 = xor i1 %40, true
  br i1 %41, label %then15, label %ifmerge17

then15:                                           ; preds = %loop-header14
  br label %loop-merge37

post-loop-break16:                                ; No predecessors!
  br label %ifmerge17

ifmerge17:                                        ; preds = %loop-header14, %post-loop-break16
  %42 = load <4 x float>* %color
  %43 = extractelement <4 x float> %42, i32 2
  %44 = load float addrspace(2)* @d13, !gla.uniform !6
  %45 = fcmp olt float %43, %44
  br i1 %45, label %then18, label %else20

then18:                                           ; preds = %ifmerge17
  %46 = load <4 x float>* %color
  %color19 = fadd <4 x float> %46, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color19, <4 x float>* %color
  br label %ifmerge22

else20:                                           ; preds = %ifmerge17
  %47 = load <4 x float>* %color
  %color21 = fsub <4 x float> %47, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color21, <4 x float>* %color
  br label %ifmerge22

ifmerge22:                                        ; preds = %else20, %then18
  %48 = load <4 x float> addrspace(2)* @bigColor4, !gla.uniform !3
  %49 = load <4 x float>* %color
  %color23 = fadd <4 x float> %49, %48
  store <4 x float> %color23, <4 x float>* %color
  %50 = load <4 x float>* %color
  %51 = extractelement <4 x float> %50, i32 0
  %52 = load float addrspace(2)* @d4, !gla.uniform !5
  %53 = fcmp olt float %51, %52
  br i1 %53, label %then24, label %ifmerge30

then24:                                           ; preds = %ifmerge22
  %54 = load <4 x float>* %color
  %55 = extractelement <4 x float> %54, i32 2
  %56 = fadd float %55, 2.000000e+00
  %57 = load <4 x float>* %color
  %color25 = insertelement <4 x float> %57, float %56, i32 2
  store <4 x float> %color25, <4 x float>* %color
  %58 = load <4 x float>* %color
  %59 = extractelement <4 x float> %58, i32 2
  %60 = load float addrspace(2)* @d4, !gla.uniform !5
  %61 = fcmp olt float %59, %60
  br i1 %61, label %then26, label %ifmerge29

then26:                                           ; preds = %then24
  %62 = load <4 x float>* %color
  %63 = extractelement <4 x float> %62, i32 0
  %64 = fadd float %63, 1.000000e+00
  %65 = load <4 x float>* %color
  %color27 = insertelement <4 x float> %65, float %64, i32 0
  store <4 x float> %color27, <4 x float>* %color
  br label %loop-header14

post-loop-continue28:                             ; No predecessors!
  br label %ifmerge29

ifmerge29:                                        ; preds = %then24, %post-loop-continue28
  br label %ifmerge30

ifmerge30:                                        ; preds = %ifmerge22, %ifmerge29
  %66 = load <4 x float>* %color
  %67 = extractelement <4 x float> %66, i32 1
  %68 = load float addrspace(2)* @d4, !gla.uniform !5
  %69 = fcmp olt float %67, %68
  br i1 %69, label %then31, label %else33

then31:                                           ; preds = %ifmerge30
  %70 = load float addrspace(2)* @d4, !gla.uniform !5
  %71 = load <4 x float>* %color
  %72 = extractelement <4 x float> %71, i32 1
  %73 = fadd float %72, %70
  %74 = load <4 x float>* %color
  %color32 = insertelement <4 x float> %74, float %73, i32 1
  store <4 x float> %color32, <4 x float>* %color
  br label %ifmerge35

else33:                                           ; preds = %ifmerge30
  %75 = load float addrspace(2)* @d4, !gla.uniform !5
  %76 = load <4 x float>* %color
  %77 = extractelement <4 x float> %76, i32 0
  %78 = fadd float %77, %75
  %79 = load <4 x float>* %color
  %color34 = insertelement <4 x float> %79, float %78, i32 0
  store <4 x float> %color34, <4 x float>* %color
  br label %ifmerge35

ifmerge35:                                        ; preds = %else33, %then31
  br label %loop-header14

post-loop-continue36:                             ; No predecessors!
  br label %loop-header14

loop-merge37:                                     ; preds = %then15
  %80 = load <4 x float>* %color
  %color38 = fadd <4 x float> %80, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color38, <4 x float>* %color
  %gl_FragColor = load <4 x float>* %color
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %loop-merge37
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

!gla.entrypoint = !{!0}
!gla.inputs = !{!1}
!gla.uniforms = !{!3, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!gla.outputs = !{!50}
!gla.noStaticUse = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"BaseColor", i32 1, <4 x float>* @BaseColor_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!3 = metadata !{metadata !"bigColor4", i32 12, <4 x float>* @bigColor4_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1024, null}
!5 = metadata !{metadata !"d4", i32 12, float* @d4_typeProxy, metadata !4}
!6 = metadata !{metadata !"d13", i32 12, float* @d13_typeProxy, metadata !4}
!7 = metadata !{metadata !"bigColor", i32 12, <4 x float>* @bigColor_typeProxy, metadata !4}
!8 = metadata !{metadata !"bigColor1_1", i32 12, <4 x float>* @bigColor1_1_typeProxy, metadata !4}
!9 = metadata !{metadata !"bigColor1_2", i32 12, <4 x float>* @bigColor1_2_typeProxy, metadata !4}
!10 = metadata !{metadata !"bigColor1_3", i32 12, <4 x float>* @bigColor1_3_typeProxy, metadata !4}
!11 = metadata !{metadata !"bigColor2", i32 12, <4 x float>* @bigColor2_typeProxy, metadata !4}
!12 = metadata !{metadata !"bigColor3", i32 12, <4 x float>* @bigColor3_typeProxy, metadata !4}
!13 = metadata !{metadata !"bigColor5", i32 12, <4 x float>* @bigColor5_typeProxy, metadata !4}
!14 = metadata !{metadata !"bigColor6", i32 12, <4 x float>* @bigColor6_typeProxy, metadata !4}
!15 = metadata !{metadata !"bigColor7", i32 12, <4 x float>* @bigColor7_typeProxy, metadata !4}
!16 = metadata !{metadata !"bigColor8", i32 12, <4 x float>* @bigColor8_typeProxy, metadata !4}
!17 = metadata !{metadata !"d", i32 12, float* @d_typeProxy, metadata !4}
!18 = metadata !{metadata !"d2", i32 12, float* @d2_typeProxy, metadata !4}
!19 = metadata !{metadata !"d3", i32 12, float* @d3_typeProxy, metadata !4}
!20 = metadata !{metadata !"d5", i32 12, float* @d5_typeProxy, metadata !4}
!21 = metadata !{metadata !"d6", i32 12, float* @d6_typeProxy, metadata !4}
!22 = metadata !{metadata !"d7", i32 12, float* @d7_typeProxy, metadata !4}
!23 = metadata !{metadata !"d8", i32 12, float* @d8_typeProxy, metadata !4}
!24 = metadata !{metadata !"d9", i32 12, float* @d9_typeProxy, metadata !4}
!25 = metadata !{metadata !"d10", i32 12, float* @d10_typeProxy, metadata !4}
!26 = metadata !{metadata !"d11", i32 12, float* @d11_typeProxy, metadata !4}
!27 = metadata !{metadata !"d12", i32 12, float* @d12_typeProxy, metadata !4}
!28 = metadata !{metadata !"d14", i32 12, float* @d14_typeProxy, metadata !4}
!29 = metadata !{metadata !"d15", i32 12, float* @d15_typeProxy, metadata !4}
!30 = metadata !{metadata !"d16", i32 12, float* @d16_typeProxy, metadata !4}
!31 = metadata !{metadata !"d17", i32 12, float* @d17_typeProxy, metadata !4}
!32 = metadata !{metadata !"d18", i32 12, float* @d18_typeProxy, metadata !4}
!33 = metadata !{metadata !"d19", i32 12, float* @d19_typeProxy, metadata !4}
!34 = metadata !{metadata !"d20", i32 12, float* @d20_typeProxy, metadata !4}
!35 = metadata !{metadata !"d21", i32 12, float* @d21_typeProxy, metadata !4}
!36 = metadata !{metadata !"d22", i32 12, float* @d22_typeProxy, metadata !4}
!37 = metadata !{metadata !"d23", i32 12, float* @d23_typeProxy, metadata !4}
!38 = metadata !{metadata !"d24", i32 12, float* @d24_typeProxy, metadata !4}
!39 = metadata !{metadata !"d25", i32 12, float* @d25_typeProxy, metadata !4}
!40 = metadata !{metadata !"d26", i32 12, float* @d26_typeProxy, metadata !4}
!41 = metadata !{metadata !"d27", i32 12, float* @d27_typeProxy, metadata !4}
!42 = metadata !{metadata !"d28", i32 12, float* @d28_typeProxy, metadata !4}
!43 = metadata !{metadata !"d29", i32 12, float* @d29_typeProxy, metadata !4}
!44 = metadata !{metadata !"d30", i32 12, float* @d30_typeProxy, metadata !4}
!45 = metadata !{metadata !"d31", i32 12, float* @d31_typeProxy, metadata !4}
!46 = metadata !{metadata !"d32", i32 12, float* @d32_typeProxy, metadata !4}
!47 = metadata !{metadata !"d33", i32 12, float* @d33_typeProxy, metadata !4}
!48 = metadata !{metadata !"d34", i32 12, float* @d34_typeProxy, metadata !4}
!49 = metadata !{metadata !"Count", i32 12, i32* @Count_typeProxy, metadata !4}
!50 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, metadata !51}
!51 = metadata !{i32 0, i32 0, i32 1025, null, i32 0}

***Unsupported functionality: general-case cross edges (requires artificial loop)

Linked fragment stage:

ERROR: Linking fragment stage: Missing entry point: Each stage requires one "void main()" entry point

