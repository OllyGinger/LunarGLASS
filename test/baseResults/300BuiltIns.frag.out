
Top IR:
; ModuleID = 'Glslang'

@x_shadow = internal global <3 x float> zeroinitializer
@y_shadow = internal global <3 x float> zeroinitializer
@bv = external addrspace(2) constant <3 x i1>
@iv4a_shadow = internal global <4 x i32> zeroinitializer
@iv4b_shadow = internal global <4 x i32> zeroinitializer
@imin = external addrspace(2) constant i32
@uv2x_shadow = internal global <2 x i32> zeroinitializer
@uv2y_shadow = internal global <2 x i32> zeroinitializer
@uv4y_shadow = internal global <4 x i32> zeroinitializer
@uy_shadow = internal global i32 0
@iv3a_shadow = internal global <3 x i32> zeroinitializer
@iv3b_shadow = internal global <3 x i32> zeroinitializer
@imax = external addrspace(2) constant i32
@uv2c_shadow = internal global <2 x i32> zeroinitializer
@umin = external addrspace(2) constant i32
@umax = external addrspace(2) constant i32
@f_shadow = internal global float 0.000000e+00
@v2a_shadow = internal global <2 x float> zeroinitializer
@v4_shadow = internal global <4 x float> zeroinitializer
@v2b_shadow = internal global <2 x float> zeroinitializer
@result_shadow = internal global <4 x float> zeroinitializer
@FragCoord_shadow = internal global <4 x float> zeroinitializer
@PointCoord_shadow = internal global <2 x float> zeroinitializer
@FragDepth_shadow = internal global float 0.000000e+00

define fastcc void @main() {
entry:
  %constructed86 = alloca <4 x float>
  %constructed83 = alloca <4 x float>
  %constructed81 = alloca <4 x float>
  %constructed79 = alloca <4 x i32>
  %v18 = alloca <2 x float>
  %u17 = alloca i32
  %v16 = alloca <2 x float>
  %u15 = alloca i32
  %v20 = alloca <2 x float>
  %u19 = alloca i32
  %constructed66 = alloca <4 x float>
  %v15 = alloca <2 x float>
  %constructed58 = alloca <4 x i32>
  %i = alloca i32
  %constructed54 = alloca <4 x i32>
  %b11 = alloca <4 x i1>
  %b10 = alloca <2 x i1>
  %constructed49 = alloca <4 x float>
  %v13 = alloca <2 x float>
  %v12 = alloca <2 x float>
  %constructed44 = alloca <4 x float>
  %constructed42 = alloca <4 x float>
  %modfOut = alloca <3 x float>
  %v11 = alloca <3 x float>
  %constructed35 = alloca <4 x i32>
  %u12 = alloca <2 x i32>
  %constructed24 = alloca <4 x i32>
  %u11 = alloca <2 x i32>
  %u10 = alloca <2 x i32>
  %constructed14 = alloca <4 x i32>
  %i17 = alloca <3 x i32>
  %constructed10 = alloca <4 x i32>
  %u = alloca <2 x i32>
  %constructed = alloca <4 x float>
  %sum = alloca <4 x float>
  %isum = alloca <4 x i32>
  %usum = alloca <4 x i32>
  store <4 x i32> zeroinitializer, <4 x i32>* %usum
  store <4 x i32> zeroinitializer, <4 x i32>* %isum
  store <4 x float> zeroinitializer, <4 x float>* %sum
  %x = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1024, i32 -1, i32 1), !gla.input !1, !gla.precision !47
  store <3 x float> %x, <3 x float>* @x_shadow
  %0 = load <3 x float>* @x_shadow
  %y = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1025, i32 -1, i32 1), !gla.input !3, !gla.precision !47
  store <3 x float> %y, <3 x float>* @y_shadow
  %1 = load <3 x float>* @y_shadow
  %2 = load <3 x i1> addrspace(2)* @bv, !gla.uniform !35
  %3 = call <3 x float> @llvm.gla.fbMix.v3f32.v3f32.v3f32.v3i1(<3 x float> %0, <3 x float> %1, <3 x i1> %2), !gla.precision !47
  %4 = load <4 x float>* %constructed
  %5 = extractelement <3 x float> %3, i32 0, !gla.precision !47
  %6 = insertelement <4 x float> %4, float %5, i32 0, !gla.precision !47
  %7 = extractelement <3 x float> %3, i32 1, !gla.precision !47
  %8 = insertelement <4 x float> %6, float %7, i32 1, !gla.precision !47
  %9 = extractelement <3 x float> %3, i32 2, !gla.precision !47
  %10 = insertelement <4 x float> %8, float %9, i32 2, !gla.precision !47
  %11 = insertelement <4 x float> %10, float 0.000000e+00, i32 3, !gla.precision !47
  %12 = load <4 x float>* %sum
  %sum1 = fadd <4 x float> %12, %11, !gla.precision !47
  store <4 x float> %sum1, <4 x float>* %sum
  %iv4a = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a, <4 x i32>* @iv4a_shadow
  %13 = load <4 x i32>* @iv4a_shadow
  %isum2 = call <4 x i32> @llvm.gla.abs.v4i32.v4i32(<4 x i32> %13), !gla.precision !47
  store <4 x i32> %isum2, <4 x i32>* %isum
  %iv4a3 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a3, <4 x i32>* @iv4a_shadow
  %14 = load <4 x i32>* @iv4a_shadow
  %15 = call <4 x i32> @llvm.gla.sign.v4i32.v4i32(<4 x i32> %14), !gla.precision !47
  %16 = load <4 x i32>* %isum
  %isum4 = add <4 x i32> %16, %15, !gla.precision !47
  store <4 x i32> %isum4, <4 x i32>* %isum
  %iv4a5 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a5, <4 x i32>* @iv4a_shadow
  %17 = load <4 x i32>* @iv4a_shadow
  %iv4b = call <4 x i32> @llvm.gla.readData.v4i32(i32 1027, i32 -1), !gla.input !7, !gla.precision !47
  store <4 x i32> %iv4b, <4 x i32>* @iv4b_shadow
  %18 = load <4 x i32>* @iv4b_shadow
  %19 = call <4 x i32> @llvm.gla.sMin.v4i32.v4i32.v4i32(<4 x i32> %17, <4 x i32> %18), !gla.precision !47
  %20 = load <4 x i32>* %isum
  %isum6 = add <4 x i32> %20, %19, !gla.precision !47
  store <4 x i32> %isum6, <4 x i32>* %isum
  %iv4a7 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a7, <4 x i32>* @iv4a_shadow
  %21 = load <4 x i32>* @iv4a_shadow
  %22 = load i32 addrspace(2)* @imin, !gla.uniform !37
  %23 = call <4 x i32> @llvm.gla.sMin.v4i32.v4i32.i32(<4 x i32> %21, i32 %22), !gla.precision !47
  %24 = load <4 x i32>* %isum
  %isum8 = add <4 x i32> %24, %23, !gla.precision !47
  store <4 x i32> %isum8, <4 x i32>* %isum
  %uv2x = call <2 x i32> @llvm.gla.readData.v2i32(i32 1028, i32 -1), !gla.input !9, !gla.precision !47
  store <2 x i32> %uv2x, <2 x i32>* @uv2x_shadow
  %25 = load <2 x i32>* @uv2x_shadow
  %uv2y = call <2 x i32> @llvm.gla.readData.v2i32(i32 1029, i32 -1), !gla.input !11, !gla.precision !47
  store <2 x i32> %uv2y, <2 x i32>* @uv2y_shadow
  %26 = load <2 x i32>* @uv2y_shadow
  %u9 = call <2 x i32> @llvm.gla.uMin.v2i32.v2i32.v2i32(<2 x i32> %25, <2 x i32> %26), !gla.precision !47
  store <2 x i32> %u9, <2 x i32>* %u
  %27 = load <2 x i32>* %u
  %28 = load <4 x i32>* %constructed10
  %29 = extractelement <2 x i32> %27, i32 0, !gla.precision !47
  %30 = insertelement <4 x i32> %28, i32 %29, i32 0, !gla.precision !47
  %31 = extractelement <2 x i32> %27, i32 1, !gla.precision !47
  %32 = insertelement <4 x i32> %30, i32 %31, i32 1, !gla.precision !47
  %33 = insertelement <4 x i32> %32, i32 0, i32 2, !gla.precision !47
  %34 = insertelement <4 x i32> %33, i32 0, i32 3, !gla.precision !47
  %35 = load <4 x i32>* %usum
  %usum11 = add <4 x i32> %35, %34, !gla.precision !47
  store <4 x i32> %usum11, <4 x i32>* %usum
  %uv4y = call <4 x i32> @llvm.gla.readData.v4i32(i32 1030, i32 -1), !gla.input !13, !gla.precision !47
  store <4 x i32> %uv4y, <4 x i32>* @uv4y_shadow
  %36 = load <4 x i32>* @uv4y_shadow
  %uy = call i32 @llvm.gla.readData.i32(i32 1031, i32 -1), !gla.input !15, !gla.precision !47
  store i32 %uy, i32* @uy_shadow
  %37 = load i32* @uy_shadow
  %38 = call <4 x i32> @llvm.gla.uMin.v4i32.v4i32.i32(<4 x i32> %36, i32 %37), !gla.precision !47
  %39 = load <4 x i32>* %usum
  %usum12 = add <4 x i32> %39, %38, !gla.precision !47
  store <4 x i32> %usum12, <4 x i32>* %usum
  %iv3a = call <3 x i32> @llvm.gla.readData.v3i32(i32 1032, i32 -1), !gla.input !17, !gla.precision !47
  store <3 x i32> %iv3a, <3 x i32>* @iv3a_shadow
  %40 = load <3 x i32>* @iv3a_shadow
  %iv3b = call <3 x i32> @llvm.gla.readData.v3i32(i32 1033, i32 -1), !gla.input !19, !gla.precision !47
  store <3 x i32> %iv3b, <3 x i32>* @iv3b_shadow
  %41 = load <3 x i32>* @iv3b_shadow
  %i1713 = call <3 x i32> @llvm.gla.sMax.v3i32.v3i32.v3i32(<3 x i32> %40, <3 x i32> %41), !gla.precision !47
  store <3 x i32> %i1713, <3 x i32>* %i17
  %42 = load <3 x i32>* %i17
  %43 = load <4 x i32>* %constructed14
  %44 = extractelement <3 x i32> %42, i32 0, !gla.precision !47
  %45 = insertelement <4 x i32> %43, i32 %44, i32 0, !gla.precision !47
  %46 = extractelement <3 x i32> %42, i32 1, !gla.precision !47
  %47 = insertelement <4 x i32> %45, i32 %46, i32 1, !gla.precision !47
  %48 = extractelement <3 x i32> %42, i32 2, !gla.precision !47
  %49 = insertelement <4 x i32> %47, i32 %48, i32 2, !gla.precision !47
  %50 = insertelement <4 x i32> %49, i32 0, i32 3, !gla.precision !47
  %51 = load <4 x i32>* %isum
  %isum15 = add <4 x i32> %51, %50, !gla.precision !47
  store <4 x i32> %isum15, <4 x i32>* %isum
  %iv4a16 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a16, <4 x i32>* @iv4a_shadow
  %52 = load <4 x i32>* @iv4a_shadow
  %53 = load i32 addrspace(2)* @imax, !gla.uniform !39
  %54 = call <4 x i32> @llvm.gla.sMax.v4i32.v4i32.i32(<4 x i32> %52, i32 %53), !gla.precision !47
  %55 = load <4 x i32>* %isum
  %isum17 = add <4 x i32> %55, %54, !gla.precision !47
  store <4 x i32> %isum17, <4 x i32>* %isum
  %uv2x18 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1028, i32 -1), !gla.input !9, !gla.precision !47
  store <2 x i32> %uv2x18, <2 x i32>* @uv2x_shadow
  %56 = load <2 x i32>* @uv2x_shadow
  %uv2y19 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1029, i32 -1), !gla.input !11, !gla.precision !47
  store <2 x i32> %uv2y19, <2 x i32>* @uv2y_shadow
  %57 = load <2 x i32>* @uv2y_shadow
  %u1020 = call <2 x i32> @llvm.gla.uMax.v2i32.v2i32.v2i32(<2 x i32> %56, <2 x i32> %57), !gla.precision !47
  store <2 x i32> %u1020, <2 x i32>* %u10
  %uv2x21 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1028, i32 -1), !gla.input !9, !gla.precision !47
  store <2 x i32> %uv2x21, <2 x i32>* @uv2x_shadow
  %58 = load <2 x i32>* @uv2x_shadow
  %uy22 = call i32 @llvm.gla.readData.i32(i32 1031, i32 -1), !gla.input !15, !gla.precision !47
  store i32 %uy22, i32* @uy_shadow
  %59 = load i32* @uy_shadow
  %u1123 = call <2 x i32> @llvm.gla.uMax.v2i32.v2i32.i32(<2 x i32> %58, i32 %59), !gla.precision !47
  store <2 x i32> %u1123, <2 x i32>* %u11
  %60 = load <2 x i32>* %u10
  %61 = load <2 x i32>* %u11
  %62 = load <4 x i32>* %constructed24
  %63 = extractelement <2 x i32> %60, i32 0, !gla.precision !47
  %64 = insertelement <4 x i32> %62, i32 %63, i32 0, !gla.precision !47
  %65 = extractelement <2 x i32> %60, i32 1, !gla.precision !47
  %66 = insertelement <4 x i32> %64, i32 %65, i32 1, !gla.precision !47
  %67 = extractelement <2 x i32> %61, i32 0, !gla.precision !47
  %68 = insertelement <4 x i32> %66, i32 %67, i32 2, !gla.precision !47
  %69 = extractelement <2 x i32> %61, i32 1, !gla.precision !47
  %70 = insertelement <4 x i32> %68, i32 %69, i32 3, !gla.precision !47
  %71 = load <4 x i32>* %usum
  %usum25 = add <4 x i32> %71, %70, !gla.precision !47
  store <4 x i32> %usum25, <4 x i32>* %usum
  %iv4a26 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a26, <4 x i32>* @iv4a_shadow
  %72 = load <4 x i32>* @iv4a_shadow
  %iv4a27 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a27, <4 x i32>* @iv4a_shadow
  %73 = load <4 x i32>* @iv4a_shadow
  %iv4b28 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1027, i32 -1), !gla.input !7, !gla.precision !47
  store <4 x i32> %iv4b28, <4 x i32>* @iv4b_shadow
  %74 = load <4 x i32>* @iv4b_shadow
  %75 = call <4 x i32> @llvm.gla.sClamp.v4i32.v4i32.v4i32.v4i32(<4 x i32> %72, <4 x i32> %73, <4 x i32> %74), !gla.precision !47
  %76 = load <4 x i32>* %isum
  %isum29 = add <4 x i32> %76, %75, !gla.precision !47
  store <4 x i32> %isum29, <4 x i32>* %isum
  %iv4a30 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a30, <4 x i32>* @iv4a_shadow
  %77 = load <4 x i32>* @iv4a_shadow
  %78 = load i32 addrspace(2)* @imin, !gla.uniform !37
  %79 = load i32 addrspace(2)* @imax, !gla.uniform !39
  %80 = call <4 x i32> @llvm.gla.sClamp.v4i32.v4i32.i32.i32(<4 x i32> %77, i32 %78, i32 %79), !gla.precision !47
  %81 = load <4 x i32>* %isum
  %isum31 = add <4 x i32> %81, %80, !gla.precision !47
  store <4 x i32> %isum31, <4 x i32>* %isum
  %uv2x32 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1028, i32 -1), !gla.input !9, !gla.precision !47
  store <2 x i32> %uv2x32, <2 x i32>* @uv2x_shadow
  %82 = load <2 x i32>* @uv2x_shadow
  %uv2y33 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1029, i32 -1), !gla.input !11, !gla.precision !47
  store <2 x i32> %uv2y33, <2 x i32>* @uv2y_shadow
  %83 = load <2 x i32>* @uv2y_shadow
  %uv2c = call <2 x i32> @llvm.gla.readData.v2i32(i32 1034, i32 -1), !gla.input !21, !gla.precision !47
  store <2 x i32> %uv2c, <2 x i32>* @uv2c_shadow
  %84 = load <2 x i32>* @uv2c_shadow
  %u1234 = call <2 x i32> @llvm.gla.uClamp.v2i32.v2i32.v2i32.v2i32(<2 x i32> %82, <2 x i32> %83, <2 x i32> %84), !gla.precision !47
  store <2 x i32> %u1234, <2 x i32>* %u12
  %85 = load <2 x i32>* %u12
  %86 = load <4 x i32>* %constructed35
  %87 = extractelement <2 x i32> %85, i32 0, !gla.precision !47
  %88 = insertelement <4 x i32> %86, i32 %87, i32 0, !gla.precision !47
  %89 = extractelement <2 x i32> %85, i32 1, !gla.precision !47
  %90 = insertelement <4 x i32> %88, i32 %89, i32 1, !gla.precision !47
  %91 = insertelement <4 x i32> %90, i32 0, i32 2, !gla.precision !47
  %92 = insertelement <4 x i32> %91, i32 0, i32 3, !gla.precision !47
  %93 = load <4 x i32>* %usum
  %usum36 = add <4 x i32> %93, %92, !gla.precision !47
  store <4 x i32> %usum36, <4 x i32>* %usum
  %uv4y37 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1030, i32 -1), !gla.input !13, !gla.precision !47
  store <4 x i32> %uv4y37, <4 x i32>* @uv4y_shadow
  %94 = load <4 x i32>* @uv4y_shadow
  %95 = load i32 addrspace(2)* @umin, !gla.uniform !40
  %96 = load i32 addrspace(2)* @umax, !gla.uniform !42
  %97 = call <4 x i32> @llvm.gla.uClamp.v4i32.v4i32.i32.i32(<4 x i32> %94, i32 %95, i32 %96), !gla.precision !47
  %98 = load <4 x i32>* %usum
  %usum38 = add <4 x i32> %98, %97, !gla.precision !47
  store <4 x i32> %usum38, <4 x i32>* %usum
  %x39 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1024, i32 -1, i32 1), !gla.input !1, !gla.precision !47
  store <3 x float> %x39, <3 x float>* @x_shadow
  %99 = load <3 x float>* @x_shadow
  %100 = call { <3 x float>, <3 x float> } @llvm.gla.fModF.v3f32.v3f32.v3f32(<3 x float> %99), !gla.precision !47
  %modfOut40 = extractvalue { <3 x float>, <3 x float> } %100, 1
  store <3 x float> %modfOut40, <3 x float>* %modfOut
  %v1141 = extractvalue { <3 x float>, <3 x float> } %100, 0
  store <3 x float> %v1141, <3 x float>* %v11
  %101 = load <3 x float>* %v11
  %102 = load <3 x float>* %modfOut
  %103 = load <4 x float>* %constructed42
  %104 = extractelement <3 x float> %101, i32 0, !gla.precision !47
  %105 = insertelement <4 x float> %103, float %104, i32 0, !gla.precision !47
  %106 = extractelement <3 x float> %101, i32 1, !gla.precision !47
  %107 = insertelement <4 x float> %105, float %106, i32 1, !gla.precision !47
  %108 = extractelement <3 x float> %101, i32 2, !gla.precision !47
  %109 = insertelement <4 x float> %107, float %108, i32 2, !gla.precision !47
  %110 = extractelement <3 x float> %102, i32 0, !gla.precision !47
  %111 = insertelement <4 x float> %109, float %110, i32 3, !gla.precision !47
  %112 = load <4 x float>* %sum
  %sum43 = fadd <4 x float> %112, %111, !gla.precision !47
  store <4 x float> %sum43, <4 x float>* %sum
  %f = call float @llvm.gla.fReadInterpolant.f32(i32 1035, i32 -1, i32 1), !gla.input !23, !gla.precision !47
  store float %f, float* @f_shadow
  %113 = load float* @f_shadow
  %114 = call float @llvm.gla.fRoundZero.f32.f32(float %113), !gla.precision !47
  %115 = load <4 x float>* %constructed44
  %116 = insertelement <4 x float> undef, float %114, i32 0, !gla.precision !47
  %117 = insertelement <4 x float> %116, float %114, i32 1, !gla.precision !47
  %118 = insertelement <4 x float> %117, float %114, i32 2, !gla.precision !47
  %119 = insertelement <4 x float> %118, float %114, i32 3, !gla.precision !47
  %120 = load <4 x float>* %sum
  %sum45 = fadd <4 x float> %120, %119, !gla.precision !47
  store <4 x float> %sum45, <4 x float>* %sum
  %v2a = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1036, i32 -1, i32 1), !gla.input !25, !gla.precision !47
  store <2 x float> %v2a, <2 x float>* @v2a_shadow
  %121 = load <2 x float>* @v2a_shadow
  %v1246 = call <2 x float> @llvm.gla.fRoundFast.v2f32.v2f32(<2 x float> %121), !gla.precision !47
  store <2 x float> %v1246, <2 x float>* %v12
  %v2a47 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1036, i32 -1, i32 1), !gla.input !25, !gla.precision !47
  store <2 x float> %v2a47, <2 x float>* @v2a_shadow
  %122 = load <2 x float>* @v2a_shadow
  %v1348 = call <2 x float> @llvm.gla.fRoundEven.v2f32.v2f32(<2 x float> %122), !gla.precision !47
  store <2 x float> %v1348, <2 x float>* %v13
  %123 = load <2 x float>* %v12
  %124 = load <2 x float>* %v13
  %125 = load <4 x float>* %constructed49
  %126 = extractelement <2 x float> %123, i32 0, !gla.precision !47
  %127 = insertelement <4 x float> %125, float %126, i32 0, !gla.precision !47
  %128 = extractelement <2 x float> %123, i32 1, !gla.precision !47
  %129 = insertelement <4 x float> %127, float %128, i32 1, !gla.precision !47
  %130 = extractelement <2 x float> %124, i32 0, !gla.precision !47
  %131 = insertelement <4 x float> %129, float %130, i32 2, !gla.precision !47
  %132 = extractelement <2 x float> %124, i32 1, !gla.precision !47
  %133 = insertelement <4 x float> %131, float %132, i32 3, !gla.precision !47
  %134 = load <4 x float>* %sum
  %sum50 = fadd <4 x float> %134, %133, !gla.precision !47
  store <4 x float> %sum50, <4 x float>* %sum
  %v2a51 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1036, i32 -1, i32 1), !gla.input !25, !gla.precision !47
  store <2 x float> %v2a51, <2 x float>* @v2a_shadow
  %135 = load <2 x float>* @v2a_shadow
  %b1052 = call <2 x i1> @llvm.gla.fIsNan.v2i1.v2f32(<2 x float> %135)
  store <2 x i1> %b1052, <2 x i1>* %b10
  %v4 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1037, i32 -1, i32 1), !gla.input !27, !gla.precision !47
  store <4 x float> %v4, <4 x float>* @v4_shadow
  %136 = load <4 x float>* @v4_shadow
  %b1153 = call <4 x i1> @llvm.gla.fIsInf.v4i1.v4f32(<4 x float> %136)
  store <4 x i1> %b1153, <4 x i1>* %b11
  %137 = load <2 x i1>* %b10
  %138 = zext <2 x i1> %137 to <2 x i32>, !gla.precision !47
  %139 = load <4 x i1>* %b11
  %140 = zext <4 x i1> %139 to <4 x i32>, !gla.precision !47
  %141 = load <4 x i32>* %constructed54
  %142 = extractelement <2 x i32> %138, i32 0, !gla.precision !47
  %143 = insertelement <4 x i32> %141, i32 %142, i32 0, !gla.precision !47
  %144 = extractelement <2 x i32> %138, i32 1, !gla.precision !47
  %145 = insertelement <4 x i32> %143, i32 %144, i32 1, !gla.precision !47
  %146 = extractelement <4 x i32> %140, i32 0, !gla.precision !47
  %147 = insertelement <4 x i32> %145, i32 %146, i32 2, !gla.precision !47
  %148 = extractelement <4 x i32> %140, i32 1, !gla.precision !47
  %149 = insertelement <4 x i32> %147, i32 %148, i32 3, !gla.precision !47
  %150 = load <4 x i32>* %isum
  %isum55 = add <4 x i32> %150, %149, !gla.precision !47
  store <4 x i32> %isum55, <4 x i32>* %isum
  %f56 = call float @llvm.gla.fReadInterpolant.f32(i32 1035, i32 -1, i32 1), !gla.input !23, !gla.precision !47
  store float %f56, float* @f_shadow
  %151 = load float* @f_shadow
  %i57 = call i32 @llvm.gla.fFloatBitsToInt.i32.f32(float %151), !gla.precision !47
  store i32 %i57, i32* %i
  %152 = load i32* %i
  %153 = load <4 x i32>* %constructed58
  %154 = insertelement <4 x i32> undef, i32 %152, i32 0, !gla.precision !47
  %155 = insertelement <4 x i32> %154, i32 %152, i32 1, !gla.precision !47
  %156 = insertelement <4 x i32> %155, i32 %152, i32 2, !gla.precision !47
  %157 = insertelement <4 x i32> %156, i32 %152, i32 3, !gla.precision !47
  %158 = load <4 x i32>* %isum
  %isum59 = add <4 x i32> %158, %157, !gla.precision !47
  store <4 x i32> %isum59, <4 x i32>* %isum
  %v460 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1037, i32 -1, i32 1), !gla.input !27, !gla.precision !47
  store <4 x float> %v460, <4 x float>* @v4_shadow
  %159 = load <4 x float>* @v4_shadow
  %160 = call <4 x i32> @llvm.gla.fFloatBitsToInt.v4i32.v4f32(<4 x float> %159), !gla.precision !47
  %161 = load <4 x i32>* %usum
  %usum61 = add <4 x i32> %161, %160, !gla.precision !47
  store <4 x i32> %usum61, <4 x i32>* %usum
  %iv4a62 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  store <4 x i32> %iv4a62, <4 x i32>* @iv4a_shadow
  %162 = load <4 x i32>* @iv4a_shadow
  %163 = call <4 x float> @llvm.gla.fIntBitsTofloat.v4f32.v4i32(<4 x i32> %162), !gla.precision !47
  %164 = load <4 x float>* %sum
  %sum63 = fadd <4 x float> %164, %163, !gla.precision !47
  store <4 x float> %sum63, <4 x float>* %sum
  %uv2c64 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1034, i32 -1), !gla.input !21, !gla.precision !47
  store <2 x i32> %uv2c64, <2 x i32>* @uv2c_shadow
  %165 = load <2 x i32>* @uv2c_shadow
  %v1565 = call <2 x float> @llvm.gla.fIntBitsTofloat.v2f32.v2i32(<2 x i32> %165), !gla.precision !47
  store <2 x float> %v1565, <2 x float>* %v15
  %166 = load <2 x float>* %v15
  %167 = load <4 x float>* %constructed66
  %168 = extractelement <2 x float> %166, i32 0, !gla.precision !47
  %169 = insertelement <4 x float> %167, float %168, i32 0, !gla.precision !47
  %170 = extractelement <2 x float> %166, i32 1, !gla.precision !47
  %171 = insertelement <4 x float> %169, float %170, i32 1, !gla.precision !47
  %172 = insertelement <4 x float> %171, float 0.000000e+00, i32 2, !gla.precision !47
  %173 = insertelement <4 x float> %172, float 0.000000e+00, i32 3, !gla.precision !47
  %174 = load <4 x float>* %sum
  %sum67 = fadd <4 x float> %174, %173, !gla.precision !47
  store <4 x float> %sum67, <4 x float>* %sum
  %v2a68 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1036, i32 -1, i32 1), !gla.input !25, !gla.precision !47
  store <2 x float> %v2a68, <2 x float>* @v2a_shadow
  %175 = load <2 x float>* @v2a_shadow
  %u1969 = call i32 @llvm.gla.fPackSnorm2x16.i32.v2f32(<2 x float> %175), !gla.precision !48
  store i32 %u1969, i32* %u19
  %uy70 = call i32 @llvm.gla.readData.i32(i32 1031, i32 -1), !gla.input !15, !gla.precision !47
  store i32 %uy70, i32* @uy_shadow
  %176 = load i32* @uy_shadow
  %v2071 = call <2 x float> @llvm.gla.fUnpackSnorm2x16.v2f32.i32(i32 %176), !gla.precision !48
  store <2 x float> %v2071, <2 x float>* %v20
  %v2a72 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1036, i32 -1, i32 1), !gla.input !25, !gla.precision !47
  store <2 x float> %v2a72, <2 x float>* @v2a_shadow
  %177 = load <2 x float>* @v2a_shadow
  %u1573 = call i32 @llvm.gla.fPackUnorm2x16.i32.v2f32(<2 x float> %177), !gla.precision !48
  store i32 %u1573, i32* %u15
  %uy74 = call i32 @llvm.gla.readData.i32(i32 1031, i32 -1), !gla.input !15, !gla.precision !47
  store i32 %uy74, i32* @uy_shadow
  %178 = load i32* @uy_shadow
  %v1675 = call <2 x float> @llvm.gla.fUnpackUnorm2x16.v2f32.i32(i32 %178), !gla.precision !48
  store <2 x float> %v1675, <2 x float>* %v16
  %v2b = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1038, i32 -1, i32 1), !gla.input !29, !gla.precision !47
  store <2 x float> %v2b, <2 x float>* @v2b_shadow
  %179 = load <2 x float>* @v2b_shadow
  %u1776 = call i32 @llvm.gla.fPackHalf2x16.i32.v2f32(<2 x float> %179), !gla.precision !48
  store i32 %u1776, i32* %u17
  %uy77 = call i32 @llvm.gla.readData.i32(i32 1031, i32 -1), !gla.input !15, !gla.precision !47
  store i32 %uy77, i32* @uy_shadow
  %180 = load i32* @uy_shadow
  %v1878 = call <2 x float> @llvm.gla.fUnpackHalf2x16.v2f32.i32(i32 %180), !gla.precision !47
  store <2 x float> %v1878, <2 x float>* %v18
  %181 = load i32* %u19
  %182 = load i32* %u15
  %183 = load i32* %u17
  %184 = load <4 x i32>* %constructed79
  %185 = insertelement <4 x i32> %184, i32 %181, i32 0, !gla.precision !47
  %186 = insertelement <4 x i32> %185, i32 %182, i32 1, !gla.precision !47
  %187 = insertelement <4 x i32> %186, i32 %183, i32 2, !gla.precision !47
  %188 = insertelement <4 x i32> %187, i32 0, i32 3, !gla.precision !47
  %189 = load <4 x i32>* %usum
  %usum80 = add <4 x i32> %189, %188, !gla.precision !47
  store <4 x i32> %usum80, <4 x i32>* %usum
  %190 = load <2 x float>* %v20
  %191 = load <2 x float>* %v16
  %192 = load <4 x float>* %constructed81
  %193 = extractelement <2 x float> %190, i32 0, !gla.precision !47
  %194 = insertelement <4 x float> %192, float %193, i32 0, !gla.precision !47
  %195 = extractelement <2 x float> %190, i32 1, !gla.precision !47
  %196 = insertelement <4 x float> %194, float %195, i32 1, !gla.precision !47
  %197 = extractelement <2 x float> %191, i32 0, !gla.precision !47
  %198 = insertelement <4 x float> %196, float %197, i32 2, !gla.precision !47
  %199 = extractelement <2 x float> %191, i32 1, !gla.precision !47
  %200 = insertelement <4 x float> %198, float %199, i32 3, !gla.precision !47
  %201 = load <4 x float>* %sum
  %sum82 = fadd <4 x float> %201, %200, !gla.precision !47
  store <4 x float> %sum82, <4 x float>* %sum
  %202 = load <2 x float>* %v18
  %203 = load <4 x float>* %constructed83
  %204 = extractelement <2 x float> %202, i32 0, !gla.precision !47
  %205 = insertelement <4 x float> %203, float %204, i32 0, !gla.precision !47
  %206 = extractelement <2 x float> %202, i32 1, !gla.precision !47
  %207 = insertelement <4 x float> %205, float %206, i32 1, !gla.precision !47
  %208 = insertelement <4 x float> %207, float 0.000000e+00, i32 2, !gla.precision !47
  %209 = insertelement <4 x float> %208, float 0.000000e+00, i32 3, !gla.precision !47
  %210 = load <4 x float>* %sum
  %sum84 = fadd <4 x float> %210, %209, !gla.precision !47
  store <4 x float> %sum84, <4 x float>* %sum
  %211 = load <4 x float>* %sum
  %212 = load <4 x i32>* %isum
  %213 = sitofp <4 x i32> %212 to <4 x float>, !gla.precision !47
  %214 = fadd <4 x float> %211, %213, !gla.precision !47
  %215 = load <4 x i32>* %usum
  %216 = uitofp <4 x i32> %215 to <4 x float>, !gla.precision !47
  %result_shadow = fadd <4 x float> %214, %216, !gla.precision !47
  store <4 x float> %result_shadow, <4 x float>* @result_shadow
  %gl_FragCoord = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1040, i32 -1), !gla.input !31, !gla.precision !48
  store <4 x float> %gl_FragCoord, <4 x float>* @FragCoord_shadow
  %217 = load <4 x float>* @FragCoord_shadow
  %gl_PointCoord = call <2 x float> @llvm.gla.fReadData.v2f32(i32 1041, i32 -1), !gla.input !33, !gla.precision !47
  store <2 x float> %gl_PointCoord, <2 x float>* @PointCoord_shadow
  %218 = load <2 x float>* @PointCoord_shadow
  %gl_PointCoord85 = call <2 x float> @llvm.gla.fReadData.v2f32(i32 1041, i32 -1), !gla.input !33, !gla.precision !47
  store <2 x float> %gl_PointCoord85, <2 x float>* @PointCoord_shadow
  %219 = load <2 x float>* @PointCoord_shadow
  %220 = fmul <2 x float> <float 2.000000e+00, float 2.000000e+00>, %219, !gla.precision !47
  %221 = load <4 x float>* %constructed86
  %222 = extractelement <2 x float> %218, i32 0, !gla.precision !48
  %223 = insertelement <4 x float> %221, float %222, i32 0, !gla.precision !48
  %224 = extractelement <2 x float> %218, i32 1, !gla.precision !48
  %225 = insertelement <4 x float> %223, float %224, i32 1, !gla.precision !48
  %226 = extractelement <2 x float> %220, i32 0, !gla.precision !48
  %227 = insertelement <4 x float> %225, float %226, i32 2, !gla.precision !48
  %228 = extractelement <2 x float> %220, i32 1, !gla.precision !48
  %229 = insertelement <4 x float> %227, float %228, i32 3, !gla.precision !48
  %230 = fadd <4 x float> %217, %229, !gla.precision !48
  %231 = load <4 x float>* @result_shadow
  %result_shadow87 = fadd <4 x float> %231, %230, !gla.precision !48
  store <4 x float> %result_shadow87, <4 x float>* @result_shadow
  %f88 = call float @llvm.gla.fReadInterpolant.f32(i32 1035, i32 -1, i32 1), !gla.input !23, !gla.precision !47
  store float %f88, float* @f_shadow
  %FragDepth_shadow = load float* @f_shadow
  store float %FragDepth_shadow, float* @FragDepth_shadow
  %232 = load float* @FragDepth_shadow
  %FragDepth_shadow89 = fadd float %232, 0x3FB99999A0000000, !gla.precision !48
  store float %FragDepth_shadow89, float* @FragDepth_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %233 = load <4 x float>* @result_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1039, i32 -1, <4 x float> %233), !gla.output !43
  %234 = load float* @FragDepth_shadow
  call void @llvm.gla.fWriteData.f32(i32 1042, i32 -1, float %234), !gla.output !45
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fbMix.v3f32.v3f32.v3f32.v3i1(<3 x float>, <3 x float>, <3 x i1>) #0

; Function Attrs: nounwind readonly
declare <4 x i32> @llvm.gla.readData.v4i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.abs.v4i32.v4i32(<4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sign.v4i32.v4i32(<4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sMin.v4i32.v4i32.v4i32(<4 x i32>, <4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sMin.v4i32.v4i32.i32(<4 x i32>, i32) #0

; Function Attrs: nounwind readonly
declare <2 x i32> @llvm.gla.readData.v2i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.uMin.v2i32.v2i32.v2i32(<2 x i32>, <2 x i32>) #0

; Function Attrs: nounwind readonly
declare i32 @llvm.gla.readData.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.uMin.v4i32.v4i32.i32(<4 x i32>, i32) #0

; Function Attrs: nounwind readonly
declare <3 x i32> @llvm.gla.readData.v3i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.sMax.v3i32.v3i32.v3i32(<3 x i32>, <3 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sMax.v4i32.v4i32.i32(<4 x i32>, i32) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.uMax.v2i32.v2i32.v2i32(<2 x i32>, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.uMax.v2i32.v2i32.i32(<2 x i32>, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sClamp.v4i32.v4i32.v4i32.v4i32(<4 x i32>, <4 x i32>, <4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sClamp.v4i32.v4i32.i32.i32(<4 x i32>, i32, i32) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.uClamp.v2i32.v2i32.v2i32.v2i32(<2 x i32>, <2 x i32>, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.uClamp.v4i32.v4i32.i32.i32(<4 x i32>, i32, i32) #0

; Function Attrs: nounwind readnone
declare { <3 x float>, <3 x float> } @llvm.gla.fModF.v3f32.v3f32.v3f32(<3 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fRoundZero.f32.f32(float) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fRoundFast.v2f32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fRoundEven.v2f32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x i1> @llvm.gla.fIsNan.v2i1.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i1> @llvm.gla.fIsInf.v4i1.v4f32(<4 x float>) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fFloatBitsToInt.i32.f32(float) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.fFloatBitsToInt.v4i32.v4f32(<4 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fIntBitsTofloat.v4f32.v4i32(<4 x i32>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fIntBitsTofloat.v2f32.v2i32(<2 x i32>) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fPackSnorm2x16.i32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fUnpackSnorm2x16.v2f32.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fPackUnorm2x16.i32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fUnpackUnorm2x16.v2f32.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fPackHalf2x16.i32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fUnpackHalf2x16.v2f32.i32(i32) #0

; Function Attrs: nounwind readonly
declare <4 x float> @llvm.gla.fReadData.v4f32(i32, i32) #1

; Function Attrs: nounwind readonly
declare <2 x float> @llvm.gla.fReadData.v2f32(i32, i32) #1

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #2

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.f32(i32, i32, float) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!gla.entrypoint = !{!0}
!gla.inputs = !{!1, !3, !5, !7, !9, !11, !13, !15, !17, !19, !21, !23, !25, !27, !29, !31, !33}
!gla.uniforms = !{!35, !37, !39, !40, !42}
!gla.outputs = !{!43, !45}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"x", i32 1, <3 x float>* @x_shadow_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 2, i32 1024, null, i32 1}
!3 = metadata !{metadata !"y", i32 1, <3 x float>* @y_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 2, i32 1025, null, i32 1}
!5 = metadata !{metadata !"iv4a", i32 1, <4 x i32>* @iv4a_shadow_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 2, i32 1026, null, i32 0}
!7 = metadata !{metadata !"iv4b", i32 1, <4 x i32>* @iv4b_shadow_typeProxy, metadata !8}
!8 = metadata !{i32 0, i32 2, i32 1027, null, i32 0}
!9 = metadata !{metadata !"uv2x", i32 1, <2 x i32>* @uv2x_shadow_typeProxy, metadata !10}
!10 = metadata !{i32 1, i32 2, i32 1028, null, i32 0}
!11 = metadata !{metadata !"uv2y", i32 1, <2 x i32>* @uv2y_shadow_typeProxy, metadata !12}
!12 = metadata !{i32 1, i32 2, i32 1029, null, i32 0}
!13 = metadata !{metadata !"uv4y", i32 1, <4 x i32>* @uv4y_shadow_typeProxy, metadata !14}
!14 = metadata !{i32 1, i32 2, i32 1030, null, i32 0}
!15 = metadata !{metadata !"uy", i32 1, i32* @uy_shadow_typeProxy, metadata !16}
!16 = metadata !{i32 1, i32 2, i32 1031, null, i32 0}
!17 = metadata !{metadata !"iv3a", i32 1, <3 x i32>* @iv3a_shadow_typeProxy, metadata !18}
!18 = metadata !{i32 0, i32 2, i32 1032, null, i32 0}
!19 = metadata !{metadata !"iv3b", i32 1, <3 x i32>* @iv3b_shadow_typeProxy, metadata !20}
!20 = metadata !{i32 0, i32 2, i32 1033, null, i32 0}
!21 = metadata !{metadata !"uv2c", i32 1, <2 x i32>* @uv2c_shadow_typeProxy, metadata !22}
!22 = metadata !{i32 1, i32 2, i32 1034, null, i32 0}
!23 = metadata !{metadata !"f", i32 1, float* @f_shadow_typeProxy, metadata !24}
!24 = metadata !{i32 0, i32 2, i32 1035, null, i32 1}
!25 = metadata !{metadata !"v2a", i32 1, <2 x float>* @v2a_shadow_typeProxy, metadata !26}
!26 = metadata !{i32 0, i32 2, i32 1036, null, i32 1}
!27 = metadata !{metadata !"v4", i32 1, <4 x float>* @v4_shadow_typeProxy, metadata !28}
!28 = metadata !{i32 0, i32 2, i32 1037, null, i32 1}
!29 = metadata !{metadata !"v2b", i32 1, <2 x float>* @v2b_shadow_typeProxy, metadata !30}
!30 = metadata !{i32 0, i32 2, i32 1038, null, i32 1}
!31 = metadata !{metadata !"gl_FragCoord", i32 5, <4 x float>* @FragCoord_shadow_typeProxy, metadata !32}
!32 = metadata !{i32 0, i32 3, i32 1040, null, i32 0}
!33 = metadata !{metadata !"gl_PointCoord", i32 6, <2 x float>* @PointCoord_shadow_typeProxy, metadata !34}
!34 = metadata !{i32 0, i32 2, i32 1041, null, i32 0}
!35 = metadata !{metadata !"bv", i32 12, <3 x i1>* @bv_typeProxy, metadata !36}
!36 = metadata !{i32 0, i32 0, i32 1024, null}
!37 = metadata !{metadata !"imin", i32 12, i32* @imin_typeProxy, metadata !38}
!38 = metadata !{i32 0, i32 2, i32 1024, null}
!39 = metadata !{metadata !"imax", i32 12, i32* @imax_typeProxy, metadata !38}
!40 = metadata !{metadata !"umin", i32 12, i32* @umin_typeProxy, metadata !41}
!41 = metadata !{i32 1, i32 2, i32 1024, null}
!42 = metadata !{metadata !"umax", i32 12, i32* @umax_typeProxy, metadata !41}
!43 = metadata !{metadata !"result", i32 7, <4 x float>* @result_shadow_typeProxy, metadata !44}
!44 = metadata !{i32 0, i32 2, i32 1039, null, i32 0}
!45 = metadata !{metadata !"gl_FragDepth", i32 11, float* @FragDepth_shadow_typeProxy, metadata !46}
!46 = metadata !{i32 0, i32 3, i32 1042, null, i32 0}
!47 = metadata !{i32 2}
!48 = metadata !{i32 3}


Bottom IR:
; ModuleID = 'Glslang'

@bv = external addrspace(2) constant <3 x i1>
@imin = external addrspace(2) constant i32
@imax = external addrspace(2) constant i32
@umin = external addrspace(2) constant i32
@umax = external addrspace(2) constant i32

define fastcc void @main() {
entry:
  %x = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1024, i32 -1, i32 1), !gla.input !1, !gla.precision !47
  %y = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1025, i32 -1, i32 1), !gla.input !3, !gla.precision !47
  %0 = load <3 x i1> addrspace(2)* @bv, align 4, !gla.uniform !35
  %1 = call <3 x float> @llvm.gla.fbMix.v3f32.v3f32.v3f32.v3i1(<3 x float> %x, <3 x float> %y, <3 x i1> %0), !gla.precision !47
  %uv2x = call <2 x i32> @llvm.gla.readData.v2i32(i32 1028, i32 -1), !gla.input !9, !gla.precision !47
  %uv2y = call <2 x i32> @llvm.gla.readData.v2i32(i32 1029, i32 -1), !gla.input !11, !gla.precision !47
  %u9 = call <2 x i32> @llvm.gla.uMin.v2i32.v2i32.v2i32(<2 x i32> %uv2x, <2 x i32> %uv2y), !gla.precision !47
  %iv3a = call <3 x i32> @llvm.gla.readData.v3i32(i32 1032, i32 -1), !gla.input !17, !gla.precision !47
  %iv3b = call <3 x i32> @llvm.gla.readData.v3i32(i32 1033, i32 -1), !gla.input !19, !gla.precision !47
  %i1713 = call <3 x i32> @llvm.gla.sMax.v3i32.v3i32.v3i32(<3 x i32> %iv3a, <3 x i32> %iv3b), !gla.precision !47
  %u1020 = call <2 x i32> @llvm.gla.uMax.v2i32.v2i32.v2i32(<2 x i32> %uv2x, <2 x i32> %uv2y), !gla.precision !47
  %uy22 = call i32 @llvm.gla.readData.i32(i32 1031, i32 -1), !gla.input !15, !gla.precision !47
  %u1123 = call <2 x i32> @llvm.gla.uMax.v2i32.v2i32.i32(<2 x i32> %uv2x, i32 %uy22), !gla.precision !47
  %uv2c = call <2 x i32> @llvm.gla.readData.v2i32(i32 1034, i32 -1), !gla.input !21, !gla.precision !47
  %u1234 = call <2 x i32> @llvm.gla.uClamp.v2i32.v2i32.v2i32.v2i32(<2 x i32> %uv2x, <2 x i32> %uv2y, <2 x i32> %uv2c), !gla.precision !47
  %2 = call { <3 x float>, <3 x float> } @llvm.gla.fModF.v3f32.v3f32.v3f32(<3 x float> %x), !gla.precision !47
  %v1141 = extractvalue { <3 x float>, <3 x float> } %2, 0
  %f = call float @llvm.gla.fReadInterpolant.f32(i32 1035, i32 -1, i32 1), !gla.input !23, !gla.precision !47
  %3 = call float @llvm.gla.fRoundZero.f32.f32(float %f), !gla.precision !47
  %4 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %3, <4 x i32> zeroinitializer)
  %v2a = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1036, i32 -1, i32 1), !gla.input !25, !gla.precision !47
  %v1246 = call <2 x float> @llvm.gla.fRoundFast.v2f32.v2f32(<2 x float> %v2a), !gla.precision !47
  %v1348 = call <2 x float> @llvm.gla.fRoundEven.v2f32.v2f32(<2 x float> %v2a), !gla.precision !47
  %b1052 = call <2 x i1> @llvm.gla.fIsNan.v2i1.v2f32(<2 x float> %v2a)
  %5 = zext <2 x i1> %b1052 to <2 x i32>, !gla.precision !47
  %i57 = call i32 @llvm.gla.fFloatBitsToInt.i32.f32(float %f), !gla.precision !47
  %6 = call <4 x i32> @llvm.gla.swizzle.v4i32.i32.v4i32(i32 %i57, <4 x i32> zeroinitializer)
  %v1565 = call <2 x float> @llvm.gla.fIntBitsTofloat.v2f32.v2i32(<2 x i32> %uv2c), !gla.precision !47
  %v2071 = call <2 x float> @llvm.gla.fUnpackSnorm2x16.v2f32.i32(i32 %uy22), !gla.precision !48
  %v1675 = call <2 x float> @llvm.gla.fUnpackUnorm2x16.v2f32.i32(i32 %uy22), !gla.precision !48
  %v1878 = call <2 x float> @llvm.gla.fUnpackHalf2x16.v2f32.i32(i32 %uy22), !gla.precision !47
  %gl_PointCoord = call <2 x float> @llvm.gla.fReadData.v2f32(i32 1041, i32 -1), !gla.input !33, !gla.precision !47
  %7 = fmul <2 x float> %gl_PointCoord, <float 2.000000e+00, float 2.000000e+00>, !gla.precision !47
  %iv4a3 = call <4 x i32> @llvm.gla.readData.v4i32(i32 1026, i32 -1), !gla.input !5, !gla.precision !47
  %iv4b = call <4 x i32> @llvm.gla.readData.v4i32(i32 1027, i32 -1), !gla.input !7, !gla.precision !47
  %8 = call <4 x i32> @llvm.gla.sign.v4i32.v4i32(<4 x i32> %iv4a3), !gla.precision !47
  %isum2 = call <4 x i32> @llvm.gla.abs.v4i32.v4i32(<4 x i32> %iv4a3), !gla.precision !47
  %modfOut40 = extractvalue { <3 x float>, <3 x float> } %2, 1
  %9 = load i32 addrspace(2)* @imin, align 4, !gla.uniform !37
  %10 = call <4 x i32> @llvm.gla.sMin.v4i32.v4i32.v4i32(<4 x i32> %iv4a3, <4 x i32> %iv4b), !gla.precision !47
  %isum4 = add <4 x i32> %isum2, %8, !gla.precision !47
  %11 = call <4 x i32> @llvm.gla.sMin.v4i32.v4i32.i32(<4 x i32> %iv4a3, i32 %9), !gla.precision !47
  %isum6 = add <4 x i32> %isum4, %10, !gla.precision !47
  %12 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.v3f32(<4 x float> undef, i32 15, <3 x float> %v1141, i32 0, <3 x float> %v1141, i32 1, <3 x float> %v1141, i32 2, <3 x float> %modfOut40, i32 0)
  %13 = load i32 addrspace(2)* @imax, align 4, !gla.uniform !39
  %14 = call <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v3i32.v3i32.v3i32.i32(<4 x i32> undef, i32 15, <3 x i32> %i1713, i32 0, <3 x i32> %i1713, i32 1, <3 x i32> %i1713, i32 2, i32 0, i32 0)
  %uv4y = call <4 x i32> @llvm.gla.readData.v4i32(i32 1030, i32 -1), !gla.input !13, !gla.precision !47
  %isum8 = add <4 x i32> %isum6, %11, !gla.precision !47
  %15 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float> undef, i32 15, <3 x float> %1, i32 0, <3 x float> %1, i32 1, <3 x float> %1, i32 2, float 0.000000e+00, i32 0)
  %v4 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1037, i32 -1, i32 1), !gla.input !27, !gla.precision !47
  %sum43 = fadd <4 x float> %15, %12, !gla.precision !47
  %16 = call <4 x i32> @llvm.gla.sMax.v4i32.v4i32.i32(<4 x i32> %iv4a3, i32 %13), !gla.precision !47
  %isum15 = add <4 x i32> %isum8, %14, !gla.precision !47
  %17 = call <4 x i32> @llvm.gla.uMin.v4i32.v4i32.i32(<4 x i32> %uv4y, i32 %uy22), !gla.precision !47
  %18 = call <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v2i32.v2i32.i32.i32(<4 x i32> undef, i32 15, <2 x i32> %u9, i32 0, <2 x i32> %u9, i32 1, i32 0, i32 0, i32 0, i32 0)
  %u1969 = call i32 @llvm.gla.fPackSnorm2x16.i32.v2f32(<2 x float> %v2a), !gla.precision !48
  %b1153 = call <4 x i1> @llvm.gla.fIsInf.v4i1.v4f32(<4 x float> %v4)
  %19 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.v2f32.v2f32(<4 x float> undef, i32 15, <2 x float> %v1246, i32 0, <2 x float> %v1246, i32 1, <2 x float> %v1348, i32 0, <2 x float> %v1348, i32 1)
  %sum45 = fadd <4 x float> %4, %sum43, !gla.precision !47
  %20 = call <4 x i32> @llvm.gla.sClamp.v4i32.v4i32.v4i32.v4i32(<4 x i32> %iv4a3, <4 x i32> %iv4a3, <4 x i32> %iv4b), !gla.precision !47
  %21 = call <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v2i32.v2i32.v2i32.v2i32(<4 x i32> undef, i32 15, <2 x i32> %u1020, i32 0, <2 x i32> %u1020, i32 1, <2 x i32> %u1123, i32 0, <2 x i32> %u1123, i32 1)
  %isum17 = add <4 x i32> %isum15, %16, !gla.precision !47
  %usum12 = add <4 x i32> %18, %17, !gla.precision !47
  %v2b = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1038, i32 -1, i32 1), !gla.input !29, !gla.precision !47
  %u1573 = call i32 @llvm.gla.fPackUnorm2x16.i32.v2f32(<2 x float> %v2a), !gla.precision !48
  %22 = call <4 x float> @llvm.gla.fIntBitsTofloat.v4f32.v4i32(<4 x i32> %iv4a3), !gla.precision !47
  %23 = zext <4 x i1> %b1153 to <4 x i32>, !gla.precision !47
  %sum50 = fadd <4 x float> %sum45, %19, !gla.precision !47
  %24 = load i32 addrspace(2)* @umax, align 4, !gla.uniform !42
  %25 = load i32 addrspace(2)* @umin, align 4, !gla.uniform !40
  %26 = call <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v2i32.v2i32.i32.i32(<4 x i32> undef, i32 15, <2 x i32> %u1234, i32 0, <2 x i32> %u1234, i32 1, i32 0, i32 0, i32 0, i32 0)
  %27 = call <4 x i32> @llvm.gla.sClamp.v4i32.v4i32.i32.i32(<4 x i32> %iv4a3, i32 %9, i32 %13), !gla.precision !47
  %isum29 = add <4 x i32> %isum17, %20, !gla.precision !47
  %usum25 = add <4 x i32> %usum12, %21, !gla.precision !47
  %u1776 = call i32 @llvm.gla.fPackHalf2x16.i32.v2f32(<2 x float> %v2b), !gla.precision !48
  %28 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.f32.f32(<4 x float> undef, i32 15, <2 x float> %v1565, i32 0, <2 x float> %v1565, i32 1, float 0.000000e+00, i32 0, float 0.000000e+00, i32 0)
  %sum63 = fadd <4 x float> %sum50, %22, !gla.precision !47
  %29 = call <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v2i32.v2i32.v4i32.v4i32(<4 x i32> undef, i32 15, <2 x i32> %5, i32 0, <2 x i32> %5, i32 1, <4 x i32> %23, i32 0, <4 x i32> %23, i32 1)
  %30 = call <4 x i32> @llvm.gla.uClamp.v4i32.v4i32.i32.i32(<4 x i32> %uv4y, i32 %25, i32 %24), !gla.precision !47
  %usum36 = add <4 x i32> %usum25, %26, !gla.precision !47
  %isum31 = add <4 x i32> %isum29, %27, !gla.precision !47
  %31 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.v2f32.v2f32(<4 x float> undef, i32 15, <2 x float> %v2071, i32 0, <2 x float> %v2071, i32 1, <2 x float> %v1675, i32 0, <2 x float> %v1675, i32 1)
  %sum67 = fadd <4 x float> %28, %sum63, !gla.precision !47
  %32 = call <4 x i32> @llvm.gla.fFloatBitsToInt.v4i32.v4f32(<4 x float> %v4), !gla.precision !47
  %isum55 = add <4 x i32> %isum31, %29, !gla.precision !47
  %usum38 = add <4 x i32> %usum36, %30, !gla.precision !47
  %33 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.f32.f32(<4 x float> undef, i32 15, <2 x float> %v1878, i32 0, <2 x float> %v1878, i32 1, float 0.000000e+00, i32 0, float 0.000000e+00, i32 0)
  %sum82 = fadd <4 x float> %31, %sum67, !gla.precision !47
  %34 = call <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.i32.i32.i32.i32(<4 x i32> undef, i32 15, i32 %u1969, i32 0, i32 %u1573, i32 0, i32 %u1776, i32 0, i32 0, i32 0)
  %usum61 = add <4 x i32> %usum38, %32, !gla.precision !47
  %isum59 = add <4 x i32> %isum55, %6, !gla.precision !47
  %35 = sitofp <4 x i32> %isum59 to <4 x float>, !gla.precision !47
  %sum84 = fadd <4 x float> %33, %sum82, !gla.precision !47
  %usum80 = add <4 x i32> %usum61, %34, !gla.precision !47
  %36 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.v2f32.v2f32(<4 x float> undef, i32 15, <2 x float> %gl_PointCoord, i32 0, <2 x float> %gl_PointCoord, i32 1, <2 x float> %7, i32 0, <2 x float> %7, i32 1)
  %gl_FragCoord = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1040, i32 -1), !gla.input !31, !gla.precision !48
  %37 = uitofp <4 x i32> %usum80 to <4 x float>, !gla.precision !47
  %38 = fadd <4 x float> %sum84, %35, !gla.precision !47
  %39 = fadd <4 x float> %36, %gl_FragCoord, !gla.precision !48
  %result_shadow = fadd <4 x float> %38, %37, !gla.precision !47
  %FragDepth_shadow89 = fadd float %f, 0x3FB99999A0000000, !gla.precision !48
  %result_shadow87 = fadd <4 x float> %39, %result_shadow, !gla.precision !48
  call void @llvm.gla.fWriteData.v4f32(i32 1039, i32 -1, <4 x float> %result_shadow87), !gla.output !43
  call void @llvm.gla.fWriteData.f32(i32 1042, i32 -1, float %FragDepth_shadow89), !gla.output !45
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fbMix.v3f32.v3f32.v3f32.v3i1(<3 x float>, <3 x float>, <3 x i1>) #0

; Function Attrs: nounwind readonly
declare <4 x i32> @llvm.gla.readData.v4i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.abs.v4i32.v4i32(<4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sign.v4i32.v4i32(<4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sMin.v4i32.v4i32.v4i32(<4 x i32>, <4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sMin.v4i32.v4i32.i32(<4 x i32>, i32) #0

; Function Attrs: nounwind readonly
declare <2 x i32> @llvm.gla.readData.v2i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.uMin.v2i32.v2i32.v2i32(<2 x i32>, <2 x i32>) #0

; Function Attrs: nounwind readonly
declare i32 @llvm.gla.readData.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.uMin.v4i32.v4i32.i32(<4 x i32>, i32) #0

; Function Attrs: nounwind readonly
declare <3 x i32> @llvm.gla.readData.v3i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.sMax.v3i32.v3i32.v3i32(<3 x i32>, <3 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sMax.v4i32.v4i32.i32(<4 x i32>, i32) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.uMax.v2i32.v2i32.v2i32(<2 x i32>, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.uMax.v2i32.v2i32.i32(<2 x i32>, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sClamp.v4i32.v4i32.v4i32.v4i32(<4 x i32>, <4 x i32>, <4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.sClamp.v4i32.v4i32.i32.i32(<4 x i32>, i32, i32) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.uClamp.v2i32.v2i32.v2i32.v2i32(<2 x i32>, <2 x i32>, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.uClamp.v4i32.v4i32.i32.i32(<4 x i32>, i32, i32) #0

; Function Attrs: nounwind readnone
declare { <3 x float>, <3 x float> } @llvm.gla.fModF.v3f32.v3f32.v3f32(<3 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fRoundZero.f32.f32(float) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fRoundFast.v2f32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fRoundEven.v2f32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x i1> @llvm.gla.fIsNan.v2i1.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i1> @llvm.gla.fIsInf.v4i1.v4f32(<4 x float>) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fFloatBitsToInt.i32.f32(float) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.fFloatBitsToInt.v4i32.v4f32(<4 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fIntBitsTofloat.v4f32.v4i32(<4 x i32>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fIntBitsTofloat.v2f32.v2i32(<2 x i32>) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fPackSnorm2x16.i32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fUnpackSnorm2x16.v2f32.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fPackUnorm2x16.i32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fUnpackUnorm2x16.v2f32.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fPackHalf2x16.i32.v2f32(<2 x float>) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fUnpackHalf2x16.v2f32.i32(i32) #0

; Function Attrs: nounwind readonly
declare <4 x float> @llvm.gla.fReadData.v4f32(i32, i32) #1

; Function Attrs: nounwind readonly
declare <2 x float> @llvm.gla.fReadData.v2f32(i32, i32) #1

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #2

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.f32(i32, i32, float) #2

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.v2f32.v2f32(<4 x float>, i32, <2 x float>, i32, <2 x float>, i32, <2 x float>, i32, <2 x float>, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.i32.i32.i32.i32(<4 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.f32.f32(<4 x float>, i32, <2 x float>, i32, <2 x float>, i32, float, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v2i32.v2i32.v4i32.v4i32(<4 x i32>, i32, <2 x i32>, i32, <2 x i32>, i32, <4 x i32>, i32, <4 x i32>, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v2i32.v2i32.i32.i32(<4 x i32>, i32, <2 x i32>, i32, <2 x i32>, i32, i32, i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v2i32.v2i32.v2i32.v2i32(<4 x i32>, i32, <2 x i32>, i32, <2 x i32>, i32, <2 x i32>, i32, <2 x i32>, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.multiInsert.v4i32.v4i32.v3i32.v3i32.v3i32.i32(<4 x i32>, i32, <3 x i32>, i32, <3 x i32>, i32, <3 x i32>, i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.v3f32(<4 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.swizzle.v4i32.i32.v4i32(i32, <4 x i32>) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!gla.entrypoint = !{!0}
!gla.inputs = !{!1, !3, !5, !7, !9, !11, !13, !15, !17, !19, !21, !23, !25, !27, !29, !31, !33}
!gla.uniforms = !{!35, !37, !39, !40, !42}
!gla.outputs = !{!43, !45}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"x", i32 1, <3 x float>* @x_shadow_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 2, i32 1024, null, i32 1}
!3 = metadata !{metadata !"y", i32 1, <3 x float>* @y_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 2, i32 1025, null, i32 1}
!5 = metadata !{metadata !"iv4a", i32 1, <4 x i32>* @iv4a_shadow_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 2, i32 1026, null, i32 0}
!7 = metadata !{metadata !"iv4b", i32 1, <4 x i32>* @iv4b_shadow_typeProxy, metadata !8}
!8 = metadata !{i32 0, i32 2, i32 1027, null, i32 0}
!9 = metadata !{metadata !"uv2x", i32 1, <2 x i32>* @uv2x_shadow_typeProxy, metadata !10}
!10 = metadata !{i32 1, i32 2, i32 1028, null, i32 0}
!11 = metadata !{metadata !"uv2y", i32 1, <2 x i32>* @uv2y_shadow_typeProxy, metadata !12}
!12 = metadata !{i32 1, i32 2, i32 1029, null, i32 0}
!13 = metadata !{metadata !"uv4y", i32 1, <4 x i32>* @uv4y_shadow_typeProxy, metadata !14}
!14 = metadata !{i32 1, i32 2, i32 1030, null, i32 0}
!15 = metadata !{metadata !"uy", i32 1, i32* @uy_shadow_typeProxy, metadata !16}
!16 = metadata !{i32 1, i32 2, i32 1031, null, i32 0}
!17 = metadata !{metadata !"iv3a", i32 1, <3 x i32>* @iv3a_shadow_typeProxy, metadata !18}
!18 = metadata !{i32 0, i32 2, i32 1032, null, i32 0}
!19 = metadata !{metadata !"iv3b", i32 1, <3 x i32>* @iv3b_shadow_typeProxy, metadata !20}
!20 = metadata !{i32 0, i32 2, i32 1033, null, i32 0}
!21 = metadata !{metadata !"uv2c", i32 1, <2 x i32>* @uv2c_shadow_typeProxy, metadata !22}
!22 = metadata !{i32 1, i32 2, i32 1034, null, i32 0}
!23 = metadata !{metadata !"f", i32 1, float* @f_shadow_typeProxy, metadata !24}
!24 = metadata !{i32 0, i32 2, i32 1035, null, i32 1}
!25 = metadata !{metadata !"v2a", i32 1, <2 x float>* @v2a_shadow_typeProxy, metadata !26}
!26 = metadata !{i32 0, i32 2, i32 1036, null, i32 1}
!27 = metadata !{metadata !"v4", i32 1, <4 x float>* @v4_shadow_typeProxy, metadata !28}
!28 = metadata !{i32 0, i32 2, i32 1037, null, i32 1}
!29 = metadata !{metadata !"v2b", i32 1, <2 x float>* @v2b_shadow_typeProxy, metadata !30}
!30 = metadata !{i32 0, i32 2, i32 1038, null, i32 1}
!31 = metadata !{metadata !"gl_FragCoord", i32 5, <4 x float>* @FragCoord_shadow_typeProxy, metadata !32}
!32 = metadata !{i32 0, i32 3, i32 1040, null, i32 0}
!33 = metadata !{metadata !"gl_PointCoord", i32 6, <2 x float>* @PointCoord_shadow_typeProxy, metadata !34}
!34 = metadata !{i32 0, i32 2, i32 1041, null, i32 0}
!35 = metadata !{metadata !"bv", i32 12, <3 x i1>* @bv_typeProxy, metadata !36}
!36 = metadata !{i32 0, i32 0, i32 1024, null}
!37 = metadata !{metadata !"imin", i32 12, i32* @imin_typeProxy, metadata !38}
!38 = metadata !{i32 0, i32 2, i32 1024, null}
!39 = metadata !{metadata !"imax", i32 12, i32* @imax_typeProxy, metadata !38}
!40 = metadata !{metadata !"umin", i32 12, i32* @umin_typeProxy, metadata !41}
!41 = metadata !{i32 1, i32 2, i32 1024, null}
!42 = metadata !{metadata !"umax", i32 12, i32* @umax_typeProxy, metadata !41}
!43 = metadata !{metadata !"result", i32 7, <4 x float>* @result_shadow_typeProxy, metadata !44}
!44 = metadata !{i32 0, i32 2, i32 1039, null, i32 0}
!45 = metadata !{metadata !"gl_FragDepth", i32 11, float* @FragDepth_shadow_typeProxy, metadata !46}
!46 = metadata !{i32 0, i32 3, i32 1042, null, i32 0}
!47 = metadata !{i32 2}
!48 = metadata !{i32 3}
#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations

uniform bvec3 bv;
uniform mediump int imin;
uniform mediump int imax;
uniform mediump uint umin;
uniform mediump uint umax;
in mediump vec3 x;
in mediump vec3 y;
flat in mediump ivec4 iv4a;
flat in mediump ivec4 iv4b;
flat in mediump uvec2 uv2x;
flat in mediump uvec2 uv2y;
flat in mediump uvec4 uv4y;
flat in mediump uint uy;
flat in mediump ivec3 iv3a;
flat in mediump ivec3 iv3b;
flat in mediump uvec2 uv2c;
in mediump float f;
in mediump vec2 v2a;
in mediump vec4 v4;
in mediump vec2 v2b;
out mediump vec4 result;
const highp vec2 const42 = vec2(2.0);
const highp int const52i_0 = 0;
const highp float const55 = 0.0;
const highp float const103 = 0.1;

void main()
{
    mediump vec3 temp21 = mix(x, y, bv);
    mediump ivec2 temp22 = min(ivec2(uv2x), ivec2(uv2y));
    mediump ivec3 temp23 = max(iv3a, iv3b);
    mediump ivec2 temp24 = max(ivec2(uv2x), ivec2(uv2y));
    mediump ivec2 temp25 = max(ivec2(uv2x), int(uy));
    mediump ivec2 temp26 = clamp(ivec2(uv2x), ivec2(uv2y), ivec2(uv2c));
    struct  {
    vec3 member0;
    vec3 member1;
} temp27; temp27.member0 = modf(x, temp27.member1);
    vec3 temp28 = temp27.member0;
    mediump float temp29 = trunc(f);
    vec4 temp30 = vec4(temp29);
    mediump vec2 temp31 = round(v2a);
    mediump vec2 temp32 = roundEven(v2a);
    bvec2 temp33 = isnan(v2a);
    mediump ivec2 temp34 = ivec2(temp33);
    mediump int temp35 = floatBitsToInt(f);
    ivec4 temp36 = ivec4(temp35);
    mediump vec2 temp37 = intBitsToFloat(ivec2(uv2c));
    highp vec2 temp38 = unpackSnorm2x16(uint(int(uy)));
    highp vec2 temp39 = unpackUnorm2x16(uint(int(uy)));
    mediump vec2 temp40 = unpackHalf2x16(uint(int(uy)));
    mediump vec2 temp41 = gl_PointCoord * const42;
    mediump ivec4 temp43 = sign(iv4a);
    mediump ivec4 isum2 = abs(iv4a);
    vec3 modfOut40 = temp27.member1;
    mediump ivec4 temp46 = min(iv4a, iv4b);
    mediump ivec4 isum4 = isum2 + temp43;
    mediump ivec4 temp48 = min(iv4a, imin);
    mediump ivec4 isum6 = isum4 + temp46;
    vec4 temp50 = vec4(temp28.x, temp28.y, temp28.z, modfOut40.x);
    ivec4 temp51 = ivec4(temp23.x, temp23.y, temp23.z, const52i_0);
    mediump ivec4 isum8 = isum6 + temp48;
    vec4 temp54 = vec4(temp21.x, temp21.y, temp21.z, const55);
    mediump vec4 sum43 = temp54 + temp50;
    mediump ivec4 temp57 = max(iv4a, imax);
    mediump ivec4 isum15 = isum8 + temp51;
    mediump ivec4 temp59 = min(ivec4(uv4y), int(uy));
    ivec4 temp60 = ivec4(temp22.x, temp22.y, const52i_0, const52i_0);
    highp int temp61 = int(packSnorm2x16(v2a));
    bvec4 temp62 = isinf(v4);
    vec4 temp63 = vec4(temp31.x, temp31.y, temp32.x, temp32.y);
    mediump vec4 sum45 = temp30 + sum43;
    mediump ivec4 temp65 = clamp(iv4a, iv4a, iv4b);
    ivec4 temp66 = ivec4(temp24.x, temp24.y, temp25.x, temp25.y);
    mediump ivec4 isum17 = isum15 + temp57;
    mediump ivec4 usum12 = temp60 + temp59;
    highp int temp69 = int(packUnorm2x16(v2a));
    mediump vec4 temp70 = intBitsToFloat(iv4a);
    mediump ivec4 temp71 = ivec4(temp62);
    mediump vec4 sum50 = sum45 + temp63;
    ivec4 temp73 = ivec4(temp26.x, temp26.y, const52i_0, const52i_0);
    mediump ivec4 temp74 = clamp(iv4a, imin, imax);
    mediump ivec4 isum29 = isum17 + temp65;
    mediump ivec4 usum25 = usum12 + temp66;
    highp int temp77 = int(packHalf2x16(v2b));
    vec4 temp78 = vec4(temp37.x, temp37.y, const55, const55);
    mediump vec4 sum63 = sum50 + temp70;
    ivec4 temp80 = ivec4(temp34.x, temp34.y, temp71.x, temp71.y);
    mediump ivec4 temp81 = clamp(ivec4(uv4y), int(umin), int(umax));
    mediump ivec4 usum36 = usum25 + temp73;
    mediump ivec4 isum31 = isum29 + temp74;
    vec4 temp84 = vec4(temp38.x, temp38.y, temp39.x, temp39.y);
    mediump vec4 sum67 = temp78 + sum63;
    mediump ivec4 temp86 = floatBitsToInt(v4);
    mediump ivec4 isum55 = isum31 + temp80;
    mediump ivec4 usum38 = usum36 + temp81;
    vec4 temp89 = vec4(temp40.x, temp40.y, const55, const55);
    mediump vec4 sum82 = temp84 + sum67;
    ivec4 temp91 = ivec4(temp61, temp69, temp77, const52i_0);
    mediump ivec4 usum61 = usum38 + temp86;
    mediump ivec4 isum59 = isum55 + temp36;
    mediump vec4 temp94 = vec4(isum59);
    mediump vec4 sum84 = temp89 + sum82;
    mediump ivec4 usum80 = usum61 + temp91;
    vec4 temp97 = vec4(gl_PointCoord.x, gl_PointCoord.y, temp41.x, temp41.y);
    mediump vec4 temp98 = vec4(usum80);
    mediump vec4 temp99 = sum84 + temp94;
    highp vec4 temp100 = temp97 + gl_FragCoord;
    mediump vec4 result_shadow = temp99 + temp98;
    highp float FragDepth_shadow89 = f + const103;
    highp vec4 result_shadow87 = temp100 + result_shadow;
    result = result_shadow87;
    gl_FragDepth = FragDepth_shadow89;
    
}


#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations

uniform bvec3 bv;
uniform mediump int imin;
uniform mediump int imax;
uniform mediump uint umin;
uniform mediump uint umax;
in mediump vec3 x;
in mediump vec3 y;
flat in mediump uvec2 uv2x;
flat in mediump uvec2 uv2y;
flat in mediump ivec3 iv3a;
flat in mediump ivec3 iv3b;
flat in mediump uint uy;
flat in mediump uvec2 uv2c;
in mediump float f;
in mediump vec2 v2a;
flat in mediump ivec4 iv4a;
flat in mediump ivec4 iv4b;
flat in mediump uvec4 uv4y;
in mediump vec4 v4;
in mediump vec2 v2b;
out mediump vec4 result;
const highp vec2 const42 = vec2(2.0);
const highp float const51 = 0.0;
const highp int const54i_0 = 0;
const highp float const104 = 0.1;

void main()
{
    mediump vec3 temp211 = mix(x, y, bv);
    mediump ivec2 temp222 = min(ivec2(uv2x), ivec2(uv2y));
    mediump ivec3 temp233 = max(iv3a, iv3b);
    mediump ivec2 temp246 = max(ivec2(uv2x), ivec2(uv2y));
    mediump ivec2 temp258 = max(ivec2(uv2x), int(uy));
    mediump ivec2 temp2611 = clamp(ivec2(uv2x), ivec2(uv2y), ivec2(uv2c));
    struct  {
    vec3 member0;
    vec3 member1;
} temp27; temp27.member0 = modf(x, temp27.member1);
    vec3 temp28 = temp27.member0;
    mediump float temp2914 = trunc(f);
    vec4 temp30 = vec4(temp2914);
    mediump vec2 temp3116 = round(v2a);
    mediump vec2 temp3218 = roundEven(v2a);
    bvec2 temp3320 = isnan(v2a);
    mediump ivec2 temp3421 = ivec2(temp3320);
    mediump int temp3523 = floatBitsToInt(f);
    ivec4 temp36 = ivec4(temp3523);
    mediump vec2 temp3727 = intBitsToFloat(ivec2(uv2c));
    highp vec2 temp3829 = unpackSnorm2x16(uint(int(uy)));
    highp vec2 temp3931 = unpackUnorm2x16(uint(int(uy)));
    mediump vec2 temp4033 = unpackHalf2x16(uint(int(uy)));
    highp vec2 temp4134 = gl_PointCoord * const42;
    mediump ivec4 isum237 = abs(iv4a);
    mediump ivec4 temp4335 = sign(iv4a);
    mediump ivec4 isum441 = isum237 + temp4335;
    mediump ivec4 temp4640 = min(iv4a, iv4b);
    vec3 temp47 = temp27.member1;
    mediump ivec4 isum644 = isum441 + temp4640;
    mediump ivec4 temp4843 = min(iv4a, imin);
    vec4 temp50 = vec4(temp211.x, temp211.y, temp211.z, const51);
    mediump ivec4 isum849 = isum644 + temp4843;
    ivec4 temp53 = ivec4(temp233.x, temp233.y, temp233.z, const54i_0);
    vec4 temp55 = vec4(temp28.x, temp28.y, temp28.z, temp47.x);
    ivec4 temp56 = ivec4(temp222.x, temp222.y, const54i_0, const54i_0);
    mediump ivec4 temp5957 = min(ivec4(uv4y), int(uy));
    mediump ivec4 isum1555 = isum849 + temp53;
    mediump ivec4 temp5754 = max(iv4a, imax);
    mediump vec4 sum4352 = temp50 + temp55;
    mediump ivec4 usum1273 = temp56 + temp5957;
    mediump ivec4 isum1772 = isum1555 + temp5754;
    ivec4 temp63 = ivec4(temp246.x, temp246.y, temp258.x, temp258.y);
    mediump ivec4 temp6569 = clamp(iv4a, iv4a, iv4b);
    mediump vec4 sum4565 = temp30 + sum4352;
    vec4 temp66 = vec4(temp3116.x, temp3116.y, temp3218.x, temp3218.y);
    bvec4 temp6262 = isinf(v4);
    highp int temp6161 = int(packSnorm2x16(v2a));
    mediump ivec4 usum2585 = usum1273 + temp63;
    mediump ivec4 isum2984 = isum1772 + temp6569;
    mediump ivec4 temp7483 = clamp(iv4a, imin, imax);
    ivec4 temp72 = ivec4(temp2611.x, temp2611.y, const54i_0, const54i_0);
    mediump vec4 sum5079 = sum4565 + temp66;
    mediump ivec4 temp7178 = ivec4(temp6262);
    mediump vec4 temp7077 = intBitsToFloat(iv4a);
    highp int temp6975 = int(packUnorm2x16(v2a));
    mediump ivec4 isum3195 = isum2984 + temp7483;
    mediump ivec4 usum3694 = usum2585 + temp72;
    mediump ivec4 temp8193 = clamp(ivec4(uv4y), int(umin), int(umax));
    ivec4 temp80 = ivec4(temp3421.x, temp3421.y, temp7178.x, temp7178.y);
    mediump vec4 sum6389 = sum5079 + temp7077;
    vec4 temp82 = vec4(temp3727.x, temp3727.y, const51, const51);
    highp int temp7786 = int(packHalf2x16(v2b));
    mediump ivec4 usum38102 = usum3694 + temp8193;
    mediump ivec4 isum55101 = isum3195 + temp80;
    mediump ivec4 temp86100 = floatBitsToInt(v4);
    mediump vec4 sum6798 = temp82 + sum6389;
    vec4 temp88 = vec4(temp3829.x, temp3829.y, temp3931.x, temp3931.y);
    mediump ivec4 isum59109 = isum55101 + temp36;
    mediump ivec4 usum61108 = usum38102 + temp86100;
    ivec4 temp91 = ivec4(temp6161, temp6975, temp7786, const54i_0);
    mediump vec4 sum82105 = temp88 + sum6798;
    vec4 temp93 = vec4(temp4033.x, temp4033.y, const51, const51);
    mediump ivec4 usum80112 = usum61108 + temp91;
    mediump vec4 sum84111 = temp93 + sum82105;
    mediump vec4 temp94110 = vec4(isum59109);
    mediump vec4 temp99118 = temp94110 + sum84111;
    mediump vec4 temp98117 = vec4(usum80112);
    vec4 temp99 = vec4(gl_PointCoord.x, gl_PointCoord.y, temp4134.x, temp4134.y);
    mediump vec4 result_shadow120 = temp99118 + temp98117;
    highp vec4 temp100119 = temp99 + gl_FragCoord;
    highp vec4 result_shadow87123 = temp100119 + result_shadow120;
    highp float FragDepth_shadow89122 = f + const104;
    result = result_shadow87123;
    gl_FragDepth = FragDepth_shadow89122;
    
}


