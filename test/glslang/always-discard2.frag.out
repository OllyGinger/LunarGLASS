
Top IR:
; ModuleID = 'Top'

@gl_FragColor = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %y = alloca float
  %x = alloca float
  %color = alloca <4 x float>
  %black = alloca <4 x float>
  %white = alloca <4 x float>
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %white
  store <4 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>, <4 x float>* %black
  %color1 = load <4 x float>* %white
  store <4 x float> %color1, <4 x float>* %color
  %tex_coord = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %0 = extractelement <2 x float> %tex_coord, i32 0
  %1 = fmul float %0, 2.000000e+00
  %x2 = fsub float %1, 1.000000e+00
  store float %x2, float* %x
  %tex_coord3 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %2 = extractelement <2 x float> %tex_coord3, i32 1
  %3 = fmul float %2, 2.000000e+00
  %y4 = fsub float %3, 1.000000e+00
  store float %y4, float* %y
  call void @llvm.gla.discard()
  br label %stage-exit

post-discard:                                     ; No predecessors!
  %gl_FragColor = load <4 x float>* %color
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  unreachable

stage-epilogue:                                   ; No predecessors!
  %4 = load <4 x float>* @gl_FragColor
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %4)
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue, %entry
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.discard() nounwind

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind


Bottom IR:
; ModuleID = 'Top'

define fastcc void @main() {
entry:
  call void @llvm.gla.discard()
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare void @llvm.gla.discard() nounwind

// LunarGOO(r471) output
#version 130

void main()
{
    discard;
    
}
#### BEGIN COMPILER 0 INFO LOG ####

#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####

#### END LINKER INFO LOG ####
