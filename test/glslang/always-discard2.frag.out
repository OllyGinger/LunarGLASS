
Top IR:
; ModuleID = 'Top'

@tex_coord_shadow = internal global <2 x float> zeroinitializer
@FragColor_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %y = alloca float
  %x = alloca float
  %color = alloca <4 x float>
  %black = alloca <4 x float>
  %white = alloca <4 x float>
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %white
  store <4 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>, <4 x float>* %black
  %color1 = load <4 x float>* %white
  store <4 x float> %color1, <4 x float>* %color
  %tex_coord__ = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !0
  store <2 x float> %tex_coord__, <2 x float>* @tex_coord_shadow
  %0 = load <2 x float>* @tex_coord_shadow
  %1 = extractelement <2 x float> %0, i32 0
  %2 = fmul float %1, 2.000000e+00
  %x2 = fsub float %2, 1.000000e+00
  store float %x2, float* %x
  %tex_coord__3 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !0
  store <2 x float> %tex_coord__3, <2 x float>* @tex_coord_shadow
  %3 = load <2 x float>* @tex_coord_shadow
  %4 = extractelement <2 x float> %3, i32 1
  %5 = fmul float %4, 2.000000e+00
  %y4 = fsub float %5, 1.000000e+00
  store float %y4, float* %y
  call void @llvm.gla.discard()
  br label %stage-exit

post-discard:                                     ; No predecessors!
  %FragColor_shadow = load <4 x float>* %color
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  unreachable

stage-epilogue:                                   ; No predecessors!
  %6 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %6), !output !2
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue, %entry
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.discard() nounwind

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!inputs = !{!0, !0}
!outputs = !{!2}

!0 = metadata !{metadata !"tex_coord", i32 7, <2 x float>* @tex_coord_shadow, metadata !1}
!1 = metadata !{i32 0, i32 1024}
!2 = metadata !{metadata !"gl_FragColor", i32 1, <4 x float>* @FragColor_shadow, metadata !3}
!3 = metadata !{i32 0, i32 0}


Bottom IR:
; ModuleID = 'Top'

define fastcc void @main() {
entry:
  call void @llvm.gla.discard()
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare void @llvm.gla.discard() nounwind

!inputs = !{!0, !0}
!outputs = !{!2}

!0 = metadata !{metadata !"tex_coord", i32 7, null, metadata !1}
!1 = metadata !{i32 0, i32 1024}
!2 = metadata !{metadata !"gl_FragColor", i32 1, null, metadata !3}
!3 = metadata !{i32 0, i32 0}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 110

void main()
{
    discard;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 110

void main()
{
    discard;
    
}
