
Top IR:
; ModuleID = 'Top'

@texSampler2D = external addrspace(1) constant i32
@TexCoord_shadow = internal global [6 x <4 x float>] zeroinitializer
@color_shadow = internal global <4 x float> zeroinitializer
@alpha_shadow = internal global float 0.000000e+00
@FragColor_shadow = internal global <4 x float> zeroinitializer
@foo_shadow = internal global [3 x <4 x float>] zeroinitializer

define fastcc void @main() {
entry:
  %constructed = alloca <2 x float>
  %texColor = alloca <4 x float>
  %0 = load i32 addrspace(1)* @texSampler2D, !uniform !0
  %gl_TexCoord = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1024, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord1, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1)
  %gl_TexCoord2 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord2, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2)
  %gl_TexCoord3 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord3, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3)
  %gl_TexCoord4 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord4, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord5 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord5, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %1 = load <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord6 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1024, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord6, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord7 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord7, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1)
  %gl_TexCoord8 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord8, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2)
  %gl_TexCoord9 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord9, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3)
  %gl_TexCoord10 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord10, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord11 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord11, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %2 = load <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %3 = fadd <4 x float> %1, %2
  %4 = load <2 x float>* %constructed
  %5 = extractelement <4 x float> %3, i32 0
  %6 = insertelement <2 x float> %4, float %5, i32 0
  %7 = extractelement <4 x float> %3, i32 1
  %8 = insertelement <2 x float> %6, float %7, i32 1
  %texColor12 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %8)
  store <4 x float> %texColor12, <4 x float>* %texColor
  %color = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1030, i32 -1, i32 1), !input !5
  store <4 x float> %color, <4 x float>* @color_shadow
  %9 = load <4 x float>* @color_shadow
  %10 = load <4 x float>* %texColor
  %texColor13 = fadd <4 x float> %10, %9
  store <4 x float> %texColor13, <4 x float>* %texColor
  %alpha = call float @llvm.gla.fReadInterpolant.f32(i32 1031, i32 -1, i32 1), !input !7
  store float %alpha, float* @alpha_shadow
  %11 = load float* @alpha_shadow
  %12 = load <4 x float>* %texColor
  %texColor14 = insertelement <4 x float> %12, float %11, i32 3
  store <4 x float> %texColor14, <4 x float>* %texColor
  %foo = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1033, i32 -1, i32 1), !input !9
  store <4 x float> %foo, <4 x float>* getelementptr inbounds ([3 x <4 x float>]* @foo_shadow, i32 0, i32 0)
  %foo15 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1034, i32 -1, i32 1), !input !9
  store <4 x float> %foo15, <4 x float>* getelementptr inbounds ([3 x <4 x float>]* @foo_shadow, i32 0, i32 1)
  %foo16 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1035, i32 -1, i32 1), !input !9
  store <4 x float> %foo16, <4 x float>* getelementptr inbounds ([3 x <4 x float>]* @foo_shadow, i32 0, i32 2)
  %13 = load <4 x float>* getelementptr inbounds ([3 x <4 x float>]* @foo_shadow, i32 0, i32 1)
  %gl_TexCoord17 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1024, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord17, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord18 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord18, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1)
  %gl_TexCoord19 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord19, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2)
  %gl_TexCoord20 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord20, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3)
  %gl_TexCoord21 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord21, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord22 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord22, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %14 = load <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %15 = fadd <4 x float> %13, %14
  %gl_TexCoord23 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1024, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord23, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord24 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord24, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1)
  %gl_TexCoord25 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord25, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2)
  %gl_TexCoord26 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord26, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3)
  %gl_TexCoord27 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord27, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord28 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !input !3
  store <4 x float> %gl_TexCoord28, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %16 = load <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %17 = fadd <4 x float> %15, %16
  %18 = load <4 x float>* %texColor
  %FragColor_shadow = fadd <4 x float> %17, %18
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %19 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1032, i32 -1, <4 x float> %19), !output !11
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!defaultUniforms = !{!0}
!inputs = !{!3, !5, !7, !9}
!outputs = !{!11}

!0 = metadata !{metadata !"texSampler2D", i32 12, i32 addrspace(1)* @texSampler2D, metadata !1}
!1 = metadata !{i32 5, i32 0, i32 0, metadata !2}
!2 = metadata !{i32 0, i32 addrspace(1)* @texSampler2D, i32 1, i1 false, i1 false, i32 0}
!3 = metadata !{metadata !"gl_TexCoord", i32 1, [6 x <4 x float>]* @TexCoord_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1024, null}
!5 = metadata !{metadata !"color", i32 1, <4 x float>* @color_shadow_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1030, null}
!7 = metadata !{metadata !"alpha", i32 1, float* @alpha_shadow_typeProxy, metadata !8}
!8 = metadata !{i32 0, i32 0, i32 1031, null}
!9 = metadata !{metadata !"foo", i32 1, [3 x <4 x float>]* @foo_shadow_typeProxy, metadata !10}
!10 = metadata !{i32 0, i32 0, i32 1033, null}
!11 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !12}
!12 = metadata !{i32 0, i32 0, i32 1032, null}


Bottom IR:
; ModuleID = 'Top'

@texSampler2D = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @texSampler2D, align 4, !uniform !0
  %gl_TexCoord = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1024, i32 -1, i32 1), !input !3
  %gl_TexCoord4 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !input !3
  %gl_TexCoord5 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !input !3
  %1 = fadd <4 x float> %gl_TexCoord5, %gl_TexCoord4
  %2 = call <2 x float> @llvm.gla.fSwizzle.v2f32.v4f32.v2i32(<4 x float> %1, <2 x i32> <i32 0, i32 1>)
  %foo15 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1034, i32 -1, i32 1), !input !9
  %color = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1030, i32 -1, i32 1), !input !5
  %texColor12 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %2)
  %3 = fadd <4 x float> %foo15, %gl_TexCoord
  %alpha = call float @llvm.gla.fReadInterpolant.f32(i32 1031, i32 -1, i32 1), !input !7
  %texColor13 = fadd <4 x float> %color, %texColor12
  %4 = fadd <4 x float> %3, %gl_TexCoord4
  %5 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %texColor13, i32 8, float undef, i32 undef, float undef, i32 undef, float undef, i32 undef, float %alpha, i32 0)
  %FragColor_shadow = fadd <4 x float> %4, %5
  call void @llvm.gla.fWriteData.v4f32(i32 1032, i32 -1, <4 x float> %FragColor_shadow), !output !11
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float>, i32, float, i32, float, i32, float, i32, float, i32) nounwind readnone

declare <2 x float> @llvm.gla.fSwizzle.v2f32.v4f32.v2i32(<4 x float>, <2 x i32>) nounwind readnone

!defaultUniforms = !{!0}
!inputs = !{!3, !5, !7, !9}
!outputs = !{!11}

!0 = metadata !{metadata !"texSampler2D", i32 12, i32 addrspace(1)* @texSampler2D, metadata !1}
!1 = metadata !{i32 5, i32 0, i32 0, metadata !2}
!2 = metadata !{i32 0, i32 addrspace(1)* @texSampler2D, i32 1, i1 false, i1 false, i32 0}
!3 = metadata !{metadata !"gl_TexCoord", i32 1, [6 x <4 x float>]* @TexCoord_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1024, null}
!5 = metadata !{metadata !"color", i32 1, <4 x float>* @color_shadow_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1030, null}
!7 = metadata !{metadata !"alpha", i32 1, float* @alpha_shadow_typeProxy, metadata !8}
!8 = metadata !{i32 0, i32 0, i32 1031, null}
!9 = metadata !{metadata !"foo", i32 1, [3 x <4 x float>]* @foo_shadow_typeProxy, metadata !10}
!10 = metadata !{i32 0, i32 0, i32 1033, null}
!11 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !12}
!12 = metadata !{i32 0, i32 0, i32 1032, null}
#### BEGIN COMPILER 0 INFO LOG ####
WARNING: 0:3: varying deprecated in version 130; may be removed in future release
WARNING: 0:4: varying deprecated in version 130; may be removed in future release
WARNING: 0:6: varying deprecated in version 130; may be removed in future release
WARNING: 0:8: varying deprecated in version 130; may be removed in future release
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
uniform sampler2D texSampler2D;
in vec4[3] foo;
in vec4 color;
in float alpha;

void main()
{
    vec4 temp21 = gl_TexCoord[5] + gl_TexCoord[4];
    vec2 temp22 = vec2(temp21);
    vec4 texColor12 = texture(texSampler2D, temp22);
    vec4 temp24 = foo[1] + gl_TexCoord[0];
    vec4 texColor13 = color + texColor12;
    vec4 temp26 = temp24 + gl_TexCoord[4];
    vec4 temp27 = texColor13;
    temp27.w = alpha;
    vec4 FragColor_shadow = temp26 + temp27;
    gl_FragColor = FragColor_shadow;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
uniform sampler2D texSampler2D;
in vec4[3] foo;
in vec4 color;
in float alpha;

void main()
{
    vec4 temp2116 = gl_TexCoord[5] + gl_TexCoord[4];
    vec2 temp22 = vec2(temp2116);
    vec4 texColor1218 = texture(texSampler2D, temp22);
    vec4 texColor1330 = color + texColor1218;
    vec4 temp2429 = foo[1] + gl_TexCoord[0];
    vec4 temp26 = texColor1330;
    temp26.w = alpha;
    vec4 temp2639 = temp2429 + gl_TexCoord[4];
    vec4 FragColor_shadow42 = temp26 + temp2639;
    gl_FragColor = FragColor_shadow42;
    
}
