
Top IR:
; ModuleID = 'Top'

@v_shadow = internal global <4 x float> zeroinitializer
@u_shadow = internal global <4 x float> zeroinitializer
@FragColor_shadow = internal global <4 x float> zeroinitializer
@Color_shadow = internal global <3 x float> zeroinitializer
@um43 = external addrspace(2) constant [4 x <4 x float>]

define fastcc void @main() {
entry:
  %m44 = alloca [4 x <4 x float>]
  %constructed63 = alloca <4 x float>
  %constructed = alloca [4 x <4 x float>]
  %m34 = alloca [4 x <4 x float>]
  %v__ = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__, <4 x float>* @v_shadow
  %0 = load <4 x float>* @v_shadow
  %1 = extractelement <4 x float> %0, i32 0
  %u__ = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__, <4 x float>* @u_shadow
  %2 = load <4 x float>* @u_shadow
  %3 = extractelement <4 x float> %2, i32 0
  %4 = fmul float %1, %3
  %v__1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__1, <4 x float>* @v_shadow
  %5 = load <4 x float>* @v_shadow
  %6 = extractelement <4 x float> %5, i32 0
  %u__2 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__2, <4 x float>* @u_shadow
  %7 = load <4 x float>* @u_shadow
  %8 = extractelement <4 x float> %7, i32 1
  %9 = fmul float %6, %8
  %v__3 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__3, <4 x float>* @v_shadow
  %10 = load <4 x float>* @v_shadow
  %11 = extractelement <4 x float> %10, i32 0
  %u__4 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__4, <4 x float>* @u_shadow
  %12 = load <4 x float>* @u_shadow
  %13 = extractelement <4 x float> %12, i32 2
  %14 = fmul float %11, %13
  %v__5 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__5, <4 x float>* @v_shadow
  %15 = load <4 x float>* @v_shadow
  %16 = extractelement <4 x float> %15, i32 0
  %u__6 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__6, <4 x float>* @u_shadow
  %17 = load <4 x float>* @u_shadow
  %18 = extractelement <4 x float> %17, i32 3
  %19 = fmul float %16, %18
  %v__7 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__7, <4 x float>* @v_shadow
  %20 = load <4 x float>* @v_shadow
  %21 = extractelement <4 x float> %20, i32 1
  %u__8 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__8, <4 x float>* @u_shadow
  %22 = load <4 x float>* @u_shadow
  %23 = extractelement <4 x float> %22, i32 0
  %24 = fmul float %21, %23
  %v__9 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__9, <4 x float>* @v_shadow
  %25 = load <4 x float>* @v_shadow
  %26 = extractelement <4 x float> %25, i32 1
  %u__10 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__10, <4 x float>* @u_shadow
  %27 = load <4 x float>* @u_shadow
  %28 = extractelement <4 x float> %27, i32 1
  %29 = fmul float %26, %28
  %v__11 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__11, <4 x float>* @v_shadow
  %30 = load <4 x float>* @v_shadow
  %31 = extractelement <4 x float> %30, i32 1
  %u__12 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__12, <4 x float>* @u_shadow
  %32 = load <4 x float>* @u_shadow
  %33 = extractelement <4 x float> %32, i32 2
  %34 = fmul float %31, %33
  %v__13 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__13, <4 x float>* @v_shadow
  %35 = load <4 x float>* @v_shadow
  %36 = extractelement <4 x float> %35, i32 1
  %u__14 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__14, <4 x float>* @u_shadow
  %37 = load <4 x float>* @u_shadow
  %38 = extractelement <4 x float> %37, i32 3
  %39 = fmul float %36, %38
  %v__15 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__15, <4 x float>* @v_shadow
  %40 = load <4 x float>* @v_shadow
  %41 = extractelement <4 x float> %40, i32 2
  %u__16 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__16, <4 x float>* @u_shadow
  %42 = load <4 x float>* @u_shadow
  %43 = extractelement <4 x float> %42, i32 0
  %44 = fmul float %41, %43
  %v__17 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__17, <4 x float>* @v_shadow
  %45 = load <4 x float>* @v_shadow
  %46 = extractelement <4 x float> %45, i32 2
  %u__18 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__18, <4 x float>* @u_shadow
  %47 = load <4 x float>* @u_shadow
  %48 = extractelement <4 x float> %47, i32 1
  %49 = fmul float %46, %48
  %v__19 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__19, <4 x float>* @v_shadow
  %50 = load <4 x float>* @v_shadow
  %51 = extractelement <4 x float> %50, i32 2
  %u__20 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__20, <4 x float>* @u_shadow
  %52 = load <4 x float>* @u_shadow
  %53 = extractelement <4 x float> %52, i32 2
  %54 = fmul float %51, %53
  %v__21 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__21, <4 x float>* @v_shadow
  %55 = load <4 x float>* @v_shadow
  %56 = extractelement <4 x float> %55, i32 2
  %u__22 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__22, <4 x float>* @u_shadow
  %57 = load <4 x float>* @u_shadow
  %58 = extractelement <4 x float> %57, i32 3
  %59 = fmul float %56, %58
  %v__23 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__23, <4 x float>* @v_shadow
  %60 = load <4 x float>* @v_shadow
  %61 = extractelement <4 x float> %60, i32 3
  %u__24 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__24, <4 x float>* @u_shadow
  %62 = load <4 x float>* @u_shadow
  %63 = extractelement <4 x float> %62, i32 0
  %64 = fmul float %61, %63
  %v__25 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__25, <4 x float>* @v_shadow
  %65 = load <4 x float>* @v_shadow
  %66 = extractelement <4 x float> %65, i32 3
  %u__26 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__26, <4 x float>* @u_shadow
  %67 = load <4 x float>* @u_shadow
  %68 = extractelement <4 x float> %67, i32 1
  %69 = fmul float %66, %68
  %v__27 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__27, <4 x float>* @v_shadow
  %70 = load <4 x float>* @v_shadow
  %71 = extractelement <4 x float> %70, i32 3
  %u__28 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__28, <4 x float>* @u_shadow
  %72 = load <4 x float>* @u_shadow
  %73 = extractelement <4 x float> %72, i32 2
  %74 = fmul float %71, %73
  %v__29 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__29, <4 x float>* @v_shadow
  %75 = load <4 x float>* @v_shadow
  %76 = extractelement <4 x float> %75, i32 3
  %u__30 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__30, <4 x float>* @u_shadow
  %77 = load <4 x float>* @u_shadow
  %78 = extractelement <4 x float> %77, i32 3
  %79 = fmul float %76, %78
  %__matrix = load [4 x <4 x float>]* %constructed
  %__column = extractvalue [4 x <4 x float>] %__matrix, 0
  %__column31 = insertelement <4 x float> %__column, float %4, i32 0
  %__column32 = insertelement <4 x float> %__column31, float %9, i32 1
  %__column33 = insertelement <4 x float> %__column32, float %14, i32 2
  %__column34 = insertelement <4 x float> %__column33, float %19, i32 3
  %__matrix35 = insertvalue [4 x <4 x float>] %__matrix, <4 x float> %__column34, 0
  %__column36 = extractvalue [4 x <4 x float>] %__matrix, 1
  %__column37 = insertelement <4 x float> %__column36, float %24, i32 0
  %__column38 = insertelement <4 x float> %__column37, float %29, i32 1
  %__column39 = insertelement <4 x float> %__column38, float %34, i32 2
  %__column40 = insertelement <4 x float> %__column39, float %39, i32 3
  %__matrix41 = insertvalue [4 x <4 x float>] %__matrix35, <4 x float> %__column40, 1
  %__column42 = extractvalue [4 x <4 x float>] %__matrix, 2
  %__column43 = insertelement <4 x float> %__column42, float %44, i32 0
  %__column44 = insertelement <4 x float> %__column43, float %49, i32 1
  %__column45 = insertelement <4 x float> %__column44, float %54, i32 2
  %__column46 = insertelement <4 x float> %__column45, float %59, i32 3
  %__matrix47 = insertvalue [4 x <4 x float>] %__matrix41, <4 x float> %__column46, 2
  %__column48 = extractvalue [4 x <4 x float>] %__matrix, 3
  %__column49 = insertelement <4 x float> %__column48, float %64, i32 0
  %__column50 = insertelement <4 x float> %__column49, float %69, i32 1
  %__column51 = insertelement <4 x float> %__column50, float %74, i32 2
  %__column52 = insertelement <4 x float> %__column51, float %79, i32 3
  %__matrix53 = insertvalue [4 x <4 x float>] %__matrix47, <4 x float> %__column52, 3
  store [4 x <4 x float>] %__matrix53, [4 x <4 x float>]* %m34
  %__matrix54 = load [4 x <4 x float>]* %m34
  %80 = alloca [4 x <4 x float>]
  %81 = load [4 x <4 x float>]* %80
  %__leftColumn = extractvalue [4 x <4 x float>] %__matrix54, 0
  %__column55 = fadd <4 x float> %__leftColumn, <float 0x4011333340000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>
  %82 = insertvalue [4 x <4 x float>] %81, <4 x float> %__column55, 0
  %__leftColumn56 = extractvalue [4 x <4 x float>] %__matrix54, 1
  %__column57 = fadd <4 x float> %__leftColumn56, <float 0.000000e+00, float 0x4011333340000000, float 0.000000e+00, float 0.000000e+00>
  %83 = insertvalue [4 x <4 x float>] %82, <4 x float> %__column57, 1
  %__leftColumn58 = extractvalue [4 x <4 x float>] %__matrix54, 2
  %__column59 = fadd <4 x float> %__leftColumn58, <float 0.000000e+00, float 0.000000e+00, float 0x4011333340000000, float 0.000000e+00>
  %84 = insertvalue [4 x <4 x float>] %83, <4 x float> %__column59, 2
  %__leftColumn60 = extractvalue [4 x <4 x float>] %__matrix54, 3
  %__column61 = fadd <4 x float> %__leftColumn60, <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x4011333340000000>
  %m3462 = insertvalue [4 x <4 x float>] %84, <4 x float> %__column61, 3
  store [4 x <4 x float>] %m3462, [4 x <4 x float>]* %m34
  %Color__ = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 2, i32 -1, i32 1)
  store <3 x float> %Color__, <3 x float>* @Color_shadow
  %85 = load <3 x float>* @Color_shadow
  %86 = load <4 x float>* %constructed63
  %87 = extractelement <3 x float> %85, i32 0
  %88 = insertelement <4 x float> %86, float %87, i32 0
  %89 = extractelement <3 x float> %85, i32 1
  %90 = insertelement <4 x float> %88, float %89, i32 1
  %91 = extractelement <3 x float> %85, i32 2
  %92 = insertelement <4 x float> %90, float %91, i32 2
  %FragColor_shadow = insertelement <4 x float> %92, float 1.000000e+00, i32 3
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  %__matrix64 = load [4 x <4 x float>] addrspace(2)* @um43
  %93 = load <4 x float>* @FragColor_shadow
  %94 = alloca <4 x float>
  %95 = load <4 x float>* %94
  %__column65 = extractvalue [4 x <4 x float>] %__matrix64, 0
  %__dot = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %93, <4 x float> %__column65)
  %96 = insertelement <4 x float> %95, float %__dot, i32 0
  %__column66 = extractvalue [4 x <4 x float>] %__matrix64, 1
  %__dot67 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %93, <4 x float> %__column66)
  %97 = insertelement <4 x float> %96, float %__dot67, i32 1
  %__column68 = extractvalue [4 x <4 x float>] %__matrix64, 2
  %__dot69 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %93, <4 x float> %__column68)
  %98 = insertelement <4 x float> %97, float %__dot69, i32 2
  %__column70 = extractvalue [4 x <4 x float>] %__matrix64, 3
  %__dot71 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %93, <4 x float> %__column70)
  %FragColor_shadow72 = insertelement <4 x float> %98, float %__dot71, i32 3
  store <4 x float> %FragColor_shadow72, <4 x float>* @FragColor_shadow
  %v__73 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  store <4 x float> %v__73, <4 x float>* @v_shadow
  %99 = load <4 x float>* @v_shadow
  %100 = extractelement <4 x float> %99, i32 0
  %__matrix74 = load [4 x <4 x float>]* %m34
  %101 = alloca [4 x <4 x float>]
  %102 = load [4 x <4 x float>]* %101
  %__column75 = extractvalue [4 x <4 x float>] %__matrix74, 0
  %__row = extractelement <4 x float> %__column75, i32 0
  %103 = fmul float %100, %__row
  %104 = insertelement <4 x float> %__column75, float %103, i32 0
  %__row76 = extractelement <4 x float> %104, i32 1
  %105 = fmul float %100, %__row76
  %106 = insertelement <4 x float> %104, float %105, i32 1
  %__row77 = extractelement <4 x float> %106, i32 2
  %107 = fmul float %100, %__row77
  %108 = insertelement <4 x float> %106, float %107, i32 2
  %__row78 = extractelement <4 x float> %108, i32 3
  %109 = fmul float %100, %__row78
  %110 = insertelement <4 x float> %108, float %109, i32 3
  %111 = insertvalue [4 x <4 x float>] %102, <4 x float> %110, 0
  %__column79 = extractvalue [4 x <4 x float>] %__matrix74, 1
  %__row80 = extractelement <4 x float> %__column79, i32 0
  %112 = fmul float %100, %__row80
  %113 = insertelement <4 x float> %__column79, float %112, i32 0
  %__row81 = extractelement <4 x float> %113, i32 1
  %114 = fmul float %100, %__row81
  %115 = insertelement <4 x float> %113, float %114, i32 1
  %__row82 = extractelement <4 x float> %115, i32 2
  %116 = fmul float %100, %__row82
  %117 = insertelement <4 x float> %115, float %116, i32 2
  %__row83 = extractelement <4 x float> %117, i32 3
  %118 = fmul float %100, %__row83
  %119 = insertelement <4 x float> %117, float %118, i32 3
  %120 = insertvalue [4 x <4 x float>] %111, <4 x float> %119, 1
  %__column84 = extractvalue [4 x <4 x float>] %__matrix74, 2
  %__row85 = extractelement <4 x float> %__column84, i32 0
  %121 = fmul float %100, %__row85
  %122 = insertelement <4 x float> %__column84, float %121, i32 0
  %__row86 = extractelement <4 x float> %122, i32 1
  %123 = fmul float %100, %__row86
  %124 = insertelement <4 x float> %122, float %123, i32 1
  %__row87 = extractelement <4 x float> %124, i32 2
  %125 = fmul float %100, %__row87
  %126 = insertelement <4 x float> %124, float %125, i32 2
  %__row88 = extractelement <4 x float> %126, i32 3
  %127 = fmul float %100, %__row88
  %128 = insertelement <4 x float> %126, float %127, i32 3
  %129 = insertvalue [4 x <4 x float>] %120, <4 x float> %128, 2
  %__column89 = extractvalue [4 x <4 x float>] %__matrix74, 3
  %__row90 = extractelement <4 x float> %__column89, i32 0
  %130 = fmul float %100, %__row90
  %131 = insertelement <4 x float> %__column89, float %130, i32 0
  %__row91 = extractelement <4 x float> %131, i32 1
  %132 = fmul float %100, %__row91
  %133 = insertelement <4 x float> %131, float %132, i32 1
  %__row92 = extractelement <4 x float> %133, i32 2
  %134 = fmul float %100, %__row92
  %135 = insertelement <4 x float> %133, float %134, i32 2
  %__row93 = extractelement <4 x float> %135, i32 3
  %136 = fmul float %100, %__row93
  %137 = insertelement <4 x float> %135, float %136, i32 3
  %m3494 = insertvalue [4 x <4 x float>] %129, <4 x float> %137, 3
  store [4 x <4 x float>] %m3494, [4 x <4 x float>]* %m34
  store [4 x <4 x float>] [<4 x float> <float 0x4012CCCCC0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float> <float 0.000000e+00, float 0x4012CCCCC0000000, float 0.000000e+00, float 0.000000e+00>, <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0x4012CCCCC0000000, float 0.000000e+00>, <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x4012CCCCC0000000>], [4 x <4 x float>]* %m44
  %__matrix95 = load [4 x <4 x float>] addrspace(2)* @um43
  %__matrix96 = load [4 x <4 x float>]* %m44
  %138 = alloca [4 x <4 x float>]
  %__resultMatrix = load [4 x <4 x float>]* %138
  %139 = alloca <4 x float>
  %__tempColumn = load <4 x float>* %139
  %__rightColumn = extractvalue [4 x <4 x float>] %__matrix95, 0
  %__leftColumn97 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp = extractelement <4 x float> %__leftColumn97, i32 0
  %__rightComp = extractelement <4 x float> %__rightColumn, i32 0
  %__product = fmul float %__leftComp, %__rightComp
  %__leftColumn98 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp99 = extractelement <4 x float> %__leftColumn98, i32 0
  %__rightComp100 = extractelement <4 x float> %__rightColumn, i32 1
  %__product101 = fmul float %__leftComp99, %__rightComp100
  %__dotProduct = fadd float %__product, %__product101
  %__leftColumn102 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp103 = extractelement <4 x float> %__leftColumn102, i32 0
  %__rightComp104 = extractelement <4 x float> %__rightColumn, i32 2
  %__product105 = fmul float %__leftComp103, %__rightComp104
  %__dotProduct106 = fadd float %__dotProduct, %__product105
  %__leftColumn107 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp108 = extractelement <4 x float> %__leftColumn107, i32 0
  %__rightComp109 = extractelement <4 x float> %__rightColumn, i32 3
  %__product110 = fmul float %__leftComp108, %__rightComp109
  %__dotProduct111 = fadd float %__dotProduct106, %__product110
  %__column112 = insertelement <4 x float> %__tempColumn, float %__dotProduct111, i32 0
  %__leftColumn113 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp114 = extractelement <4 x float> %__leftColumn113, i32 1
  %__rightComp115 = extractelement <4 x float> %__rightColumn, i32 0
  %__product116 = fmul float %__leftComp114, %__rightComp115
  %__leftColumn117 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp118 = extractelement <4 x float> %__leftColumn117, i32 1
  %__rightComp119 = extractelement <4 x float> %__rightColumn, i32 1
  %__product120 = fmul float %__leftComp118, %__rightComp119
  %__dotProduct121 = fadd float %__product116, %__product120
  %__leftColumn122 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp123 = extractelement <4 x float> %__leftColumn122, i32 1
  %__rightComp124 = extractelement <4 x float> %__rightColumn, i32 2
  %__product125 = fmul float %__leftComp123, %__rightComp124
  %__dotProduct126 = fadd float %__dotProduct121, %__product125
  %__leftColumn127 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp128 = extractelement <4 x float> %__leftColumn127, i32 1
  %__rightComp129 = extractelement <4 x float> %__rightColumn, i32 3
  %__product130 = fmul float %__leftComp128, %__rightComp129
  %__dotProduct131 = fadd float %__dotProduct126, %__product130
  %__column132 = insertelement <4 x float> %__column112, float %__dotProduct131, i32 1
  %__leftColumn133 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp134 = extractelement <4 x float> %__leftColumn133, i32 2
  %__rightComp135 = extractelement <4 x float> %__rightColumn, i32 0
  %__product136 = fmul float %__leftComp134, %__rightComp135
  %__leftColumn137 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp138 = extractelement <4 x float> %__leftColumn137, i32 2
  %__rightComp139 = extractelement <4 x float> %__rightColumn, i32 1
  %__product140 = fmul float %__leftComp138, %__rightComp139
  %__dotProduct141 = fadd float %__product136, %__product140
  %__leftColumn142 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp143 = extractelement <4 x float> %__leftColumn142, i32 2
  %__rightComp144 = extractelement <4 x float> %__rightColumn, i32 2
  %__product145 = fmul float %__leftComp143, %__rightComp144
  %__dotProduct146 = fadd float %__dotProduct141, %__product145
  %__leftColumn147 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp148 = extractelement <4 x float> %__leftColumn147, i32 2
  %__rightComp149 = extractelement <4 x float> %__rightColumn, i32 3
  %__product150 = fmul float %__leftComp148, %__rightComp149
  %__dotProduct151 = fadd float %__dotProduct146, %__product150
  %__column152 = insertelement <4 x float> %__column132, float %__dotProduct151, i32 2
  %__leftColumn153 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp154 = extractelement <4 x float> %__leftColumn153, i32 3
  %__rightComp155 = extractelement <4 x float> %__rightColumn, i32 0
  %__product156 = fmul float %__leftComp154, %__rightComp155
  %__leftColumn157 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp158 = extractelement <4 x float> %__leftColumn157, i32 3
  %__rightComp159 = extractelement <4 x float> %__rightColumn, i32 1
  %__product160 = fmul float %__leftComp158, %__rightComp159
  %__dotProduct161 = fadd float %__product156, %__product160
  %__leftColumn162 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp163 = extractelement <4 x float> %__leftColumn162, i32 3
  %__rightComp164 = extractelement <4 x float> %__rightColumn, i32 2
  %__product165 = fmul float %__leftComp163, %__rightComp164
  %__dotProduct166 = fadd float %__dotProduct161, %__product165
  %__leftColumn167 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp168 = extractelement <4 x float> %__leftColumn167, i32 3
  %__rightComp169 = extractelement <4 x float> %__rightColumn, i32 3
  %__product170 = fmul float %__leftComp168, %__rightComp169
  %__dotProduct171 = fadd float %__dotProduct166, %__product170
  %__column172 = insertelement <4 x float> %__column152, float %__dotProduct171, i32 3
  %__resultMatrix173 = insertvalue [4 x <4 x float>] %__resultMatrix, <4 x float> %__column172, 0
  %__rightColumn174 = extractvalue [4 x <4 x float>] %__matrix95, 1
  %__leftColumn175 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp176 = extractelement <4 x float> %__leftColumn175, i32 0
  %__rightComp177 = extractelement <4 x float> %__rightColumn174, i32 0
  %__product178 = fmul float %__leftComp176, %__rightComp177
  %__leftColumn179 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp180 = extractelement <4 x float> %__leftColumn179, i32 0
  %__rightComp181 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product182 = fmul float %__leftComp180, %__rightComp181
  %__dotProduct183 = fadd float %__product178, %__product182
  %__leftColumn184 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp185 = extractelement <4 x float> %__leftColumn184, i32 0
  %__rightComp186 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product187 = fmul float %__leftComp185, %__rightComp186
  %__dotProduct188 = fadd float %__dotProduct183, %__product187
  %__leftColumn189 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp190 = extractelement <4 x float> %__leftColumn189, i32 0
  %__rightComp191 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product192 = fmul float %__leftComp190, %__rightComp191
  %__dotProduct193 = fadd float %__dotProduct188, %__product192
  %__column194 = insertelement <4 x float> %__column172, float %__dotProduct193, i32 0
  %__leftColumn195 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp196 = extractelement <4 x float> %__leftColumn195, i32 1
  %__rightComp197 = extractelement <4 x float> %__rightColumn174, i32 0
  %__product198 = fmul float %__leftComp196, %__rightComp197
  %__leftColumn199 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp200 = extractelement <4 x float> %__leftColumn199, i32 1
  %__rightComp201 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product202 = fmul float %__leftComp200, %__rightComp201
  %__dotProduct203 = fadd float %__product198, %__product202
  %__leftColumn204 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp205 = extractelement <4 x float> %__leftColumn204, i32 1
  %__rightComp206 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product207 = fmul float %__leftComp205, %__rightComp206
  %__dotProduct208 = fadd float %__dotProduct203, %__product207
  %__leftColumn209 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp210 = extractelement <4 x float> %__leftColumn209, i32 1
  %__rightComp211 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product212 = fmul float %__leftComp210, %__rightComp211
  %__dotProduct213 = fadd float %__dotProduct208, %__product212
  %__column214 = insertelement <4 x float> %__column194, float %__dotProduct213, i32 1
  %__leftColumn215 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp216 = extractelement <4 x float> %__leftColumn215, i32 2
  %__rightComp217 = extractelement <4 x float> %__rightColumn174, i32 0
  %__product218 = fmul float %__leftComp216, %__rightComp217
  %__leftColumn219 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp220 = extractelement <4 x float> %__leftColumn219, i32 2
  %__rightComp221 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product222 = fmul float %__leftComp220, %__rightComp221
  %__dotProduct223 = fadd float %__product218, %__product222
  %__leftColumn224 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp225 = extractelement <4 x float> %__leftColumn224, i32 2
  %__rightComp226 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product227 = fmul float %__leftComp225, %__rightComp226
  %__dotProduct228 = fadd float %__dotProduct223, %__product227
  %__leftColumn229 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp230 = extractelement <4 x float> %__leftColumn229, i32 2
  %__rightComp231 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product232 = fmul float %__leftComp230, %__rightComp231
  %__dotProduct233 = fadd float %__dotProduct228, %__product232
  %__column234 = insertelement <4 x float> %__column214, float %__dotProduct233, i32 2
  %__leftColumn235 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp236 = extractelement <4 x float> %__leftColumn235, i32 3
  %__rightComp237 = extractelement <4 x float> %__rightColumn174, i32 0
  %__product238 = fmul float %__leftComp236, %__rightComp237
  %__leftColumn239 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp240 = extractelement <4 x float> %__leftColumn239, i32 3
  %__rightComp241 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product242 = fmul float %__leftComp240, %__rightComp241
  %__dotProduct243 = fadd float %__product238, %__product242
  %__leftColumn244 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp245 = extractelement <4 x float> %__leftColumn244, i32 3
  %__rightComp246 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product247 = fmul float %__leftComp245, %__rightComp246
  %__dotProduct248 = fadd float %__dotProduct243, %__product247
  %__leftColumn249 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp250 = extractelement <4 x float> %__leftColumn249, i32 3
  %__rightComp251 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product252 = fmul float %__leftComp250, %__rightComp251
  %__dotProduct253 = fadd float %__dotProduct248, %__product252
  %__column254 = insertelement <4 x float> %__column234, float %__dotProduct253, i32 3
  %__resultMatrix255 = insertvalue [4 x <4 x float>] %__resultMatrix173, <4 x float> %__column254, 1
  %__rightColumn256 = extractvalue [4 x <4 x float>] %__matrix95, 2
  %__leftColumn257 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp258 = extractelement <4 x float> %__leftColumn257, i32 0
  %__rightComp259 = extractelement <4 x float> %__rightColumn256, i32 0
  %__product260 = fmul float %__leftComp258, %__rightComp259
  %__leftColumn261 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp262 = extractelement <4 x float> %__leftColumn261, i32 0
  %__rightComp263 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product264 = fmul float %__leftComp262, %__rightComp263
  %__dotProduct265 = fadd float %__product260, %__product264
  %__leftColumn266 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp267 = extractelement <4 x float> %__leftColumn266, i32 0
  %__rightComp268 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product269 = fmul float %__leftComp267, %__rightComp268
  %__dotProduct270 = fadd float %__dotProduct265, %__product269
  %__leftColumn271 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp272 = extractelement <4 x float> %__leftColumn271, i32 0
  %__rightComp273 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product274 = fmul float %__leftComp272, %__rightComp273
  %__dotProduct275 = fadd float %__dotProduct270, %__product274
  %__column276 = insertelement <4 x float> %__column254, float %__dotProduct275, i32 0
  %__leftColumn277 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp278 = extractelement <4 x float> %__leftColumn277, i32 1
  %__rightComp279 = extractelement <4 x float> %__rightColumn256, i32 0
  %__product280 = fmul float %__leftComp278, %__rightComp279
  %__leftColumn281 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp282 = extractelement <4 x float> %__leftColumn281, i32 1
  %__rightComp283 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product284 = fmul float %__leftComp282, %__rightComp283
  %__dotProduct285 = fadd float %__product280, %__product284
  %__leftColumn286 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp287 = extractelement <4 x float> %__leftColumn286, i32 1
  %__rightComp288 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product289 = fmul float %__leftComp287, %__rightComp288
  %__dotProduct290 = fadd float %__dotProduct285, %__product289
  %__leftColumn291 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp292 = extractelement <4 x float> %__leftColumn291, i32 1
  %__rightComp293 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product294 = fmul float %__leftComp292, %__rightComp293
  %__dotProduct295 = fadd float %__dotProduct290, %__product294
  %__column296 = insertelement <4 x float> %__column276, float %__dotProduct295, i32 1
  %__leftColumn297 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp298 = extractelement <4 x float> %__leftColumn297, i32 2
  %__rightComp299 = extractelement <4 x float> %__rightColumn256, i32 0
  %__product300 = fmul float %__leftComp298, %__rightComp299
  %__leftColumn301 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp302 = extractelement <4 x float> %__leftColumn301, i32 2
  %__rightComp303 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product304 = fmul float %__leftComp302, %__rightComp303
  %__dotProduct305 = fadd float %__product300, %__product304
  %__leftColumn306 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp307 = extractelement <4 x float> %__leftColumn306, i32 2
  %__rightComp308 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product309 = fmul float %__leftComp307, %__rightComp308
  %__dotProduct310 = fadd float %__dotProduct305, %__product309
  %__leftColumn311 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp312 = extractelement <4 x float> %__leftColumn311, i32 2
  %__rightComp313 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product314 = fmul float %__leftComp312, %__rightComp313
  %__dotProduct315 = fadd float %__dotProduct310, %__product314
  %__column316 = insertelement <4 x float> %__column296, float %__dotProduct315, i32 2
  %__leftColumn317 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp318 = extractelement <4 x float> %__leftColumn317, i32 3
  %__rightComp319 = extractelement <4 x float> %__rightColumn256, i32 0
  %__product320 = fmul float %__leftComp318, %__rightComp319
  %__leftColumn321 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp322 = extractelement <4 x float> %__leftColumn321, i32 3
  %__rightComp323 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product324 = fmul float %__leftComp322, %__rightComp323
  %__dotProduct325 = fadd float %__product320, %__product324
  %__leftColumn326 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp327 = extractelement <4 x float> %__leftColumn326, i32 3
  %__rightComp328 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product329 = fmul float %__leftComp327, %__rightComp328
  %__dotProduct330 = fadd float %__dotProduct325, %__product329
  %__leftColumn331 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp332 = extractelement <4 x float> %__leftColumn331, i32 3
  %__rightComp333 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product334 = fmul float %__leftComp332, %__rightComp333
  %__dotProduct335 = fadd float %__dotProduct330, %__product334
  %__column336 = insertelement <4 x float> %__column316, float %__dotProduct335, i32 3
  %__resultMatrix337 = insertvalue [4 x <4 x float>] %__resultMatrix255, <4 x float> %__column336, 2
  %__rightColumn338 = extractvalue [4 x <4 x float>] %__matrix95, 3
  %__leftColumn339 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp340 = extractelement <4 x float> %__leftColumn339, i32 0
  %__rightComp341 = extractelement <4 x float> %__rightColumn338, i32 0
  %__product342 = fmul float %__leftComp340, %__rightComp341
  %__leftColumn343 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp344 = extractelement <4 x float> %__leftColumn343, i32 0
  %__rightComp345 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product346 = fmul float %__leftComp344, %__rightComp345
  %__dotProduct347 = fadd float %__product342, %__product346
  %__leftColumn348 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp349 = extractelement <4 x float> %__leftColumn348, i32 0
  %__rightComp350 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product351 = fmul float %__leftComp349, %__rightComp350
  %__dotProduct352 = fadd float %__dotProduct347, %__product351
  %__leftColumn353 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp354 = extractelement <4 x float> %__leftColumn353, i32 0
  %__rightComp355 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product356 = fmul float %__leftComp354, %__rightComp355
  %__dotProduct357 = fadd float %__dotProduct352, %__product356
  %__column358 = insertelement <4 x float> %__column336, float %__dotProduct357, i32 0
  %__leftColumn359 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp360 = extractelement <4 x float> %__leftColumn359, i32 1
  %__rightComp361 = extractelement <4 x float> %__rightColumn338, i32 0
  %__product362 = fmul float %__leftComp360, %__rightComp361
  %__leftColumn363 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp364 = extractelement <4 x float> %__leftColumn363, i32 1
  %__rightComp365 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product366 = fmul float %__leftComp364, %__rightComp365
  %__dotProduct367 = fadd float %__product362, %__product366
  %__leftColumn368 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp369 = extractelement <4 x float> %__leftColumn368, i32 1
  %__rightComp370 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product371 = fmul float %__leftComp369, %__rightComp370
  %__dotProduct372 = fadd float %__dotProduct367, %__product371
  %__leftColumn373 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp374 = extractelement <4 x float> %__leftColumn373, i32 1
  %__rightComp375 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product376 = fmul float %__leftComp374, %__rightComp375
  %__dotProduct377 = fadd float %__dotProduct372, %__product376
  %__column378 = insertelement <4 x float> %__column358, float %__dotProduct377, i32 1
  %__leftColumn379 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp380 = extractelement <4 x float> %__leftColumn379, i32 2
  %__rightComp381 = extractelement <4 x float> %__rightColumn338, i32 0
  %__product382 = fmul float %__leftComp380, %__rightComp381
  %__leftColumn383 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp384 = extractelement <4 x float> %__leftColumn383, i32 2
  %__rightComp385 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product386 = fmul float %__leftComp384, %__rightComp385
  %__dotProduct387 = fadd float %__product382, %__product386
  %__leftColumn388 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp389 = extractelement <4 x float> %__leftColumn388, i32 2
  %__rightComp390 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product391 = fmul float %__leftComp389, %__rightComp390
  %__dotProduct392 = fadd float %__dotProduct387, %__product391
  %__leftColumn393 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp394 = extractelement <4 x float> %__leftColumn393, i32 2
  %__rightComp395 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product396 = fmul float %__leftComp394, %__rightComp395
  %__dotProduct397 = fadd float %__dotProduct392, %__product396
  %__column398 = insertelement <4 x float> %__column378, float %__dotProduct397, i32 2
  %__leftColumn399 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp400 = extractelement <4 x float> %__leftColumn399, i32 3
  %__rightComp401 = extractelement <4 x float> %__rightColumn338, i32 0
  %__product402 = fmul float %__leftComp400, %__rightComp401
  %__leftColumn403 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp404 = extractelement <4 x float> %__leftColumn403, i32 3
  %__rightComp405 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product406 = fmul float %__leftComp404, %__rightComp405
  %__dotProduct407 = fadd float %__product402, %__product406
  %__leftColumn408 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp409 = extractelement <4 x float> %__leftColumn408, i32 3
  %__rightComp410 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product411 = fmul float %__leftComp409, %__rightComp410
  %__dotProduct412 = fadd float %__dotProduct407, %__product411
  %__leftColumn413 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp414 = extractelement <4 x float> %__leftColumn413, i32 3
  %__rightComp415 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product416 = fmul float %__leftComp414, %__rightComp415
  %__dotProduct417 = fadd float %__dotProduct412, %__product416
  %__column418 = insertelement <4 x float> %__column398, float %__dotProduct417, i32 3
  %__resultMatrix419 = insertvalue [4 x <4 x float>] %__resultMatrix337, <4 x float> %__column418, 3
  store [4 x <4 x float>] %__resultMatrix419, [4 x <4 x float>]* %m44
  %__matrix420 = load [4 x <4 x float>]* %m44
  %140 = alloca [4 x <4 x float>]
  %141 = load [4 x <4 x float>]* %140
  %__column421 = extractvalue [4 x <4 x float>] %__matrix420, 0
  %__row422 = extractelement <4 x float> %__column421, i32 0
  %142 = fsub float 0.000000e+00, %__row422
  %143 = insertelement <4 x float> %__column421, float %142, i32 0
  %__row423 = extractelement <4 x float> %143, i32 1
  %144 = fsub float 0.000000e+00, %__row423
  %145 = insertelement <4 x float> %143, float %144, i32 1
  %__row424 = extractelement <4 x float> %145, i32 2
  %146 = fsub float 0.000000e+00, %__row424
  %147 = insertelement <4 x float> %145, float %146, i32 2
  %__row425 = extractelement <4 x float> %147, i32 3
  %148 = fsub float 0.000000e+00, %__row425
  %149 = insertelement <4 x float> %147, float %148, i32 3
  %150 = insertvalue [4 x <4 x float>] %141, <4 x float> %149, 0
  %__column426 = extractvalue [4 x <4 x float>] %__matrix420, 1
  %__row427 = extractelement <4 x float> %__column426, i32 0
  %151 = fsub float 0.000000e+00, %__row427
  %152 = insertelement <4 x float> %__column426, float %151, i32 0
  %__row428 = extractelement <4 x float> %152, i32 1
  %153 = fsub float 0.000000e+00, %__row428
  %154 = insertelement <4 x float> %152, float %153, i32 1
  %__row429 = extractelement <4 x float> %154, i32 2
  %155 = fsub float 0.000000e+00, %__row429
  %156 = insertelement <4 x float> %154, float %155, i32 2
  %__row430 = extractelement <4 x float> %156, i32 3
  %157 = fsub float 0.000000e+00, %__row430
  %158 = insertelement <4 x float> %156, float %157, i32 3
  %159 = insertvalue [4 x <4 x float>] %150, <4 x float> %158, 1
  %__column431 = extractvalue [4 x <4 x float>] %__matrix420, 2
  %__row432 = extractelement <4 x float> %__column431, i32 0
  %160 = fsub float 0.000000e+00, %__row432
  %161 = insertelement <4 x float> %__column431, float %160, i32 0
  %__row433 = extractelement <4 x float> %161, i32 1
  %162 = fsub float 0.000000e+00, %__row433
  %163 = insertelement <4 x float> %161, float %162, i32 1
  %__row434 = extractelement <4 x float> %163, i32 2
  %164 = fsub float 0.000000e+00, %__row434
  %165 = insertelement <4 x float> %163, float %164, i32 2
  %__row435 = extractelement <4 x float> %165, i32 3
  %166 = fsub float 0.000000e+00, %__row435
  %167 = insertelement <4 x float> %165, float %166, i32 3
  %168 = insertvalue [4 x <4 x float>] %159, <4 x float> %167, 2
  %__column436 = extractvalue [4 x <4 x float>] %__matrix420, 3
  %__row437 = extractelement <4 x float> %__column436, i32 0
  %169 = fsub float 0.000000e+00, %__row437
  %170 = insertelement <4 x float> %__column436, float %169, i32 0
  %__row438 = extractelement <4 x float> %170, i32 1
  %171 = fsub float 0.000000e+00, %__row438
  %172 = insertelement <4 x float> %170, float %171, i32 1
  %__row439 = extractelement <4 x float> %172, i32 2
  %173 = fsub float 0.000000e+00, %__row439
  %174 = insertelement <4 x float> %172, float %173, i32 2
  %__row440 = extractelement <4 x float> %174, i32 3
  %175 = fsub float 0.000000e+00, %__row440
  %176 = insertelement <4 x float> %174, float %175, i32 3
  %177 = insertvalue [4 x <4 x float>] %168, <4 x float> %176, 3
  %u__441 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %u__441, <4 x float>* @u_shadow
  %178 = load <4 x float>* @u_shadow
  %179 = alloca <4 x float>
  %180 = load <4 x float>* %179
  %__component = extractelement <4 x float> %178, i32 0
  %__component442 = extractelement <4 x float> %178, i32 1
  %__component443 = extractelement <4 x float> %178, i32 2
  %__component444 = extractelement <4 x float> %178, i32 3
  %__column445 = extractvalue [4 x <4 x float>] %177, 0
  %__element = extractelement <4 x float> %__column445, i32 0
  %__product446 = fmul float %__element, %__component
  %__column447 = extractvalue [4 x <4 x float>] %177, 1
  %__element448 = extractelement <4 x float> %__column447, i32 0
  %__product449 = fmul float %__element448, %__component442
  %__dotProduct450 = fadd float %__product446, %__product449
  %__column451 = extractvalue [4 x <4 x float>] %177, 2
  %__element452 = extractelement <4 x float> %__column451, i32 0
  %__product453 = fmul float %__element452, %__component443
  %__dotProduct454 = fadd float %__dotProduct450, %__product453
  %__column455 = extractvalue [4 x <4 x float>] %177, 3
  %__element456 = extractelement <4 x float> %__column455, i32 0
  %__product457 = fmul float %__element456, %__component444
  %__dotProduct458 = fadd float %__dotProduct454, %__product457
  %181 = insertelement <4 x float> %180, float %__dotProduct458, i32 0
  %__column459 = extractvalue [4 x <4 x float>] %177, 0
  %__element460 = extractelement <4 x float> %__column459, i32 1
  %__product461 = fmul float %__element460, %__component
  %__column462 = extractvalue [4 x <4 x float>] %177, 1
  %__element463 = extractelement <4 x float> %__column462, i32 1
  %__product464 = fmul float %__element463, %__component442
  %__dotProduct465 = fadd float %__product461, %__product464
  %__column466 = extractvalue [4 x <4 x float>] %177, 2
  %__element467 = extractelement <4 x float> %__column466, i32 1
  %__product468 = fmul float %__element467, %__component443
  %__dotProduct469 = fadd float %__dotProduct465, %__product468
  %__column470 = extractvalue [4 x <4 x float>] %177, 3
  %__element471 = extractelement <4 x float> %__column470, i32 1
  %__product472 = fmul float %__element471, %__component444
  %__dotProduct473 = fadd float %__dotProduct469, %__product472
  %182 = insertelement <4 x float> %181, float %__dotProduct473, i32 1
  %__column474 = extractvalue [4 x <4 x float>] %177, 0
  %__element475 = extractelement <4 x float> %__column474, i32 2
  %__product476 = fmul float %__element475, %__component
  %__column477 = extractvalue [4 x <4 x float>] %177, 1
  %__element478 = extractelement <4 x float> %__column477, i32 2
  %__product479 = fmul float %__element478, %__component442
  %__dotProduct480 = fadd float %__product476, %__product479
  %__column481 = extractvalue [4 x <4 x float>] %177, 2
  %__element482 = extractelement <4 x float> %__column481, i32 2
  %__product483 = fmul float %__element482, %__component443
  %__dotProduct484 = fadd float %__dotProduct480, %__product483
  %__column485 = extractvalue [4 x <4 x float>] %177, 3
  %__element486 = extractelement <4 x float> %__column485, i32 2
  %__product487 = fmul float %__element486, %__component444
  %__dotProduct488 = fadd float %__dotProduct484, %__product487
  %183 = insertelement <4 x float> %182, float %__dotProduct488, i32 2
  %__column489 = extractvalue [4 x <4 x float>] %177, 0
  %__element490 = extractelement <4 x float> %__column489, i32 3
  %__product491 = fmul float %__element490, %__component
  %__column492 = extractvalue [4 x <4 x float>] %177, 1
  %__element493 = extractelement <4 x float> %__column492, i32 3
  %__product494 = fmul float %__element493, %__component442
  %__dotProduct495 = fadd float %__product491, %__product494
  %__column496 = extractvalue [4 x <4 x float>] %177, 2
  %__element497 = extractelement <4 x float> %__column496, i32 3
  %__product498 = fmul float %__element497, %__component443
  %__dotProduct499 = fadd float %__dotProduct495, %__product498
  %__column500 = extractvalue [4 x <4 x float>] %177, 3
  %__element501 = extractelement <4 x float> %__column500, i32 3
  %__product502 = fmul float %__element501, %__component444
  %__dotProduct503 = fadd float %__dotProduct499, %__product502
  %184 = insertelement <4 x float> %183, float %__dotProduct503, i32 3
  %185 = load <4 x float>* @FragColor_shadow
  %FragColor_shadow504 = fadd <4 x float> %185, %184
  store <4 x float> %FragColor_shadow504, <4 x float>* @FragColor_shadow
  %__matrix505 = load [4 x <4 x float>]* %m44
  %__matrix506 = load [4 x <4 x float>]* %m44
  %186 = alloca [4 x <4 x float>]
  %187 = load [4 x <4 x float>]* %186
  %__leftColumn507 = extractvalue [4 x <4 x float>] %__matrix505, 0
  %__rightColumn508 = extractvalue [4 x <4 x float>] %__matrix506, 0
  %__column509 = fmul <4 x float> %__leftColumn507, %__rightColumn508
  %188 = insertvalue [4 x <4 x float>] %187, <4 x float> %__column509, 0
  %__leftColumn510 = extractvalue [4 x <4 x float>] %__matrix505, 1
  %__rightColumn511 = extractvalue [4 x <4 x float>] %__matrix506, 1
  %__column512 = fmul <4 x float> %__leftColumn510, %__rightColumn511
  %189 = insertvalue [4 x <4 x float>] %188, <4 x float> %__column512, 1
  %__leftColumn513 = extractvalue [4 x <4 x float>] %__matrix505, 2
  %__rightColumn514 = extractvalue [4 x <4 x float>] %__matrix506, 2
  %__column515 = fmul <4 x float> %__leftColumn513, %__rightColumn514
  %190 = insertvalue [4 x <4 x float>] %189, <4 x float> %__column515, 2
  %__leftColumn516 = extractvalue [4 x <4 x float>] %__matrix505, 3
  %__rightColumn517 = extractvalue [4 x <4 x float>] %__matrix506, 3
  %__column518 = fmul <4 x float> %__leftColumn516, %__rightColumn517
  %191 = insertvalue [4 x <4 x float>] %190, <4 x float> %__column518, 3
  %192 = load <4 x float>* @FragColor_shadow
  %193 = alloca <4 x float>
  %194 = load <4 x float>* %193
  %__column519 = extractvalue [4 x <4 x float>] %191, 0
  %__dot520 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %192, <4 x float> %__column519)
  %195 = insertelement <4 x float> %194, float %__dot520, i32 0
  %__column521 = extractvalue [4 x <4 x float>] %191, 1
  %__dot522 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %192, <4 x float> %__column521)
  %196 = insertelement <4 x float> %195, float %__dot522, i32 1
  %__column523 = extractvalue [4 x <4 x float>] %191, 2
  %__dot524 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %192, <4 x float> %__column523)
  %197 = insertelement <4 x float> %196, float %__dot524, i32 2
  %__column525 = extractvalue [4 x <4 x float>] %191, 3
  %__dot526 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %192, <4 x float> %__column525)
  %FragColor_shadow527 = insertelement <4 x float> %197, float %__dot526, i32 3
  store <4 x float> %FragColor_shadow527, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %198 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %198)
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) nounwind readnone

declare float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float>, <4 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind


Bottom IR:
; ModuleID = 'Top'

@um43 = external addrspace(2) constant [4 x <4 x float>]

define fastcc void @main() {
entry:
  %Color__ = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 2, i32 -1, i32 1)
  %0 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float> undef, i32 15, <3 x float> %Color__, i32 0, <3 x float> %Color__, i32 1, <3 x float> %Color__, i32 2, float 1.000000e+00, i32 0)
  %__matrix64 = load [4 x <4 x float>] addrspace(2)* @um43, align 16
  %__column65 = extractvalue [4 x <4 x float>] %__matrix64, 0
  %__dot = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %__column65)
  %__column66 = extractvalue [4 x <4 x float>] %__matrix64, 1
  %__dot67 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %__column66)
  %__column68 = extractvalue [4 x <4 x float>] %__matrix64, 2
  %__dot69 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %__column68)
  %__column70 = extractvalue [4 x <4 x float>] %__matrix64, 3
  %__dot71 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %__column70)
  %1 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__dot, i32 0, float %__dot67, i32 0, float %__dot69, i32 0, float %__dot71, i32 0)
  %__rightComp = extractelement <4 x float> %__column65, i32 0
  %__product = fmul float %__rightComp, 0x4012CCCCC0000000
  %__rightComp119 = extractelement <4 x float> %__column65, i32 1
  %__product120 = fmul float %__rightComp119, 0x4012CCCCC0000000
  %__rightComp144 = extractelement <4 x float> %__column65, i32 2
  %__product145 = fmul float %__rightComp144, 0x4012CCCCC0000000
  %__rightComp169 = extractelement <4 x float> %__column65, i32 3
  %__product170 = fmul float %__rightComp169, 0x4012CCCCC0000000
  %2 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__product, i32 0, float %__product120, i32 0, float %__product145, i32 0, float %__product170, i32 0)
  %__rightComp177 = extractelement <4 x float> %__column66, i32 0
  %__product178 = fmul float %__rightComp177, 0x4012CCCCC0000000
  %__rightComp201 = extractelement <4 x float> %__column66, i32 1
  %__product202 = fmul float %__rightComp201, 0x4012CCCCC0000000
  %__rightComp226 = extractelement <4 x float> %__column66, i32 2
  %__product227 = fmul float %__rightComp226, 0x4012CCCCC0000000
  %__rightComp251 = extractelement <4 x float> %__column66, i32 3
  %__product252 = fmul float %__rightComp251, 0x4012CCCCC0000000
  %3 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__product178, i32 0, float %__product202, i32 0, float %__product227, i32 0, float %__product252, i32 0)
  %__rightComp259 = extractelement <4 x float> %__column68, i32 0
  %__product260 = fmul float %__rightComp259, 0x4012CCCCC0000000
  %__rightComp283 = extractelement <4 x float> %__column68, i32 1
  %__product284 = fmul float %__rightComp283, 0x4012CCCCC0000000
  %__rightComp308 = extractelement <4 x float> %__column68, i32 2
  %__product309 = fmul float %__rightComp308, 0x4012CCCCC0000000
  %__rightComp333 = extractelement <4 x float> %__column68, i32 3
  %__product334 = fmul float %__rightComp333, 0x4012CCCCC0000000
  %4 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__product260, i32 0, float %__product284, i32 0, float %__product309, i32 0, float %__product334, i32 0)
  %__rightComp341 = extractelement <4 x float> %__column70, i32 0
  %__product342 = fmul float %__rightComp341, 0x4012CCCCC0000000
  %__rightComp365 = extractelement <4 x float> %__column70, i32 1
  %__product366 = fmul float %__rightComp365, 0x4012CCCCC0000000
  %__rightComp390 = extractelement <4 x float> %__column70, i32 2
  %__product391 = fmul float %__rightComp390, 0x4012CCCCC0000000
  %__rightComp415 = extractelement <4 x float> %__column70, i32 3
  %__product416 = fmul float %__rightComp415, 0x4012CCCCC0000000
  %5 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__product342, i32 0, float %__product366, i32 0, float %__product391, i32 0, float %__product416, i32 0)
  %6 = fsub float 0.000000e+00, %__product
  %7 = fsub float 0.000000e+00, %__product120
  %8 = fsub float 0.000000e+00, %__product145
  %9 = fsub float 0.000000e+00, %__product170
  %10 = fsub float 0.000000e+00, %__product178
  %11 = fsub float 0.000000e+00, %__product202
  %12 = fsub float 0.000000e+00, %__product227
  %13 = fsub float 0.000000e+00, %__product252
  %14 = fsub float 0.000000e+00, %__product260
  %15 = fsub float 0.000000e+00, %__product284
  %16 = fsub float 0.000000e+00, %__product309
  %17 = fsub float 0.000000e+00, %__product334
  %18 = fsub float 0.000000e+00, %__product342
  %19 = fsub float 0.000000e+00, %__product366
  %20 = fsub float 0.000000e+00, %__product391
  %21 = fsub float 0.000000e+00, %__product416
  %u__441 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %__component = extractelement <4 x float> %u__441, i32 0
  %__component442 = extractelement <4 x float> %u__441, i32 1
  %__component443 = extractelement <4 x float> %u__441, i32 2
  %__component444 = extractelement <4 x float> %u__441, i32 3
  %__product446 = fmul float %6, %__component
  %__product449 = fmul float %10, %__component442
  %__dotProduct450 = fadd float %__product446, %__product449
  %__product453 = fmul float %14, %__component443
  %__dotProduct454 = fadd float %__dotProduct450, %__product453
  %__product457 = fmul float %18, %__component444
  %__dotProduct458 = fadd float %__dotProduct454, %__product457
  %__product461 = fmul float %7, %__component
  %__product464 = fmul float %11, %__component442
  %__dotProduct465 = fadd float %__product461, %__product464
  %__product468 = fmul float %15, %__component443
  %__dotProduct469 = fadd float %__dotProduct465, %__product468
  %__product472 = fmul float %19, %__component444
  %__dotProduct473 = fadd float %__dotProduct469, %__product472
  %__product476 = fmul float %8, %__component
  %__product479 = fmul float %12, %__component442
  %__dotProduct480 = fadd float %__product476, %__product479
  %__product483 = fmul float %16, %__component443
  %__dotProduct484 = fadd float %__dotProduct480, %__product483
  %__product487 = fmul float %20, %__component444
  %__dotProduct488 = fadd float %__dotProduct484, %__product487
  %__product491 = fmul float %9, %__component
  %__product494 = fmul float %13, %__component442
  %__dotProduct495 = fadd float %__product491, %__product494
  %__product498 = fmul float %17, %__component443
  %__dotProduct499 = fadd float %__dotProduct495, %__product498
  %__product502 = fmul float %21, %__component444
  %__dotProduct503 = fadd float %__dotProduct499, %__product502
  %22 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__dotProduct458, i32 0, float %__dotProduct473, i32 0, float %__dotProduct488, i32 0, float %__dotProduct503, i32 0)
  %FragColor_shadow504 = fadd <4 x float> %1, %22
  %__column509 = fmul <4 x float> %2, %2
  %__dot520 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %FragColor_shadow504, <4 x float> %__column509)
  %__column512 = fmul <4 x float> %3, %3
  %__dot522 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %FragColor_shadow504, <4 x float> %__column512)
  %__column515 = fmul <4 x float> %4, %4
  %__dot524 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %FragColor_shadow504, <4 x float> %__column515)
  %__column518 = fmul <4 x float> %5, %5
  %__dot526 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %FragColor_shadow504, <4 x float> %__column518)
  %23 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__dot520, i32 0, float %__dot522, i32 0, float %__dot524, i32 0, float %__dot526, i32 0)
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %23)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) nounwind readnone

declare float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float>, <4 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float>, i32, float, i32, float, i32, float, i32, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, float, i32) nounwind readnone
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r471) output
#version 130
uniform vec4[4] um43;
in vec3 Color;
const float const22_1f = 1.0;
const float const33_5f = 4.7;
const float const54_0f = 0.0;
in vec4 u;

void main()
{
    vec4 temp21 = vec4(Color.x, Color.y, Color.z, const22_1f);
    vec4 __column65 = um43[0];
    float __dot = dot(temp21, __column65);
    vec4 __column66 = um43[1];
    float __dot67 = dot(temp21, __column66);
    vec4 __column68 = um43[2];
    float __dot69 = dot(temp21, __column68);
    vec4 __column70 = um43[3];
    float __dot71 = dot(temp21, __column70);
    vec4 temp31 = vec4(__dot, __dot67, __dot69, __dot71);
    float __product = __column65.x * const33_5f;
    float __product120 = __column65.y * const33_5f;
    float __product145 = __column65.z * const33_5f;
    float __product170 = __column65.w * const33_5f;
    vec4 temp37 = vec4(__product, __product120, __product145, __product170);
    float __product178 = __column66.x * const33_5f;
    float __product202 = __column66.y * const33_5f;
    float __product227 = __column66.z * const33_5f;
    float __product252 = __column66.w * const33_5f;
    vec4 temp42 = vec4(__product178, __product202, __product227, __product252);
    float __product260 = __column68.x * const33_5f;
    float __product284 = __column68.y * const33_5f;
    float __product309 = __column68.z * const33_5f;
    float __product334 = __column68.w * const33_5f;
    vec4 temp47 = vec4(__product260, __product284, __product309, __product334);
    float __product342 = __column70.x * const33_5f;
    float __product366 = __column70.y * const33_5f;
    float __product391 = __column70.z * const33_5f;
    float __product416 = __column70.w * const33_5f;
    vec4 temp52 = vec4(__product342, __product366, __product391, __product416);
    float temp53 = const54_0f - __product;
    float temp55 = const54_0f - __product120;
    float temp56 = const54_0f - __product145;
    float temp57 = const54_0f - __product170;
    float temp58 = const54_0f - __product178;
    float temp59 = const54_0f - __product202;
    float temp60 = const54_0f - __product227;
    float temp61 = const54_0f - __product252;
    float temp62 = const54_0f - __product260;
    float temp63 = const54_0f - __product284;
    float temp64 = const54_0f - __product309;
    float temp65 = const54_0f - __product334;
    float temp66 = const54_0f - __product342;
    float temp67 = const54_0f - __product366;
    float temp68 = const54_0f - __product391;
    float temp69 = const54_0f - __product416;
    float __product446 = temp53 * u.x;
    float __product449 = temp58 * u.y;
    float __dotProduct450 = __product446 + __product449;
    float __product453 = temp62 * u.z;
    float __dotProduct454 = __dotProduct450 + __product453;
    float __product457 = temp66 * u.w;
    float __dotProduct458 = __dotProduct454 + __product457;
    float __product461 = temp55 * u.x;
    float __product464 = temp59 * u.y;
    float __dotProduct465 = __product461 + __product464;
    float __product468 = temp63 * u.z;
    float __dotProduct469 = __dotProduct465 + __product468;
    float __product472 = temp67 * u.w;
    float __dotProduct473 = __dotProduct469 + __product472;
    float __product476 = temp56 * u.x;
    float __product479 = temp60 * u.y;
    float __dotProduct480 = __product476 + __product479;
    float __product483 = temp64 * u.z;
    float __dotProduct484 = __dotProduct480 + __product483;
    float __product487 = temp68 * u.w;
    float __dotProduct488 = __dotProduct484 + __product487;
    float __product491 = temp57 * u.x;
    float __product494 = temp61 * u.y;
    float __dotProduct495 = __product491 + __product494;
    float __product498 = temp65 * u.z;
    float __dotProduct499 = __dotProduct495 + __product498;
    float __product502 = temp69 * u.w;
    float __dotProduct503 = __dotProduct499 + __product502;
    vec4 temp98 = vec4(__dotProduct458, __dotProduct473, __dotProduct488, __dotProduct503);
    vec4 FragColor_shadow504 = temp31 + temp98;
    vec4 __column509 = temp37 * temp37;
    float __dot520 = dot(FragColor_shadow504, __column509);
    vec4 __column512 = temp42 * temp42;
    float __dot522 = dot(FragColor_shadow504, __column512);
    vec4 __column515 = temp47 * temp47;
    float __dot524 = dot(FragColor_shadow504, __column515);
    vec4 __column518 = temp52 * temp52;
    float __dot526 = dot(FragColor_shadow504, __column518);
    vec4 temp108 = vec4(__dot520, __dot522, __dot524, __dot526);
    gl_FragColor = temp108;
    
}
WARNING: 0:96: Two consecutive underscores are reserved for future use.
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r471) output
#version 130
uniform vec4[4] um43;
in vec3 Color;
const float const22_1f = 1.0;
const float const33_5f = 4.7;
const float const54_0f = 0.0;
in vec4 u;

void main()
{
    vec4 temp21 = vec4(Color.x, Color.y, Color.z, const22_1f);
    vec4 __column654 = um43[0];
    float __dot5 = dot(temp21, __column654);
    vec4 __column666 = um43[1];
    float __dot677 = dot(temp21, __column666);
    vec4 __column688 = um43[2];
    float __dot699 = dot(temp21, __column688);
    vec4 __column7010 = um43[3];
    float __dot7111 = dot(temp21, __column7010);
    vec4 temp31 = vec4(__dot5, __dot677, __dot699, __dot7111);
    float __product14 = __column654.x * const33_5f;
    float __product12015 = __column654.y * const33_5f;
    float __product14516 = __column654.z * const33_5f;
    float __product17017 = __column654.w * const33_5f;
    vec4 temp37 = vec4(__product14, __product12015, __product14516, __product17017);
    float __product17820 = __column666.x * const33_5f;
    float __product20221 = __column666.y * const33_5f;
    float __product22722 = __column666.z * const33_5f;
    float __product25223 = __column666.w * const33_5f;
    vec4 temp42 = vec4(__product17820, __product20221, __product22722, __product25223);
    float __product26026 = __column688.x * const33_5f;
    float __product28427 = __column688.y * const33_5f;
    float __product30928 = __column688.z * const33_5f;
    float __product33429 = __column688.w * const33_5f;
    vec4 temp47 = vec4(__product26026, __product28427, __product30928, __product33429);
    float __product34232 = __column7010.x * const33_5f;
    float __product36633 = __column7010.y * const33_5f;
    float __product39134 = __column7010.z * const33_5f;
    float __product41635 = __column7010.w * const33_5f;
    vec4 temp52 = vec4(__product34232, __product36633, __product39134, __product41635);
    float temp5338 = const54_0f - __product14;
    float temp5539 = const54_0f - __product12015;
    float temp5640 = const54_0f - __product14516;
    float temp5741 = const54_0f - __product17017;
    float temp5842 = const54_0f - __product17820;
    float temp5943 = const54_0f - __product20221;
    float temp6044 = const54_0f - __product22722;
    float temp6145 = const54_0f - __product25223;
    float temp6246 = const54_0f - __product26026;
    float temp6347 = const54_0f - __product28427;
    float temp6448 = const54_0f - __product30928;
    float temp6549 = const54_0f - __product33429;
    float temp6650 = const54_0f - __product34232;
    float temp6751 = const54_0f - __product36633;
    float temp6852 = const54_0f - __product39134;
    float temp6953 = const54_0f - __product41635;
    float __product44654 = temp5338 * u.x;
    float __product44956 = temp5842 * u.y;
    float __dotProduct45057 = __product44654 + __product44956;
    float __product45359 = temp6246 * u.z;
    float __dotProduct45460 = __dotProduct45057 + __product45359;
    float __product45762 = temp6650 * u.w;
    float __dotProduct45863 = __dotProduct45460 + __product45762;
    float __product46165 = temp5539 * u.x;
    float __product46467 = temp5943 * u.y;
    float __dotProduct46568 = __product46165 + __product46467;
    float __product46870 = temp6347 * u.z;
    float __dotProduct46971 = __dotProduct46568 + __product46870;
    float __product47273 = temp6751 * u.w;
    float __dotProduct47374 = __dotProduct46971 + __product47273;
    float __product47676 = temp5640 * u.x;
    float __product47978 = temp6044 * u.y;
    float __dotProduct48079 = __product47676 + __product47978;
    float __product48381 = temp6448 * u.z;
    float __dotProduct48482 = __dotProduct48079 + __product48381;
    float __product48784 = temp6852 * u.w;
    float __dotProduct48885 = __dotProduct48482 + __product48784;
    float __product49187 = temp5741 * u.x;
    float __product49489 = temp6145 * u.y;
    float __dotProduct49590 = __product49187 + __product49489;
    float __product49892 = temp6549 * u.z;
    float __dotProduct49993 = __dotProduct49590 + __product49892;
    float __product50295 = temp6953 * u.w;
    float __dotProduct50396 = __dotProduct49993 + __product50295;
    vec4 temp98 = vec4(__dotProduct45863, __dotProduct47374, __dotProduct48885, __dotProduct50396);
    vec4 FragColor_shadow50499 = temp31 + temp98;
    vec4 __column509100 = temp37 * temp37;
    vec4 __column512102 = temp42 * temp42;
    float __dot520101 = dot(FragColor_shadow50499, __column509100);
    vec4 __column515104 = temp47 * temp47;
    float __dot522103 = dot(FragColor_shadow50499, __column512102);
    vec4 __column518106 = temp52 * temp52;
    float __dot524105 = dot(FragColor_shadow50499, __column515104);
    float __dot526107 = dot(FragColor_shadow50499, __column518106);
    vec4 temp108 = vec4(__dot520101, __dot522103, __dot524105, __dot526107);
    gl_FragColor = temp108;
    
}
