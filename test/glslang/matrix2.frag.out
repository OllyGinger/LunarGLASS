
Top IR:
; ModuleID = 'Top'

@gl_FragColor = internal global <4 x float> zeroinitializer
@um43 = external addrspace(2) constant [4 x <4 x float>]

define fastcc void @main() {
entry:
  %m44 = alloca [4 x <4 x float>]
  %constructed63 = alloca <4 x float>
  %constructed = alloca [4 x <4 x float>]
  %m34 = alloca [4 x <4 x float>]
  %v = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %0 = extractelement <4 x float> %v, i32 0
  %u = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %1 = extractelement <4 x float> %u, i32 0
  %2 = fmul float %0, %1
  %v1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %3 = extractelement <4 x float> %v1, i32 0
  %u2 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %4 = extractelement <4 x float> %u2, i32 1
  %5 = fmul float %3, %4
  %v3 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %6 = extractelement <4 x float> %v3, i32 0
  %u4 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %7 = extractelement <4 x float> %u4, i32 2
  %8 = fmul float %6, %7
  %v5 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %9 = extractelement <4 x float> %v5, i32 0
  %u6 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %10 = extractelement <4 x float> %u6, i32 3
  %11 = fmul float %9, %10
  %v7 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %12 = extractelement <4 x float> %v7, i32 1
  %u8 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %13 = extractelement <4 x float> %u8, i32 0
  %14 = fmul float %12, %13
  %v9 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %15 = extractelement <4 x float> %v9, i32 1
  %u10 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %16 = extractelement <4 x float> %u10, i32 1
  %17 = fmul float %15, %16
  %v11 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %18 = extractelement <4 x float> %v11, i32 1
  %u12 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %19 = extractelement <4 x float> %u12, i32 2
  %20 = fmul float %18, %19
  %v13 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %21 = extractelement <4 x float> %v13, i32 1
  %u14 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %22 = extractelement <4 x float> %u14, i32 3
  %23 = fmul float %21, %22
  %v15 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %24 = extractelement <4 x float> %v15, i32 2
  %u16 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %25 = extractelement <4 x float> %u16, i32 0
  %26 = fmul float %24, %25
  %v17 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %27 = extractelement <4 x float> %v17, i32 2
  %u18 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %28 = extractelement <4 x float> %u18, i32 1
  %29 = fmul float %27, %28
  %v19 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %30 = extractelement <4 x float> %v19, i32 2
  %u20 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %31 = extractelement <4 x float> %u20, i32 2
  %32 = fmul float %30, %31
  %v21 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %33 = extractelement <4 x float> %v21, i32 2
  %u22 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %34 = extractelement <4 x float> %u22, i32 3
  %35 = fmul float %33, %34
  %v23 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %36 = extractelement <4 x float> %v23, i32 3
  %u24 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %37 = extractelement <4 x float> %u24, i32 0
  %38 = fmul float %36, %37
  %v25 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %39 = extractelement <4 x float> %v25, i32 3
  %u26 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %40 = extractelement <4 x float> %u26, i32 1
  %41 = fmul float %39, %40
  %v27 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %42 = extractelement <4 x float> %v27, i32 3
  %u28 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %43 = extractelement <4 x float> %u28, i32 2
  %44 = fmul float %42, %43
  %v29 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %45 = extractelement <4 x float> %v29, i32 3
  %u30 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %46 = extractelement <4 x float> %u30, i32 3
  %47 = fmul float %45, %46
  %__matrix = load [4 x <4 x float>]* %constructed
  %__column = extractvalue [4 x <4 x float>] %__matrix, 0
  %__column31 = insertelement <4 x float> %__column, float %2, i32 0
  %__column32 = insertelement <4 x float> %__column31, float %5, i32 1
  %__column33 = insertelement <4 x float> %__column32, float %8, i32 2
  %__column34 = insertelement <4 x float> %__column33, float %11, i32 3
  %__matrix35 = insertvalue [4 x <4 x float>] %__matrix, <4 x float> %__column34, 0
  %__column36 = extractvalue [4 x <4 x float>] %__matrix, 1
  %__column37 = insertelement <4 x float> %__column36, float %14, i32 0
  %__column38 = insertelement <4 x float> %__column37, float %17, i32 1
  %__column39 = insertelement <4 x float> %__column38, float %20, i32 2
  %__column40 = insertelement <4 x float> %__column39, float %23, i32 3
  %__matrix41 = insertvalue [4 x <4 x float>] %__matrix35, <4 x float> %__column40, 1
  %__column42 = extractvalue [4 x <4 x float>] %__matrix, 2
  %__column43 = insertelement <4 x float> %__column42, float %26, i32 0
  %__column44 = insertelement <4 x float> %__column43, float %29, i32 1
  %__column45 = insertelement <4 x float> %__column44, float %32, i32 2
  %__column46 = insertelement <4 x float> %__column45, float %35, i32 3
  %__matrix47 = insertvalue [4 x <4 x float>] %__matrix41, <4 x float> %__column46, 2
  %__column48 = extractvalue [4 x <4 x float>] %__matrix, 3
  %__column49 = insertelement <4 x float> %__column48, float %38, i32 0
  %__column50 = insertelement <4 x float> %__column49, float %41, i32 1
  %__column51 = insertelement <4 x float> %__column50, float %44, i32 2
  %__column52 = insertelement <4 x float> %__column51, float %47, i32 3
  %__matrix53 = insertvalue [4 x <4 x float>] %__matrix47, <4 x float> %__column52, 3
  store [4 x <4 x float>] %__matrix53, [4 x <4 x float>]* %m34
  %__matrix54 = load [4 x <4 x float>]* %m34
  %48 = alloca [4 x <4 x float>]
  %49 = load [4 x <4 x float>]* %48
  %__leftColumn = extractvalue [4 x <4 x float>] %__matrix54, 0
  %__column55 = fadd <4 x float> %__leftColumn, <float 0x4011333340000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>
  %50 = insertvalue [4 x <4 x float>] %49, <4 x float> %__column55, 0
  %__leftColumn56 = extractvalue [4 x <4 x float>] %__matrix54, 1
  %__column57 = fadd <4 x float> %__leftColumn56, <float 0.000000e+00, float 0x4011333340000000, float 0.000000e+00, float 0.000000e+00>
  %51 = insertvalue [4 x <4 x float>] %50, <4 x float> %__column57, 1
  %__leftColumn58 = extractvalue [4 x <4 x float>] %__matrix54, 2
  %__column59 = fadd <4 x float> %__leftColumn58, <float 0.000000e+00, float 0.000000e+00, float 0x4011333340000000, float 0.000000e+00>
  %52 = insertvalue [4 x <4 x float>] %51, <4 x float> %__column59, 2
  %__leftColumn60 = extractvalue [4 x <4 x float>] %__matrix54, 3
  %__column61 = fadd <4 x float> %__leftColumn60, <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x4011333340000000>
  %m3462 = insertvalue [4 x <4 x float>] %52, <4 x float> %__column61, 3
  store [4 x <4 x float>] %m3462, [4 x <4 x float>]* %m34
  %Color = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 2, i32 -1, i32 1)
  %53 = load <4 x float>* %constructed63
  %54 = extractelement <3 x float> %Color, i32 0
  %55 = insertelement <4 x float> %53, float %54, i32 0
  %56 = extractelement <3 x float> %Color, i32 1
  %57 = insertelement <4 x float> %55, float %56, i32 1
  %58 = extractelement <3 x float> %Color, i32 2
  %59 = insertelement <4 x float> %57, float %58, i32 2
  %gl_FragColor = insertelement <4 x float> %59, float 1.000000e+00, i32 3
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  %__matrix64 = load [4 x <4 x float>] addrspace(2)* @um43
  %60 = load <4 x float>* @gl_FragColor
  %61 = alloca <4 x float>
  %62 = load <4 x float>* %61
  %__column65 = extractvalue [4 x <4 x float>] %__matrix64, 0
  %__dot = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %60, <4 x float> %__column65)
  %63 = insertelement <4 x float> %62, float %__dot, i32 0
  %__column66 = extractvalue [4 x <4 x float>] %__matrix64, 1
  %__dot67 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %60, <4 x float> %__column66)
  %64 = insertelement <4 x float> %63, float %__dot67, i32 1
  %__column68 = extractvalue [4 x <4 x float>] %__matrix64, 2
  %__dot69 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %60, <4 x float> %__column68)
  %65 = insertelement <4 x float> %64, float %__dot69, i32 2
  %__column70 = extractvalue [4 x <4 x float>] %__matrix64, 3
  %__dot71 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %60, <4 x float> %__column70)
  %gl_FragColor72 = insertelement <4 x float> %65, float %__dot71, i32 3
  store <4 x float> %gl_FragColor72, <4 x float>* @gl_FragColor
  %v73 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 0, i32 -1, i32 1)
  %66 = extractelement <4 x float> %v73, i32 0
  %__matrix74 = load [4 x <4 x float>]* %m34
  %67 = alloca [4 x <4 x float>]
  %68 = load [4 x <4 x float>]* %67
  %__column75 = extractvalue [4 x <4 x float>] %__matrix74, 0
  %__row = extractelement <4 x float> %__column75, i32 0
  %69 = fmul float %66, %__row
  %70 = insertelement <4 x float> %__column75, float %69, i32 0
  %__row76 = extractelement <4 x float> %70, i32 1
  %71 = fmul float %66, %__row76
  %72 = insertelement <4 x float> %70, float %71, i32 1
  %__row77 = extractelement <4 x float> %72, i32 2
  %73 = fmul float %66, %__row77
  %74 = insertelement <4 x float> %72, float %73, i32 2
  %__row78 = extractelement <4 x float> %74, i32 3
  %75 = fmul float %66, %__row78
  %76 = insertelement <4 x float> %74, float %75, i32 3
  %77 = insertvalue [4 x <4 x float>] %68, <4 x float> %76, 0
  %__column79 = extractvalue [4 x <4 x float>] %__matrix74, 1
  %__row80 = extractelement <4 x float> %__column79, i32 0
  %78 = fmul float %66, %__row80
  %79 = insertelement <4 x float> %__column79, float %78, i32 0
  %__row81 = extractelement <4 x float> %79, i32 1
  %80 = fmul float %66, %__row81
  %81 = insertelement <4 x float> %79, float %80, i32 1
  %__row82 = extractelement <4 x float> %81, i32 2
  %82 = fmul float %66, %__row82
  %83 = insertelement <4 x float> %81, float %82, i32 2
  %__row83 = extractelement <4 x float> %83, i32 3
  %84 = fmul float %66, %__row83
  %85 = insertelement <4 x float> %83, float %84, i32 3
  %86 = insertvalue [4 x <4 x float>] %77, <4 x float> %85, 1
  %__column84 = extractvalue [4 x <4 x float>] %__matrix74, 2
  %__row85 = extractelement <4 x float> %__column84, i32 0
  %87 = fmul float %66, %__row85
  %88 = insertelement <4 x float> %__column84, float %87, i32 0
  %__row86 = extractelement <4 x float> %88, i32 1
  %89 = fmul float %66, %__row86
  %90 = insertelement <4 x float> %88, float %89, i32 1
  %__row87 = extractelement <4 x float> %90, i32 2
  %91 = fmul float %66, %__row87
  %92 = insertelement <4 x float> %90, float %91, i32 2
  %__row88 = extractelement <4 x float> %92, i32 3
  %93 = fmul float %66, %__row88
  %94 = insertelement <4 x float> %92, float %93, i32 3
  %95 = insertvalue [4 x <4 x float>] %86, <4 x float> %94, 2
  %__column89 = extractvalue [4 x <4 x float>] %__matrix74, 3
  %__row90 = extractelement <4 x float> %__column89, i32 0
  %96 = fmul float %66, %__row90
  %97 = insertelement <4 x float> %__column89, float %96, i32 0
  %__row91 = extractelement <4 x float> %97, i32 1
  %98 = fmul float %66, %__row91
  %99 = insertelement <4 x float> %97, float %98, i32 1
  %__row92 = extractelement <4 x float> %99, i32 2
  %100 = fmul float %66, %__row92
  %101 = insertelement <4 x float> %99, float %100, i32 2
  %__row93 = extractelement <4 x float> %101, i32 3
  %102 = fmul float %66, %__row93
  %103 = insertelement <4 x float> %101, float %102, i32 3
  %m3494 = insertvalue [4 x <4 x float>] %95, <4 x float> %103, 3
  store [4 x <4 x float>] %m3494, [4 x <4 x float>]* %m34
  store [4 x <4 x float>] [<4 x float> <float 0x4012CCCCC0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float> <float 0.000000e+00, float 0x4012CCCCC0000000, float 0.000000e+00, float 0.000000e+00>, <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0x4012CCCCC0000000, float 0.000000e+00>, <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x4012CCCCC0000000>], [4 x <4 x float>]* %m44
  %__matrix95 = load [4 x <4 x float>] addrspace(2)* @um43
  %__matrix96 = load [4 x <4 x float>]* %m44
  %104 = alloca [4 x <4 x float>]
  %__resultMatrix = load [4 x <4 x float>]* %104
  %105 = alloca <4 x float>
  %__tempColumn = load <4 x float>* %105
  %__rightColumn = extractvalue [4 x <4 x float>] %__matrix95, 0
  %__leftColumn97 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp = extractelement <4 x float> %__leftColumn97, i32 0
  %__rightComp = extractelement <4 x float> %__rightColumn, i32 0
  %__product = fmul float %__leftComp, %__rightComp
  %__leftColumn98 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp99 = extractelement <4 x float> %__leftColumn98, i32 0
  %__rightComp100 = extractelement <4 x float> %__rightColumn, i32 1
  %__product101 = fmul float %__leftComp99, %__rightComp100
  %__dotProduct = fadd float %__product, %__product101
  %__leftColumn102 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp103 = extractelement <4 x float> %__leftColumn102, i32 0
  %__rightComp104 = extractelement <4 x float> %__rightColumn, i32 2
  %__product105 = fmul float %__leftComp103, %__rightComp104
  %__dotProduct106 = fadd float %__dotProduct, %__product105
  %__leftColumn107 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp108 = extractelement <4 x float> %__leftColumn107, i32 0
  %__rightComp109 = extractelement <4 x float> %__rightColumn, i32 3
  %__product110 = fmul float %__leftComp108, %__rightComp109
  %__dotProduct111 = fadd float %__dotProduct106, %__product110
  %__column112 = insertelement <4 x float> %__tempColumn, float %__dotProduct111, i32 0
  %__leftColumn113 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp114 = extractelement <4 x float> %__leftColumn113, i32 1
  %__rightComp115 = extractelement <4 x float> %__rightColumn, i32 0
  %__product116 = fmul float %__leftComp114, %__rightComp115
  %__leftColumn117 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp118 = extractelement <4 x float> %__leftColumn117, i32 1
  %__rightComp119 = extractelement <4 x float> %__rightColumn, i32 1
  %__product120 = fmul float %__leftComp118, %__rightComp119
  %__dotProduct121 = fadd float %__product116, %__product120
  %__leftColumn122 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp123 = extractelement <4 x float> %__leftColumn122, i32 1
  %__rightComp124 = extractelement <4 x float> %__rightColumn, i32 2
  %__product125 = fmul float %__leftComp123, %__rightComp124
  %__dotProduct126 = fadd float %__dotProduct121, %__product125
  %__leftColumn127 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp128 = extractelement <4 x float> %__leftColumn127, i32 1
  %__rightComp129 = extractelement <4 x float> %__rightColumn, i32 3
  %__product130 = fmul float %__leftComp128, %__rightComp129
  %__dotProduct131 = fadd float %__dotProduct126, %__product130
  %__column132 = insertelement <4 x float> %__column112, float %__dotProduct131, i32 1
  %__leftColumn133 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp134 = extractelement <4 x float> %__leftColumn133, i32 2
  %__rightComp135 = extractelement <4 x float> %__rightColumn, i32 0
  %__product136 = fmul float %__leftComp134, %__rightComp135
  %__leftColumn137 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp138 = extractelement <4 x float> %__leftColumn137, i32 2
  %__rightComp139 = extractelement <4 x float> %__rightColumn, i32 1
  %__product140 = fmul float %__leftComp138, %__rightComp139
  %__dotProduct141 = fadd float %__product136, %__product140
  %__leftColumn142 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp143 = extractelement <4 x float> %__leftColumn142, i32 2
  %__rightComp144 = extractelement <4 x float> %__rightColumn, i32 2
  %__product145 = fmul float %__leftComp143, %__rightComp144
  %__dotProduct146 = fadd float %__dotProduct141, %__product145
  %__leftColumn147 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp148 = extractelement <4 x float> %__leftColumn147, i32 2
  %__rightComp149 = extractelement <4 x float> %__rightColumn, i32 3
  %__product150 = fmul float %__leftComp148, %__rightComp149
  %__dotProduct151 = fadd float %__dotProduct146, %__product150
  %__column152 = insertelement <4 x float> %__column132, float %__dotProduct151, i32 2
  %__leftColumn153 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp154 = extractelement <4 x float> %__leftColumn153, i32 3
  %__rightComp155 = extractelement <4 x float> %__rightColumn, i32 0
  %__product156 = fmul float %__leftComp154, %__rightComp155
  %__leftColumn157 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp158 = extractelement <4 x float> %__leftColumn157, i32 3
  %__rightComp159 = extractelement <4 x float> %__rightColumn, i32 1
  %__product160 = fmul float %__leftComp158, %__rightComp159
  %__dotProduct161 = fadd float %__product156, %__product160
  %__leftColumn162 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp163 = extractelement <4 x float> %__leftColumn162, i32 3
  %__rightComp164 = extractelement <4 x float> %__rightColumn, i32 2
  %__product165 = fmul float %__leftComp163, %__rightComp164
  %__dotProduct166 = fadd float %__dotProduct161, %__product165
  %__leftColumn167 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp168 = extractelement <4 x float> %__leftColumn167, i32 3
  %__rightComp169 = extractelement <4 x float> %__rightColumn, i32 3
  %__product170 = fmul float %__leftComp168, %__rightComp169
  %__dotProduct171 = fadd float %__dotProduct166, %__product170
  %__column172 = insertelement <4 x float> %__column152, float %__dotProduct171, i32 3
  %__resultMatrix173 = insertvalue [4 x <4 x float>] %__resultMatrix, <4 x float> %__column172, 0
  %__rightColumn174 = extractvalue [4 x <4 x float>] %__matrix95, 1
  %__leftColumn175 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp176 = extractelement <4 x float> %__leftColumn175, i32 0
  %__rightComp177 = extractelement <4 x float> %__rightColumn174, i32 0
  %__product178 = fmul float %__leftComp176, %__rightComp177
  %__leftColumn179 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp180 = extractelement <4 x float> %__leftColumn179, i32 0
  %__rightComp181 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product182 = fmul float %__leftComp180, %__rightComp181
  %__dotProduct183 = fadd float %__product178, %__product182
  %__leftColumn184 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp185 = extractelement <4 x float> %__leftColumn184, i32 0
  %__rightComp186 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product187 = fmul float %__leftComp185, %__rightComp186
  %__dotProduct188 = fadd float %__dotProduct183, %__product187
  %__leftColumn189 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp190 = extractelement <4 x float> %__leftColumn189, i32 0
  %__rightComp191 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product192 = fmul float %__leftComp190, %__rightComp191
  %__dotProduct193 = fadd float %__dotProduct188, %__product192
  %__column194 = insertelement <4 x float> %__column172, float %__dotProduct193, i32 0
  %__leftColumn195 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp196 = extractelement <4 x float> %__leftColumn195, i32 1
  %__rightComp197 = extractelement <4 x float> %__rightColumn174, i32 0
  %__product198 = fmul float %__leftComp196, %__rightComp197
  %__leftColumn199 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp200 = extractelement <4 x float> %__leftColumn199, i32 1
  %__rightComp201 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product202 = fmul float %__leftComp200, %__rightComp201
  %__dotProduct203 = fadd float %__product198, %__product202
  %__leftColumn204 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp205 = extractelement <4 x float> %__leftColumn204, i32 1
  %__rightComp206 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product207 = fmul float %__leftComp205, %__rightComp206
  %__dotProduct208 = fadd float %__dotProduct203, %__product207
  %__leftColumn209 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp210 = extractelement <4 x float> %__leftColumn209, i32 1
  %__rightComp211 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product212 = fmul float %__leftComp210, %__rightComp211
  %__dotProduct213 = fadd float %__dotProduct208, %__product212
  %__column214 = insertelement <4 x float> %__column194, float %__dotProduct213, i32 1
  %__leftColumn215 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp216 = extractelement <4 x float> %__leftColumn215, i32 2
  %__rightComp217 = extractelement <4 x float> %__rightColumn174, i32 0
  %__product218 = fmul float %__leftComp216, %__rightComp217
  %__leftColumn219 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp220 = extractelement <4 x float> %__leftColumn219, i32 2
  %__rightComp221 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product222 = fmul float %__leftComp220, %__rightComp221
  %__dotProduct223 = fadd float %__product218, %__product222
  %__leftColumn224 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp225 = extractelement <4 x float> %__leftColumn224, i32 2
  %__rightComp226 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product227 = fmul float %__leftComp225, %__rightComp226
  %__dotProduct228 = fadd float %__dotProduct223, %__product227
  %__leftColumn229 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp230 = extractelement <4 x float> %__leftColumn229, i32 2
  %__rightComp231 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product232 = fmul float %__leftComp230, %__rightComp231
  %__dotProduct233 = fadd float %__dotProduct228, %__product232
  %__column234 = insertelement <4 x float> %__column214, float %__dotProduct233, i32 2
  %__leftColumn235 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp236 = extractelement <4 x float> %__leftColumn235, i32 3
  %__rightComp237 = extractelement <4 x float> %__rightColumn174, i32 0
  %__product238 = fmul float %__leftComp236, %__rightComp237
  %__leftColumn239 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp240 = extractelement <4 x float> %__leftColumn239, i32 3
  %__rightComp241 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product242 = fmul float %__leftComp240, %__rightComp241
  %__dotProduct243 = fadd float %__product238, %__product242
  %__leftColumn244 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp245 = extractelement <4 x float> %__leftColumn244, i32 3
  %__rightComp246 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product247 = fmul float %__leftComp245, %__rightComp246
  %__dotProduct248 = fadd float %__dotProduct243, %__product247
  %__leftColumn249 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp250 = extractelement <4 x float> %__leftColumn249, i32 3
  %__rightComp251 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product252 = fmul float %__leftComp250, %__rightComp251
  %__dotProduct253 = fadd float %__dotProduct248, %__product252
  %__column254 = insertelement <4 x float> %__column234, float %__dotProduct253, i32 3
  %__resultMatrix255 = insertvalue [4 x <4 x float>] %__resultMatrix173, <4 x float> %__column254, 1
  %__rightColumn256 = extractvalue [4 x <4 x float>] %__matrix95, 2
  %__leftColumn257 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp258 = extractelement <4 x float> %__leftColumn257, i32 0
  %__rightComp259 = extractelement <4 x float> %__rightColumn256, i32 0
  %__product260 = fmul float %__leftComp258, %__rightComp259
  %__leftColumn261 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp262 = extractelement <4 x float> %__leftColumn261, i32 0
  %__rightComp263 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product264 = fmul float %__leftComp262, %__rightComp263
  %__dotProduct265 = fadd float %__product260, %__product264
  %__leftColumn266 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp267 = extractelement <4 x float> %__leftColumn266, i32 0
  %__rightComp268 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product269 = fmul float %__leftComp267, %__rightComp268
  %__dotProduct270 = fadd float %__dotProduct265, %__product269
  %__leftColumn271 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp272 = extractelement <4 x float> %__leftColumn271, i32 0
  %__rightComp273 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product274 = fmul float %__leftComp272, %__rightComp273
  %__dotProduct275 = fadd float %__dotProduct270, %__product274
  %__column276 = insertelement <4 x float> %__column254, float %__dotProduct275, i32 0
  %__leftColumn277 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp278 = extractelement <4 x float> %__leftColumn277, i32 1
  %__rightComp279 = extractelement <4 x float> %__rightColumn256, i32 0
  %__product280 = fmul float %__leftComp278, %__rightComp279
  %__leftColumn281 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp282 = extractelement <4 x float> %__leftColumn281, i32 1
  %__rightComp283 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product284 = fmul float %__leftComp282, %__rightComp283
  %__dotProduct285 = fadd float %__product280, %__product284
  %__leftColumn286 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp287 = extractelement <4 x float> %__leftColumn286, i32 1
  %__rightComp288 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product289 = fmul float %__leftComp287, %__rightComp288
  %__dotProduct290 = fadd float %__dotProduct285, %__product289
  %__leftColumn291 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp292 = extractelement <4 x float> %__leftColumn291, i32 1
  %__rightComp293 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product294 = fmul float %__leftComp292, %__rightComp293
  %__dotProduct295 = fadd float %__dotProduct290, %__product294
  %__column296 = insertelement <4 x float> %__column276, float %__dotProduct295, i32 1
  %__leftColumn297 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp298 = extractelement <4 x float> %__leftColumn297, i32 2
  %__rightComp299 = extractelement <4 x float> %__rightColumn256, i32 0
  %__product300 = fmul float %__leftComp298, %__rightComp299
  %__leftColumn301 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp302 = extractelement <4 x float> %__leftColumn301, i32 2
  %__rightComp303 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product304 = fmul float %__leftComp302, %__rightComp303
  %__dotProduct305 = fadd float %__product300, %__product304
  %__leftColumn306 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp307 = extractelement <4 x float> %__leftColumn306, i32 2
  %__rightComp308 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product309 = fmul float %__leftComp307, %__rightComp308
  %__dotProduct310 = fadd float %__dotProduct305, %__product309
  %__leftColumn311 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp312 = extractelement <4 x float> %__leftColumn311, i32 2
  %__rightComp313 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product314 = fmul float %__leftComp312, %__rightComp313
  %__dotProduct315 = fadd float %__dotProduct310, %__product314
  %__column316 = insertelement <4 x float> %__column296, float %__dotProduct315, i32 2
  %__leftColumn317 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp318 = extractelement <4 x float> %__leftColumn317, i32 3
  %__rightComp319 = extractelement <4 x float> %__rightColumn256, i32 0
  %__product320 = fmul float %__leftComp318, %__rightComp319
  %__leftColumn321 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp322 = extractelement <4 x float> %__leftColumn321, i32 3
  %__rightComp323 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product324 = fmul float %__leftComp322, %__rightComp323
  %__dotProduct325 = fadd float %__product320, %__product324
  %__leftColumn326 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp327 = extractelement <4 x float> %__leftColumn326, i32 3
  %__rightComp328 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product329 = fmul float %__leftComp327, %__rightComp328
  %__dotProduct330 = fadd float %__dotProduct325, %__product329
  %__leftColumn331 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp332 = extractelement <4 x float> %__leftColumn331, i32 3
  %__rightComp333 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product334 = fmul float %__leftComp332, %__rightComp333
  %__dotProduct335 = fadd float %__dotProduct330, %__product334
  %__column336 = insertelement <4 x float> %__column316, float %__dotProduct335, i32 3
  %__resultMatrix337 = insertvalue [4 x <4 x float>] %__resultMatrix255, <4 x float> %__column336, 2
  %__rightColumn338 = extractvalue [4 x <4 x float>] %__matrix95, 3
  %__leftColumn339 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp340 = extractelement <4 x float> %__leftColumn339, i32 0
  %__rightComp341 = extractelement <4 x float> %__rightColumn338, i32 0
  %__product342 = fmul float %__leftComp340, %__rightComp341
  %__leftColumn343 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp344 = extractelement <4 x float> %__leftColumn343, i32 0
  %__rightComp345 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product346 = fmul float %__leftComp344, %__rightComp345
  %__dotProduct347 = fadd float %__product342, %__product346
  %__leftColumn348 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp349 = extractelement <4 x float> %__leftColumn348, i32 0
  %__rightComp350 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product351 = fmul float %__leftComp349, %__rightComp350
  %__dotProduct352 = fadd float %__dotProduct347, %__product351
  %__leftColumn353 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp354 = extractelement <4 x float> %__leftColumn353, i32 0
  %__rightComp355 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product356 = fmul float %__leftComp354, %__rightComp355
  %__dotProduct357 = fadd float %__dotProduct352, %__product356
  %__column358 = insertelement <4 x float> %__column336, float %__dotProduct357, i32 0
  %__leftColumn359 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp360 = extractelement <4 x float> %__leftColumn359, i32 1
  %__rightComp361 = extractelement <4 x float> %__rightColumn338, i32 0
  %__product362 = fmul float %__leftComp360, %__rightComp361
  %__leftColumn363 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp364 = extractelement <4 x float> %__leftColumn363, i32 1
  %__rightComp365 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product366 = fmul float %__leftComp364, %__rightComp365
  %__dotProduct367 = fadd float %__product362, %__product366
  %__leftColumn368 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp369 = extractelement <4 x float> %__leftColumn368, i32 1
  %__rightComp370 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product371 = fmul float %__leftComp369, %__rightComp370
  %__dotProduct372 = fadd float %__dotProduct367, %__product371
  %__leftColumn373 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp374 = extractelement <4 x float> %__leftColumn373, i32 1
  %__rightComp375 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product376 = fmul float %__leftComp374, %__rightComp375
  %__dotProduct377 = fadd float %__dotProduct372, %__product376
  %__column378 = insertelement <4 x float> %__column358, float %__dotProduct377, i32 1
  %__leftColumn379 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp380 = extractelement <4 x float> %__leftColumn379, i32 2
  %__rightComp381 = extractelement <4 x float> %__rightColumn338, i32 0
  %__product382 = fmul float %__leftComp380, %__rightComp381
  %__leftColumn383 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp384 = extractelement <4 x float> %__leftColumn383, i32 2
  %__rightComp385 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product386 = fmul float %__leftComp384, %__rightComp385
  %__dotProduct387 = fadd float %__product382, %__product386
  %__leftColumn388 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp389 = extractelement <4 x float> %__leftColumn388, i32 2
  %__rightComp390 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product391 = fmul float %__leftComp389, %__rightComp390
  %__dotProduct392 = fadd float %__dotProduct387, %__product391
  %__leftColumn393 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp394 = extractelement <4 x float> %__leftColumn393, i32 2
  %__rightComp395 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product396 = fmul float %__leftComp394, %__rightComp395
  %__dotProduct397 = fadd float %__dotProduct392, %__product396
  %__column398 = insertelement <4 x float> %__column378, float %__dotProduct397, i32 2
  %__leftColumn399 = extractvalue [4 x <4 x float>] %__matrix96, 0
  %__leftComp400 = extractelement <4 x float> %__leftColumn399, i32 3
  %__rightComp401 = extractelement <4 x float> %__rightColumn338, i32 0
  %__product402 = fmul float %__leftComp400, %__rightComp401
  %__leftColumn403 = extractvalue [4 x <4 x float>] %__matrix96, 1
  %__leftComp404 = extractelement <4 x float> %__leftColumn403, i32 3
  %__rightComp405 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product406 = fmul float %__leftComp404, %__rightComp405
  %__dotProduct407 = fadd float %__product402, %__product406
  %__leftColumn408 = extractvalue [4 x <4 x float>] %__matrix96, 2
  %__leftComp409 = extractelement <4 x float> %__leftColumn408, i32 3
  %__rightComp410 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product411 = fmul float %__leftComp409, %__rightComp410
  %__dotProduct412 = fadd float %__dotProduct407, %__product411
  %__leftColumn413 = extractvalue [4 x <4 x float>] %__matrix96, 3
  %__leftComp414 = extractelement <4 x float> %__leftColumn413, i32 3
  %__rightComp415 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product416 = fmul float %__leftComp414, %__rightComp415
  %__dotProduct417 = fadd float %__dotProduct412, %__product416
  %__column418 = insertelement <4 x float> %__column398, float %__dotProduct417, i32 3
  %__resultMatrix419 = insertvalue [4 x <4 x float>] %__resultMatrix337, <4 x float> %__column418, 3
  store [4 x <4 x float>] %__resultMatrix419, [4 x <4 x float>]* %m44
  %__matrix420 = load [4 x <4 x float>]* %m44
  %106 = alloca [4 x <4 x float>]
  %107 = load [4 x <4 x float>]* %106
  %__column421 = extractvalue [4 x <4 x float>] %__matrix420, 0
  %__row422 = extractelement <4 x float> %__column421, i32 0
  %108 = fsub float 0.000000e+00, %__row422
  %109 = insertelement <4 x float> %__column421, float %108, i32 0
  %__row423 = extractelement <4 x float> %109, i32 1
  %110 = fsub float 0.000000e+00, %__row423
  %111 = insertelement <4 x float> %109, float %110, i32 1
  %__row424 = extractelement <4 x float> %111, i32 2
  %112 = fsub float 0.000000e+00, %__row424
  %113 = insertelement <4 x float> %111, float %112, i32 2
  %__row425 = extractelement <4 x float> %113, i32 3
  %114 = fsub float 0.000000e+00, %__row425
  %115 = insertelement <4 x float> %113, float %114, i32 3
  %116 = insertvalue [4 x <4 x float>] %107, <4 x float> %115, 0
  %__column426 = extractvalue [4 x <4 x float>] %__matrix420, 1
  %__row427 = extractelement <4 x float> %__column426, i32 0
  %117 = fsub float 0.000000e+00, %__row427
  %118 = insertelement <4 x float> %__column426, float %117, i32 0
  %__row428 = extractelement <4 x float> %118, i32 1
  %119 = fsub float 0.000000e+00, %__row428
  %120 = insertelement <4 x float> %118, float %119, i32 1
  %__row429 = extractelement <4 x float> %120, i32 2
  %121 = fsub float 0.000000e+00, %__row429
  %122 = insertelement <4 x float> %120, float %121, i32 2
  %__row430 = extractelement <4 x float> %122, i32 3
  %123 = fsub float 0.000000e+00, %__row430
  %124 = insertelement <4 x float> %122, float %123, i32 3
  %125 = insertvalue [4 x <4 x float>] %116, <4 x float> %124, 1
  %__column431 = extractvalue [4 x <4 x float>] %__matrix420, 2
  %__row432 = extractelement <4 x float> %__column431, i32 0
  %126 = fsub float 0.000000e+00, %__row432
  %127 = insertelement <4 x float> %__column431, float %126, i32 0
  %__row433 = extractelement <4 x float> %127, i32 1
  %128 = fsub float 0.000000e+00, %__row433
  %129 = insertelement <4 x float> %127, float %128, i32 1
  %__row434 = extractelement <4 x float> %129, i32 2
  %130 = fsub float 0.000000e+00, %__row434
  %131 = insertelement <4 x float> %129, float %130, i32 2
  %__row435 = extractelement <4 x float> %131, i32 3
  %132 = fsub float 0.000000e+00, %__row435
  %133 = insertelement <4 x float> %131, float %132, i32 3
  %134 = insertvalue [4 x <4 x float>] %125, <4 x float> %133, 2
  %__column436 = extractvalue [4 x <4 x float>] %__matrix420, 3
  %__row437 = extractelement <4 x float> %__column436, i32 0
  %135 = fsub float 0.000000e+00, %__row437
  %136 = insertelement <4 x float> %__column436, float %135, i32 0
  %__row438 = extractelement <4 x float> %136, i32 1
  %137 = fsub float 0.000000e+00, %__row438
  %138 = insertelement <4 x float> %136, float %137, i32 1
  %__row439 = extractelement <4 x float> %138, i32 2
  %139 = fsub float 0.000000e+00, %__row439
  %140 = insertelement <4 x float> %138, float %139, i32 2
  %__row440 = extractelement <4 x float> %140, i32 3
  %141 = fsub float 0.000000e+00, %__row440
  %142 = insertelement <4 x float> %140, float %141, i32 3
  %143 = insertvalue [4 x <4 x float>] %134, <4 x float> %142, 3
  %u441 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %144 = alloca <4 x float>
  %145 = load <4 x float>* %144
  %__component = extractelement <4 x float> %u441, i32 0
  %__component442 = extractelement <4 x float> %u441, i32 1
  %__component443 = extractelement <4 x float> %u441, i32 2
  %__component444 = extractelement <4 x float> %u441, i32 3
  %__column445 = extractvalue [4 x <4 x float>] %143, 0
  %__element = extractelement <4 x float> %__column445, i32 0
  %__product446 = fmul float %__element, %__component
  %__column447 = extractvalue [4 x <4 x float>] %143, 1
  %__element448 = extractelement <4 x float> %__column447, i32 0
  %__product449 = fmul float %__element448, %__component442
  %__dotProduct450 = fadd float %__product446, %__product449
  %__column451 = extractvalue [4 x <4 x float>] %143, 2
  %__element452 = extractelement <4 x float> %__column451, i32 0
  %__product453 = fmul float %__element452, %__component443
  %__dotProduct454 = fadd float %__dotProduct450, %__product453
  %__column455 = extractvalue [4 x <4 x float>] %143, 3
  %__element456 = extractelement <4 x float> %__column455, i32 0
  %__product457 = fmul float %__element456, %__component444
  %__dotProduct458 = fadd float %__dotProduct454, %__product457
  %146 = insertelement <4 x float> %145, float %__dotProduct458, i32 0
  %__column459 = extractvalue [4 x <4 x float>] %143, 0
  %__element460 = extractelement <4 x float> %__column459, i32 1
  %__product461 = fmul float %__element460, %__component
  %__column462 = extractvalue [4 x <4 x float>] %143, 1
  %__element463 = extractelement <4 x float> %__column462, i32 1
  %__product464 = fmul float %__element463, %__component442
  %__dotProduct465 = fadd float %__product461, %__product464
  %__column466 = extractvalue [4 x <4 x float>] %143, 2
  %__element467 = extractelement <4 x float> %__column466, i32 1
  %__product468 = fmul float %__element467, %__component443
  %__dotProduct469 = fadd float %__dotProduct465, %__product468
  %__column470 = extractvalue [4 x <4 x float>] %143, 3
  %__element471 = extractelement <4 x float> %__column470, i32 1
  %__product472 = fmul float %__element471, %__component444
  %__dotProduct473 = fadd float %__dotProduct469, %__product472
  %147 = insertelement <4 x float> %146, float %__dotProduct473, i32 1
  %__column474 = extractvalue [4 x <4 x float>] %143, 0
  %__element475 = extractelement <4 x float> %__column474, i32 2
  %__product476 = fmul float %__element475, %__component
  %__column477 = extractvalue [4 x <4 x float>] %143, 1
  %__element478 = extractelement <4 x float> %__column477, i32 2
  %__product479 = fmul float %__element478, %__component442
  %__dotProduct480 = fadd float %__product476, %__product479
  %__column481 = extractvalue [4 x <4 x float>] %143, 2
  %__element482 = extractelement <4 x float> %__column481, i32 2
  %__product483 = fmul float %__element482, %__component443
  %__dotProduct484 = fadd float %__dotProduct480, %__product483
  %__column485 = extractvalue [4 x <4 x float>] %143, 3
  %__element486 = extractelement <4 x float> %__column485, i32 2
  %__product487 = fmul float %__element486, %__component444
  %__dotProduct488 = fadd float %__dotProduct484, %__product487
  %148 = insertelement <4 x float> %147, float %__dotProduct488, i32 2
  %__column489 = extractvalue [4 x <4 x float>] %143, 0
  %__element490 = extractelement <4 x float> %__column489, i32 3
  %__product491 = fmul float %__element490, %__component
  %__column492 = extractvalue [4 x <4 x float>] %143, 1
  %__element493 = extractelement <4 x float> %__column492, i32 3
  %__product494 = fmul float %__element493, %__component442
  %__dotProduct495 = fadd float %__product491, %__product494
  %__column496 = extractvalue [4 x <4 x float>] %143, 2
  %__element497 = extractelement <4 x float> %__column496, i32 3
  %__product498 = fmul float %__element497, %__component443
  %__dotProduct499 = fadd float %__dotProduct495, %__product498
  %__column500 = extractvalue [4 x <4 x float>] %143, 3
  %__element501 = extractelement <4 x float> %__column500, i32 3
  %__product502 = fmul float %__element501, %__component444
  %__dotProduct503 = fadd float %__dotProduct499, %__product502
  %149 = insertelement <4 x float> %148, float %__dotProduct503, i32 3
  %150 = load <4 x float>* @gl_FragColor
  %gl_FragColor504 = fadd <4 x float> %150, %149
  store <4 x float> %gl_FragColor504, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %151 = load <4 x float>* @gl_FragColor
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %151)
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) nounwind readnone

declare float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float>, <4 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind


Bottom IR:
; ModuleID = 'Top'

@um43 = external addrspace(2) constant [4 x <4 x float>]

define fastcc void @main() {
entry:
  %Color = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 2, i32 -1, i32 1)
  %0 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float> undef, i32 15, <3 x float> %Color, i32 0, <3 x float> %Color, i32 1, <3 x float> %Color, i32 2, float 1.000000e+00, i32 0)
  %__matrix64 = load [4 x <4 x float>] addrspace(2)* @um43, align 16
  %__rightColumn = extractvalue [4 x <4 x float>] %__matrix64, 0
  %__rightColumn174 = extractvalue [4 x <4 x float>] %__matrix64, 1
  %__rightColumn256 = extractvalue [4 x <4 x float>] %__matrix64, 2
  %__rightColumn338 = extractvalue [4 x <4 x float>] %__matrix64, 3
  %u441 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %__component = extractelement <4 x float> %u441, i32 0
  %__component442 = extractelement <4 x float> %u441, i32 1
  %__component443 = extractelement <4 x float> %u441, i32 2
  %__component444 = extractelement <4 x float> %u441, i32 3
  %__rightComp177 = extractelement <4 x float> %__rightColumn174, i32 0
  %__rightComp = extractelement <4 x float> %__rightColumn, i32 0
  %__rightComp259 = extractelement <4 x float> %__rightColumn256, i32 0
  %__rightComp201 = extractelement <4 x float> %__rightColumn174, i32 1
  %__product178 = fmul float %__rightComp177, 0x4012CCCCC0000000
  %__rightComp119 = extractelement <4 x float> %__rightColumn, i32 1
  %__product = fmul float %__rightComp, 0x4012CCCCC0000000
  %1 = fsub float 0.000000e+00, %__product178
  %2 = fsub float 0.000000e+00, %__product
  %__rightComp341 = extractelement <4 x float> %__rightColumn338, i32 0
  %__rightComp283 = extractelement <4 x float> %__rightColumn256, i32 1
  %__product260 = fmul float %__rightComp259, 0x4012CCCCC0000000
  %__rightComp226 = extractelement <4 x float> %__rightColumn174, i32 2
  %__product202 = fmul float %__rightComp201, 0x4012CCCCC0000000
  %__rightComp144 = extractelement <4 x float> %__rightColumn, i32 2
  %__product120 = fmul float %__rightComp119, 0x4012CCCCC0000000
  %__product449 = fmul float %1, %__component442
  %__product446 = fmul float %2, %__component
  %3 = fsub float 0.000000e+00, %__product260
  %4 = fsub float 0.000000e+00, %__product202
  %5 = fsub float 0.000000e+00, %__product120
  %__rightComp365 = extractelement <4 x float> %__rightColumn338, i32 1
  %__product342 = fmul float %__rightComp341, 0x4012CCCCC0000000
  %__rightComp308 = extractelement <4 x float> %__rightColumn256, i32 2
  %__product284 = fmul float %__rightComp283, 0x4012CCCCC0000000
  %__rightComp251 = extractelement <4 x float> %__rightColumn174, i32 3
  %__product227 = fmul float %__rightComp226, 0x4012CCCCC0000000
  %__rightComp169 = extractelement <4 x float> %__rightColumn, i32 3
  %__product145 = fmul float %__rightComp144, 0x4012CCCCC0000000
  %__product464 = fmul float %4, %__component442
  %__product461 = fmul float %5, %__component
  %__product453 = fmul float %3, %__component443
  %__dotProduct450 = fadd float %__product446, %__product449
  %6 = fsub float 0.000000e+00, %__product342
  %7 = fsub float 0.000000e+00, %__product284
  %8 = fsub float 0.000000e+00, %__product227
  %9 = fsub float 0.000000e+00, %__product145
  %__rightComp390 = extractelement <4 x float> %__rightColumn338, i32 2
  %__product366 = fmul float %__rightComp365, 0x4012CCCCC0000000
  %__rightComp333 = extractelement <4 x float> %__rightColumn256, i32 3
  %__product309 = fmul float %__rightComp308, 0x4012CCCCC0000000
  %__product252 = fmul float %__rightComp251, 0x4012CCCCC0000000
  %__product170 = fmul float %__rightComp169, 0x4012CCCCC0000000
  %__product479 = fmul float %8, %__component442
  %__product476 = fmul float %9, %__component
  %__product468 = fmul float %7, %__component443
  %__dotProduct465 = fadd float %__product461, %__product464
  %__product457 = fmul float %6, %__component444
  %__dotProduct454 = fadd float %__dotProduct450, %__product453
  %10 = fsub float 0.000000e+00, %__product366
  %11 = fsub float 0.000000e+00, %__product309
  %12 = fsub float 0.000000e+00, %__product252
  %13 = fsub float 0.000000e+00, %__product170
  %__rightComp415 = extractelement <4 x float> %__rightColumn338, i32 3
  %__product391 = fmul float %__rightComp390, 0x4012CCCCC0000000
  %__product334 = fmul float %__rightComp333, 0x4012CCCCC0000000
  %__product494 = fmul float %12, %__component442
  %__product491 = fmul float %13, %__component
  %__product483 = fmul float %11, %__component443
  %__dotProduct480 = fadd float %__product476, %__product479
  %__product472 = fmul float %10, %__component444
  %__dotProduct469 = fadd float %__dotProduct465, %__product468
  %__dotProduct458 = fadd float %__dotProduct454, %__product457
  %14 = fsub float 0.000000e+00, %__product391
  %15 = fsub float 0.000000e+00, %__product334
  %__product416 = fmul float %__rightComp415, 0x4012CCCCC0000000
  %__dot = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %__rightColumn)
  %__product498 = fmul float %15, %__component443
  %__dotProduct495 = fadd float %__product491, %__product494
  %__product487 = fmul float %14, %__component444
  %__dotProduct484 = fadd float %__dotProduct480, %__product483
  %__dotProduct473 = fadd float %__dotProduct469, %__product472
  %16 = fsub float 0.000000e+00, %__product416
  %__dot67 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %__rightColumn174)
  %__product502 = fmul float %16, %__component444
  %__dotProduct499 = fadd float %__dotProduct495, %__product498
  %__dotProduct488 = fadd float %__dotProduct484, %__product487
  %__dot69 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %__rightColumn256)
  %__dotProduct503 = fadd float %__dotProduct499, %__product502
  %__dot71 = call float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float> %0, <4 x float> %__rightColumn338)
  %17 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__dotProduct458, i32 0, float %__dotProduct473, i32 0, float %__dotProduct488, i32 0, float %__dotProduct503, i32 0)
  %18 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> undef, i32 15, float %__dot, i32 0, float %__dot67, i32 0, float %__dot69, i32 0, float %__dot71, i32 0)
  %gl_FragColor504 = fadd <4 x float> %18, %17
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %gl_FragColor504)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) nounwind readnone

declare float @llvm.gla.fDot4.f32.v4f32.v4f32(<4 x float>, <4 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float>, i32, float, i32, float, i32, float, i32, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, float, i32) nounwind readnone

// LunarGOO(r471) output
#version 130
uniform vec4[4] um43;
in vec3 Color;
const float const22_1f = 1.0;
in vec4 u441;
const float const28_5f = 4.7;
const float const31_0f = 0.0;

void main()
{
    vec4 temp21 = vec4(Color.x, Color.y, Color.z, const22_1f);
    vec4 __rightColumn = um43[0];
    vec4 __rightColumn174 = um43[1];
    vec4 __rightColumn256 = um43[2];
    vec4 __rightColumn338 = um43[3];
    float __product178 = __rightColumn174.x * const28_5f;
    float __product = __rightColumn.x * const28_5f;
    float temp30 = const31_0f - __product178;
    float temp32 = const31_0f - __product;
    float __product260 = __rightColumn256.x * const28_5f;
    float __product202 = __rightColumn174.y * const28_5f;
    float __product120 = __rightColumn.y * const28_5f;
    float __product449 = temp30 * u441.y;
    float __product446 = temp32 * u441.x;
    float temp38 = const31_0f - __product260;
    float temp39 = const31_0f - __product202;
    float temp40 = const31_0f - __product120;
    float __product342 = __rightColumn338.x * const28_5f;
    float __product284 = __rightColumn256.y * const28_5f;
    float __product227 = __rightColumn174.z * const28_5f;
    float __product145 = __rightColumn.z * const28_5f;
    float __product464 = temp39 * u441.y;
    float __product461 = temp40 * u441.x;
    float __product453 = temp38 * u441.z;
    float __dotProduct450 = __product446 + __product449;
    float temp49 = const31_0f - __product342;
    float temp50 = const31_0f - __product284;
    float temp51 = const31_0f - __product227;
    float temp52 = const31_0f - __product145;
    float __product366 = __rightColumn338.y * const28_5f;
    float __product309 = __rightColumn256.z * const28_5f;
    float __product252 = __rightColumn174.w * const28_5f;
    float __product170 = __rightColumn.w * const28_5f;
    float __product479 = temp51 * u441.y;
    float __product476 = temp52 * u441.x;
    float __product468 = temp50 * u441.z;
    float __dotProduct465 = __product461 + __product464;
    float __product457 = temp49 * u441.w;
    float __dotProduct454 = __dotProduct450 + __product453;
    float temp63 = const31_0f - __product366;
    float temp64 = const31_0f - __product309;
    float temp65 = const31_0f - __product252;
    float temp66 = const31_0f - __product170;
    float __product391 = __rightColumn338.z * const28_5f;
    float __product334 = __rightColumn256.w * const28_5f;
    float __product494 = temp65 * u441.y;
    float __product491 = temp66 * u441.x;
    float __product483 = temp64 * u441.z;
    float __dotProduct480 = __product476 + __product479;
    float __product472 = temp63 * u441.w;
    float __dotProduct469 = __dotProduct465 + __product468;
    float __dotProduct458 = __dotProduct454 + __product457;
    float temp76 = const31_0f - __product391;
    float temp77 = const31_0f - __product334;
    float __product416 = __rightColumn338.w * const28_5f;
    float __dot = dot(temp21, __rightColumn);
    float __product498 = temp77 * u441.z;
    float __dotProduct495 = __product491 + __product494;
    float __product487 = temp76 * u441.w;
    float __dotProduct484 = __dotProduct480 + __product483;
    float __dotProduct473 = __dotProduct469 + __product472;
    float temp85 = const31_0f - __product416;
    float __dot67 = dot(temp21, __rightColumn174);
    float __product502 = temp85 * u441.w;
    float __dotProduct499 = __dotProduct495 + __product498;
    float __dotProduct488 = __dotProduct484 + __product487;
    float __dot69 = dot(temp21, __rightColumn256);
    float __dotProduct503 = __dotProduct499 + __product502;
    float __dot71 = dot(temp21, __rightColumn338);
    vec4 temp93 = vec4(__dotProduct458, __dotProduct473, __dotProduct488, __dotProduct503);
    vec4 temp94 = vec4(__dot, __dot67, __dot69, __dot71);
    vec4 gla_copyout_gl_FragColor504 = temp94 + temp93;
    gl_FragColor = gla_copyout_gl_FragColor504;
    
}
#### BEGIN COMPILER 0 INFO LOG ####

#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####

#### END LINKER INFO LOG ####
