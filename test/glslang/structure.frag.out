
Top IR:
; ModuleID = 'Top'

%lunarStruct2 = type { [5 x i32], float, [7 x %lunarStruct1] }
%lunarStruct1 = type { i32, [4 x float], [5 x <4 x float>] }

@foo2 = external addrspace(2) constant [5 x %lunarStruct2]
@FragColor_shadow = internal global <4 x float> zeroinitializer
@sampler = external addrspace(1) constant i32
@coord_shadow = internal global <2 x float> zeroinitializer
@foo = external addrspace(2) constant %lunarStruct1

define fastcc void @main() {
entry:
  %scale = alloca float
  store float 0.000000e+00, float* %scale
  %0 = load i32 addrspace(2)* getelementptr inbounds ([5 x %lunarStruct2] addrspace(2)* @foo2, i32 0, i32 3, i32 0, i32 4), !gla.uniform !1
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %then, label %else

then:                                             ; preds = %entry
  %2 = load <4 x float> addrspace(2)* getelementptr inbounds ([5 x %lunarStruct2] addrspace(2)* @foo2, i32 0, i32 3, i32 2, i32 2, i32 2, i32 3), !gla.uniform !1
  %scale1 = extractelement <4 x float> %2, i32 0
  store float %scale1, float* %scale
  br label %ifmerge

else:                                             ; preds = %entry
  %scale2 = load float addrspace(2)* getelementptr inbounds ([5 x %lunarStruct2] addrspace(2)* @foo2, i32 0, i32 3, i32 2, i32 2, i32 1, i32 3), !gla.uniform !1
  store float %scale2, float* %scale
  br label %ifmerge

ifmerge:                                          ; preds = %else, %then
  %3 = load float* %scale
  %4 = load i32 addrspace(1)* @sampler, !gla.uniform !7
  %coord = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1025, i32 -1, i32 1), !gla.input !13
  store <2 x float> %coord, <2 x float>* @coord_shadow
  %5 = load <2 x float>* @coord_shadow
  %6 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %4, i32 0, <2 x float> %5)
  %7 = insertelement <4 x float> undef, float %3, i32 0
  %8 = insertelement <4 x float> %7, float %3, i32 1
  %9 = insertelement <4 x float> %8, float %3, i32 2
  %10 = insertelement <4 x float> %9, float %3, i32 3
  %FragColor_shadow = fmul <4 x float> %10, %6
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge
  %11 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1024, i32 -1, <4 x float> %11), !gla.output !11
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !7, !10}
!gla.outputs = !{!11}
!gla.inputs = !{!13}
!gla.noStaticUse = !{!10}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"foo2", i32 12, [5 x %lunarStruct2]* @foo2_typeProxy, metadata !2, metadata !3}
!2 = metadata !{i32 4, i32 0, i32 1024, null}
!3 = metadata !{metadata !"lunarStruct2", metadata !2, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"s1_1", metadata !6}
!4 = metadata !{metadata !"", metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1024, null}
!6 = metadata !{metadata !"lunarStruct1", metadata !2, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"color", metadata !4}
!7 = metadata !{metadata !"sampler", i32 12, i32* @sampler_typeProxy, metadata !8}
!8 = metadata !{i32 5, i32 0, i32 1024, metadata !9}
!9 = metadata !{i32 0, i32* @sampler_typeProxy, i32 1, i1 false, i1 false, i32 0}
!10 = metadata !{metadata !"foo", i32 12, %lunarStruct1* @foo_typeProxy, metadata !2, metadata !6}
!11 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !12}
!12 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!13 = metadata !{metadata !"coord", i32 1, <2 x float>* @coord_shadow_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}


Bottom IR:
; ModuleID = 'Top'

%lunarStruct2 = type { [5 x i32], float, [7 x %lunarStruct1] }
%lunarStruct1 = type { i32, [4 x float], [5 x <4 x float>] }

@foo2 = external addrspace(2) constant [5 x %lunarStruct2]
@sampler = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %gla_constGEP = getelementptr [5 x %lunarStruct2] addrspace(2)* @foo2, i32 0, i32 3, i32 0, i32 4
  %0 = load i32 addrspace(2)* %gla_constGEP, align 16, !gla.uniform !1
  %1 = icmp sgt i32 %0, 0
  %gla_constGEP4 = getelementptr [5 x %lunarStruct2] addrspace(2)* @foo2, i32 0, i32 3, i32 2, i32 2, i32 2, i32 3
  %2 = load <4 x float> addrspace(2)* %gla_constGEP4, align 16, !gla.uniform !1
  %scale1 = extractelement <4 x float> %2, i32 0
  %gla_constGEP5 = getelementptr [5 x %lunarStruct2] addrspace(2)* @foo2, i32 0, i32 3, i32 2, i32 2, i32 1, i32 3
  %scale2 = load float addrspace(2)* %gla_constGEP5, align 4, !gla.uniform !1
  %select = select i1 %1, float %scale1, float %scale2
  %3 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %select, <4 x i32> zeroinitializer)
  %coord = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1025, i32 -1, i32 1), !gla.input !13
  %4 = load i32 addrspace(1)* @sampler, align 4, !gla.uniform !7
  %5 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %4, i32 0, <2 x float> %coord)
  %FragColor_shadow = fmul <4 x float> %5, %3
  call void @llvm.gla.fWriteData.v4f32(i32 1024, i32 -1, <4 x float> %FragColor_shadow), !gla.output !11
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) nounwind readnone

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !7, !10}
!gla.outputs = !{!11}
!gla.inputs = !{!13}
!gla.noStaticUse = !{!10}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"foo2", i32 12, [5 x %lunarStruct2]* @foo2_typeProxy, metadata !2, metadata !3}
!2 = metadata !{i32 4, i32 0, i32 1024, null}
!3 = metadata !{metadata !"lunarStruct2", metadata !2, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"s1_1", metadata !6}
!4 = metadata !{metadata !"", metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1024, null}
!6 = metadata !{metadata !"lunarStruct1", metadata !2, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"color", metadata !4}
!7 = metadata !{metadata !"sampler", i32 12, i32* @sampler_typeProxy, metadata !8}
!8 = metadata !{i32 5, i32 0, i32 1024, metadata !9}
!9 = metadata !{i32 0, i32* @sampler_typeProxy, i32 1, i1 false, i1 false, i32 0}
!10 = metadata !{metadata !"foo", i32 12, %lunarStruct1* @foo_typeProxy, metadata !2, metadata !6}
!11 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !12}
!12 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!13 = metadata !{metadata !"coord", i32 1, <2 x float>* @coord_shadow_typeProxy, metadata !14}
!14 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}
#### BEGIN COMPILER 0 INFO LOG ####
Warning, version 130 is not yet complete; most features are present, but a few are missing.
WARNING: 0:3: varying deprecated in version 130; may be removed in future release
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
struct lunarStruct1 {
    int i;
    float f[4];
    vec4 color[5];
};

struct lunarStruct2 {
    int i[5];
    float f;
    lunarStruct1 s1_1[7];
};

uniform lunarStruct2 foo2[5];
uniform sampler2D sampler;
uniform lunarStruct1 foo;
in vec2 coord;
const int const22i_0 = 0;

void main()
{
    bool temp21 = foo2[3].i[4] > const22i_0;
    float select = temp21 ? foo2[3].s1_1[2].color[3].x : foo2[3].s1_1[2].f[3];
    vec4 temp24 = vec4(select);
    vec4 temp25 = texture(sampler, coord);
    vec4 FragColor_shadow = temp25 * temp24;
    gl_FragColor = FragColor_shadow;
    
}

#### BEGIN COMPILER 0 INFO LOG ####
Warning, version 130 is not yet complete; most features are present, but a few are missing.
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
struct lunarStruct1 {
    int i;
    float f[4];
    vec4 color[5];
};

struct lunarStruct2 {
    int i[5];
    float f;
    lunarStruct1 s1_1[7];
};

uniform lunarStruct2 foo2[5];
uniform sampler2D sampler;
uniform lunarStruct1 foo;
in vec2 coord;
const int const22i_0 = 0;

void main()
{
    bool temp211 = foo2[3].i[4] > const22i_0;
    float select = temp211 ? foo2[3].s1_1[2].color[3].x : foo2[3].s1_1[2].f[3];
    vec4 temp24 = vec4(select);
    vec4 temp256 = texture(sampler, coord);
    vec4 FragColor_shadow7 = temp256 * temp24;
    gl_FragColor = FragColor_shadow7;
    
}

