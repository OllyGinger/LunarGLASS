
Top IR:
; ModuleID = 'Top'

%s3 = type { [12 x %s2], i32, float, %s1 }
%s2 = type { i32, float, %s1 }
%s1 = type { i32, float, %s0 }
%s0 = type { i32 }
%s00 = type { %s0 }

@foo3 = external addrspace(2) constant %s3
@foo1 = external addrspace(2) constant %s1
@coord_shadow = internal global <2 x float> zeroinitializer
@foo0 = external addrspace(2) constant %s0
@foo00 = external addrspace(2) constant %s00
@FragColor_shadow = internal global <4 x float> zeroinitializer
@sampler = external addrspace(1) constant i32
@foo2 = external addrspace(2) constant %s2

define fastcc void @main() {
entry:
  %constructed = alloca %s1
  %locals00 = alloca %s00
  %locals0 = alloca %s0
  %locals1Array = alloca [10 x %s1]
  %fArray = alloca [6 x float]
  %locals2 = alloca %s2
  %0 = load i32 addrspace(2)* getelementptr inbounds (%s3 addrspace(2)* @foo3, i32 0, i32 0, i32 9, i32 0), !gla.uniform !0
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %then, label %else

then:                                             ; preds = %entry
  %2 = getelementptr %s2* %locals2, i32 0, i32 1
  store float 1.000000e+00, float* %2
  %3 = getelementptr %s2* %locals2, i32 0, i32 2
  store %s1 { i32 0, float 1.000000e+00, %s0 zeroinitializer }, %s1* %3
  store [6 x float] zeroinitializer, [6 x float]* %fArray
  %4 = load %s1 addrspace(2)* @foo1, !gla.uniform !8
  %5 = getelementptr [10 x %s1]* %locals1Array, i32 0, i32 6
  store %s1 %4, %s1* %5
  store %s0 zeroinitializer, %s0* %locals0
  store %s00 zeroinitializer, %s00* %locals00
  br label %ifmerge

else:                                             ; preds = %entry
  %coord = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !16
  store <2 x float> %coord, <2 x float>* @coord_shadow
  %6 = load <2 x float>* @coord_shadow
  %7 = extractelement <2 x float> %6, i32 0
  %8 = getelementptr %s2* %locals2, i32 0, i32 1
  store float %7, float* %8
  %coord1 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !16
  store <2 x float> %coord1, <2 x float>* @coord_shadow
  %9 = load <2 x float>* @coord_shadow
  %10 = extractelement <2 x float> %9, i32 1
  %11 = load %s0 addrspace(2)* @foo0, !gla.uniform !9
  %12 = getelementptr %s1* %constructed, i32 0, i32 0
  store i32 1, i32* %12
  %13 = getelementptr %s1* %constructed, i32 0, i32 1
  store float %10, float* %13
  %14 = getelementptr %s1* %constructed, i32 0, i32 2
  store %s0 %11, %s0* %14
  %15 = load %s1* %constructed
  %16 = getelementptr %s2* %locals2, i32 0, i32 2
  store %s1 %15, %s1* %16
  store [6 x float] [float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 5.000000e+00], [6 x float]* %fArray
  %17 = getelementptr %s2* %locals2, i32 0, i32 2
  %18 = load %s1* %17
  %19 = getelementptr [10 x %s1]* %locals1Array, i32 0, i32 6
  store %s1 %18, %s1* %19
  %locals02 = load %s0 addrspace(2)* getelementptr inbounds (%s1 addrspace(2)* @foo1, i32 0, i32 2), !gla.uniform !8
  store %s0 %locals02, %s0* %locals0
  %locals003 = load %s00 addrspace(2)* @foo00, !gla.uniform !10
  store %s00 %locals003, %s00* %locals00
  br label %ifmerge

ifmerge:                                          ; preds = %else, %then
  %20 = getelementptr %s0* %locals0, i32 0, i32 0
  %21 = load i32* %20
  %22 = icmp sgt i32 %21, 5
  br i1 %22, label %then4, label %ifmerge6

then4:                                            ; preds = %ifmerge
  %23 = getelementptr %s00* %locals00, i32 0, i32 0
  %locals05 = load %s0* %23
  store %s0 %locals05, %s0* %locals0
  br label %ifmerge6

ifmerge6:                                         ; preds = %ifmerge, %then4
  %24 = getelementptr %s0* %locals0, i32 0, i32 0
  %25 = load i32* %24
  %26 = sitofp i32 %25 to float
  %27 = getelementptr [10 x %s1]* %locals1Array, i32 0, i32 6, i32 1
  %28 = load float* %27
  %29 = fadd float %26, %28
  %30 = getelementptr [6 x float]* %fArray, i32 0, i32 3
  %31 = load float* %30
  %32 = fadd float %29, %31
  %33 = getelementptr %s2* %locals2, i32 0, i32 2, i32 1
  %34 = load float* %33
  %35 = fadd float %32, %34
  %36 = load i32 addrspace(1)* @sampler, !gla.uniform !12
  %coord7 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !16
  store <2 x float> %coord7, <2 x float>* @coord_shadow
  %37 = load <2 x float>* @coord_shadow
  %38 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %36, i32 0, <2 x float> %37)
  %39 = insertelement <4 x float> undef, float %35, i32 0
  %40 = insertelement <4 x float> %39, float %35, i32 1
  %41 = insertelement <4 x float> %40, float %35, i32 2
  %42 = insertelement <4 x float> %41, float %35, i32 3
  %FragColor_shadow = fmul <4 x float> %42, %38
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge6
  %43 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1025, i32 -1, <4 x float> %43), !gla.output !17
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!gla.uniforms = !{!0, !8, !9, !10, !12, !15}
!gla.inputs = !{!16}
!gla.outputs = !{!17}

!0 = metadata !{metadata !"foo3", i32 12, %s3* @foo3_typeProxy, metadata !1, metadata !2}
!1 = metadata !{i32 4, i32 0, i32 1024, null}
!2 = metadata !{metadata !"s3", metadata !1, metadata !"s2_1", metadata !3, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"s1_1", metadata !6}
!3 = metadata !{metadata !"s2", metadata !1, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"s1_1", metadata !6}
!4 = metadata !{metadata !"", metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1024, null}
!6 = metadata !{metadata !"s1", metadata !1, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"s0_1", metadata !7}
!7 = metadata !{metadata !"s0", metadata !1, metadata !"i", metadata !4}
!8 = metadata !{metadata !"foo1", i32 12, %s1* @foo1_typeProxy, metadata !1, metadata !6}
!9 = metadata !{metadata !"foo0", i32 12, %s0* @foo0_typeProxy, metadata !1, metadata !7}
!10 = metadata !{metadata !"foo00", i32 12, %s00* @foo00_typeProxy, metadata !1, metadata !11}
!11 = metadata !{metadata !"s00", metadata !1, metadata !"s0_0", metadata !7}
!12 = metadata !{metadata !"sampler", i32 12, i32* @sampler_typeProxy, metadata !13}
!13 = metadata !{i32 5, i32 0, i32 1024, metadata !14}
!14 = metadata !{i32 0, i32* @sampler_typeProxy, i32 1, i1 false, i1 false, i32 0}
!15 = metadata !{metadata !"foo2", i32 12, %s2* @foo2_typeProxy, metadata !1, metadata !3}
!16 = metadata !{metadata !"coord", i32 1, <2 x float>* @coord_shadow_typeProxy, metadata !5}
!17 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !18}
!18 = metadata !{i32 0, i32 0, i32 1025, null}


Bottom IR:
; ModuleID = 'Top'

%s3 = type { [12 x %s2], i32, float, %s1 }
%s2 = type { i32, float, %s1 }
%s1 = type { i32, float, %s0 }
%s0 = type { i32 }
%s00 = type { %s0 }

@foo3 = external addrspace(2) constant %s3
@foo1 = external addrspace(2) constant %s1
@foo0 = external addrspace(2) constant %s0
@foo00 = external addrspace(2) constant %s00
@sampler = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %gla_constGEP = getelementptr %s3 addrspace(2)* @foo3, i32 0, i32 0, i32 9, i32 0
  %0 = load i32 addrspace(2)* %gla_constGEP, align 4, !gla.uniform !0
  %1 = icmp sgt i32 %0, 0
  %gla_constGEP47 = getelementptr %s1 addrspace(2)* @foo1, i32 0, i32 1
  %2 = load float addrspace(2)* %gla_constGEP47, align 4
  %coord1 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !16
  %3 = extractelement <2 x float> %coord1, i32 1
  %gla_constGEP48 = getelementptr %s1 addrspace(2)* @foo1, i32 0, i32 2, i32 0
  %4 = load i32 addrspace(2)* %gla_constGEP48, align 4
  %gla_constGEP49 = getelementptr %s00 addrspace(2)* @foo00, i32 0, i32 0, i32 0
  %5 = load i32 addrspace(2)* %gla_constGEP49, align 4
  %select = select i1 %1, float 0.000000e+00, float 3.000000e+00
  %select43 = select i1 %1, i32 0, i32 %4
  %select44 = select i1 %1, i32 0, i32 %5
  %select45 = select i1 %1, float 1.000000e+00, float %3
  %select46 = select i1 %1, float %2, float %3
  %6 = icmp sgt i32 %select43, 5
  %locals00.0.0.0.locals0.0.0 = select i1 %6, i32 %select44, i32 %select43
  %7 = sitofp i32 %locals00.0.0.0.locals0.0.0 to float
  %8 = fadd float %select46, %7
  %9 = fadd float %select, %8
  %10 = fadd float %select45, %9
  %11 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %10, <4 x i32> zeroinitializer)
  %12 = load i32 addrspace(1)* @sampler, align 4, !gla.uniform !12
  %13 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %12, i32 0, <2 x float> %coord1)
  %FragColor_shadow = fmul <4 x float> %13, %11
  call void @llvm.gla.fWriteData.v4f32(i32 1025, i32 -1, <4 x float> %FragColor_shadow), !gla.output !17
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) nounwind readnone

!gla.uniforms = !{!0, !8, !9, !10, !12, !15}
!gla.inputs = !{!16}
!gla.outputs = !{!17}

!0 = metadata !{metadata !"foo3", i32 12, %s3* @foo3_typeProxy, metadata !1, metadata !2}
!1 = metadata !{i32 4, i32 0, i32 1024, null}
!2 = metadata !{metadata !"s3", metadata !1, metadata !"s2_1", metadata !3, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"s1_1", metadata !6}
!3 = metadata !{metadata !"s2", metadata !1, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"s1_1", metadata !6}
!4 = metadata !{metadata !"", metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1024, null}
!6 = metadata !{metadata !"s1", metadata !1, metadata !"i", metadata !4, metadata !"f", metadata !4, metadata !"s0_1", metadata !7}
!7 = metadata !{metadata !"s0", metadata !1, metadata !"i", metadata !4}
!8 = metadata !{metadata !"foo1", i32 12, %s1* @foo1_typeProxy, metadata !1, metadata !6}
!9 = metadata !{metadata !"foo0", i32 12, %s0* @foo0_typeProxy, metadata !1, metadata !7}
!10 = metadata !{metadata !"foo00", i32 12, %s00* @foo00_typeProxy, metadata !1, metadata !11}
!11 = metadata !{metadata !"s00", metadata !1, metadata !"s0_0", metadata !7}
!12 = metadata !{metadata !"sampler", i32 12, i32* @sampler_typeProxy, metadata !13}
!13 = metadata !{i32 5, i32 0, i32 1024, metadata !14}
!14 = metadata !{i32 0, i32* @sampler_typeProxy, i32 1, i1 false, i1 false, i32 0}
!15 = metadata !{metadata !"foo2", i32 12, %s2* @foo2_typeProxy, metadata !1, metadata !3}
!16 = metadata !{metadata !"coord", i32 1, <2 x float>* @coord_shadow_typeProxy, metadata !5}
!17 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !18}
!18 = metadata !{i32 0, i32 0, i32 1025, null}

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load
#### BEGIN COMPILER 0 INFO LOG ####
WARNING: 0:4: varying deprecated in version 130; may be removed in future release
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
struct s0 {
    int i;
};

struct s1 {
    int i;
    float f;
    s0 s0_1;
};

struct s2 {
    int i;
    float f;
    s1 s1_1;
};

struct s3 {
    s2 s2_1[12];
    int i;
    float f;
    s1 s1_1;
};

struct s00 {
    s0 s0_0;
};

uniform s3 foo3;
uniform s1 foo1;
uniform s0 foo0;
uniform s00 foo00;
uniform sampler2D sampler;
uniform s2 foo2;
const int const23i_0 = 0;
in vec2 coord;
const float const28 = 0.0;
const float const29 = 3.0;
const float const33 = 1.0;
const int const36i_5 = 5;

void main()
{
    int temp21 = int(foo3.s2_1[9].i);
    bool temp22 = temp21 > const23i_0;
    float temp24 = foo1.f;
    int temp25 = int(foo1.s0_1.i);
    int temp26 = int(foo00.s0_0.i);
    float select = temp22 ? const28 : const29;
    int select43 = temp22 ? const23i_0 : temp25;
    int select44 = temp22 ? const23i_0 : temp26;
    float select45 = temp22 ? const33 : coord.y;
    float select46 = temp22 ? temp24 : coord.y;
    bool temp35 = select43 > const36i_5;
    int locals00d0d0d0dlocals0d0d0 = temp35 ? select44 : select43;
    float temp38 = float(locals00d0d0d0dlocals0d0d0);
    float temp39 = select46 + temp38;
    float temp40 = select + temp39;
    float temp41 = select45 + temp40;
    vec4 temp42 = vec4(temp41);
    vec4 temp43 = texture(sampler, coord);
    vec4 FragColor_shadow = temp43 * temp42;
    gl_FragColor = FragColor_shadow;
    
}

#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
struct s0 {
    int i;
};

struct s1 {
    int i;
    float f;
    s0 s0_1;
};

struct s2 {
    int i;
    float f;
    s1 s1_1;
};

struct s3 {
    s2 s2_1[12];
    int i;
    float f;
    s1 s1_1;
};

struct s00 {
    s0 s0_0;
};

uniform s3 foo3;
uniform s1 foo1;
uniform s00 foo00;
uniform sampler2D sampler;
uniform s0 foo0;
uniform s2 foo2;
const int const23i_0 = 0;
const float const27 = 0.0;
const float const28 = 3.0;
in vec2 coord;
const float const32 = 1.0;
const int const36i_5 = 5;

void main()
{
    int temp211 = int(foo3.s2_1[9].i);
    bool temp222 = temp211 > const23i_0;
    int temp255 = int(foo1.s0_1.i);
    int temp267 = int(foo00.s0_0.i);
    float temp26 = temp222 ? const27 : const28;
    int ternary9d0 = temp222 ? const23i_0 : temp255;
    int dtemp267 = temp222 ? const23i_0 : temp267;
    float select = temp222 ? const32 : coord.y;
    float temp243 = foo1.f;
    float select54 = temp222 ? temp243 : coord.y;
    bool temp3535 = ternary9d0 > const36i_5;
    int dtemp267dternary9d0 = temp3535 ? dtemp267 : ternary9d0;
    float temp3843 = float(dtemp267dternary9d0);
    float temp3944 = temp3843 + select54;
    float temp4045 = temp26 + temp3944;
    float temp4146 = select + temp4045;
    vec4 temp42 = vec4(temp4146);
    vec4 temp4350 = texture(sampler, coord);
    vec4 FragColor_shadow51 = temp4350 * temp42;
    gl_FragColor = FragColor_shadow51;
    
}

