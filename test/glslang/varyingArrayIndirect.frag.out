
Top IR:
; ModuleID = 'Top'

@texSampler2D = external addrspace(1) constant i32
@userIn_shadow = internal global [2 x <4 x float>] zeroinitializer
@b = external addrspace(2) constant i32
@TexCoord_shadow = internal global [6 x <4 x float>] zeroinitializer
@a = external addrspace(2) constant i32
@color_shadow = internal global <4 x float> zeroinitializer
@alpha_shadow = internal global float 0.000000e+00
@FragColor_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %constructed = alloca <2 x float>
  %texColor = alloca <4 x float>
  %0 = load i32 addrspace(1)* @texSampler2D, !gla.uniform !0
  %userIn = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1024, i32 -1, i32 1), !gla.input !6
  store <4 x float> %userIn, <4 x float>* getelementptr inbounds ([2 x <4 x float>]* @userIn_shadow, i32 0, i32 0)
  %userIn1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !6
  store <4 x float> %userIn1, <4 x float>* getelementptr inbounds ([2 x <4 x float>]* @userIn_shadow, i32 0, i32 1)
  %1 = load i32 addrspace(2)* @b, !gla.uniform !3
  %2 = getelementptr [2 x <4 x float>]* @userIn_shadow, i32 0, i32 %1
  %3 = load <4 x float>* %2
  %gl_TexCoord = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord2 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord2, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1)
  %gl_TexCoord3 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord3, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2)
  %gl_TexCoord4 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord4, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3)
  %gl_TexCoord5 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1030, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord5, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord6 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1031, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord6, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %4 = load i32 addrspace(2)* @a, !gla.uniform !5
  %5 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 %4
  %6 = load <4 x float>* %5
  %7 = fadd <4 x float> %3, %6
  %gl_TexCoord7 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord7, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord8 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord8, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1)
  %gl_TexCoord9 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord9, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2)
  %gl_TexCoord10 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord10, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3)
  %gl_TexCoord11 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1030, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord11, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord12 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1031, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord12, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %8 = load <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %9 = fadd <4 x float> %7, %8
  %10 = load <2 x float>* %constructed
  %11 = extractelement <4 x float> %9, i32 0
  %12 = insertelement <2 x float> %10, float %11, i32 0
  %13 = extractelement <4 x float> %9, i32 1
  %14 = insertelement <2 x float> %12, float %13, i32 1
  %texColor13 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %14)
  store <4 x float> %texColor13, <4 x float>* %texColor
  %color = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1032, i32 -1, i32 1), !gla.input !10
  store <4 x float> %color, <4 x float>* @color_shadow
  %15 = load <4 x float>* @color_shadow
  %16 = load <4 x float>* %texColor
  %texColor14 = fadd <4 x float> %16, %15
  store <4 x float> %texColor14, <4 x float>* %texColor
  %alpha = call float @llvm.gla.fReadInterpolant.f32(i32 1033, i32 -1, i32 1), !gla.input !12
  store float %alpha, float* @alpha_shadow
  %17 = load float* @alpha_shadow
  %18 = load <4 x float>* %texColor
  %texColor15 = insertelement <4 x float> %18, float %17, i32 3
  store <4 x float> %texColor15, <4 x float>* %texColor
  %gl_TexCoord16 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord16, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord17 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord17, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1)
  %gl_TexCoord18 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord18, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2)
  %gl_TexCoord19 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord19, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3)
  %gl_TexCoord20 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1030, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord20, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord21 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1031, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord21, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %19 = load <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord22 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord22, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0)
  %gl_TexCoord23 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord23, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1)
  %gl_TexCoord24 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord24, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2)
  %gl_TexCoord25 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord25, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3)
  %gl_TexCoord26 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1030, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord26, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4)
  %gl_TexCoord27 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1031, i32 -1, i32 1), !gla.input !8
  store <4 x float> %gl_TexCoord27, <4 x float>* getelementptr inbounds ([6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5)
  %20 = load i32 addrspace(2)* @b, !gla.uniform !3
  %21 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 %20
  %22 = load <4 x float>* %21
  %23 = fadd <4 x float> %19, %22
  %24 = load <4 x float>* %texColor
  %25 = fadd <4 x float> %23, %24
  %userIn28 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1024, i32 -1, i32 1), !gla.input !6
  store <4 x float> %userIn28, <4 x float>* getelementptr inbounds ([2 x <4 x float>]* @userIn_shadow, i32 0, i32 0)
  %userIn29 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !6
  store <4 x float> %userIn29, <4 x float>* getelementptr inbounds ([2 x <4 x float>]* @userIn_shadow, i32 0, i32 1)
  %26 = load i32 addrspace(2)* @a, !gla.uniform !5
  %27 = getelementptr [2 x <4 x float>]* @userIn_shadow, i32 0, i32 %26
  %28 = load <4 x float>* %27
  %FragColor_shadow = fadd <4 x float> %25, %28
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %29 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1034, i32 -1, <4 x float> %29), !gla.output !14
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!gla.uniforms = !{!0, !3, !5}
!gla.inputs = !{!6, !8, !10, !12}
!gla.outputs = !{!14}

!0 = metadata !{metadata !"texSampler2D", i32 12, i32* @texSampler2D_typeProxy, metadata !1}
!1 = metadata !{i32 5, i32 0, i32 1024, metadata !2}
!2 = metadata !{i32 0, i32* @texSampler2D_typeProxy, i32 1, i1 false, i1 false, i32 0}
!3 = metadata !{metadata !"b", i32 12, i32* @b_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1024, null}
!5 = metadata !{metadata !"a", i32 12, i32* @a_typeProxy, metadata !4}
!6 = metadata !{metadata !"userIn", i32 1, [2 x <4 x float>]* @userIn_shadow_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!8 = metadata !{metadata !"gl_TexCoord", i32 1, [6 x <4 x float>]* @TexCoord_shadow_typeProxy, metadata !9}
!9 = metadata !{i32 0, i32 0, i32 1026, null, i32 1}
!10 = metadata !{metadata !"color", i32 1, <4 x float>* @color_shadow_typeProxy, metadata !11}
!11 = metadata !{i32 0, i32 0, i32 1032, null, i32 1}
!12 = metadata !{metadata !"alpha", i32 1, float* @alpha_shadow_typeProxy, metadata !13}
!13 = metadata !{i32 0, i32 0, i32 1033, null, i32 1}
!14 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !15}
!15 = metadata !{i32 0, i32 0, i32 1034, null, i32 0}


Bottom IR:
; ModuleID = 'Top'

@texSampler2D = external addrspace(1) constant i32
@userIn_shadow = internal unnamed_addr global [2 x <4 x float>] zeroinitializer
@b = external addrspace(2) constant i32
@TexCoord_shadow = internal unnamed_addr global [6 x <4 x float>] zeroinitializer
@a = external addrspace(2) constant i32

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @texSampler2D, align 4, !gla.uniform !0
  %userIn = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1024, i32 -1, i32 1), !gla.input !6
  %gla_constGEP = getelementptr [2 x <4 x float>]* @userIn_shadow, i32 0, i32 0
  store <4 x float> %userIn, <4 x float>* %gla_constGEP, align 16
  %userIn1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !6
  %gla_constGEP31 = getelementptr [2 x <4 x float>]* @userIn_shadow, i32 0, i32 1
  store <4 x float> %userIn1, <4 x float>* %gla_constGEP31, align 16
  %1 = load i32 addrspace(2)* @b, align 4, !gla.uniform !3
  %2 = getelementptr [2 x <4 x float>]* @userIn_shadow, i32 0, i32 %1
  %3 = load <4 x float>* %2, align 16
  %gl_TexCoord = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1026, i32 -1, i32 1), !gla.input !8
  %gla_constGEP32 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0
  store <4 x float> %gl_TexCoord, <4 x float>* %gla_constGEP32, align 16
  %gl_TexCoord2 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !gla.input !8
  %gla_constGEP33 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1
  store <4 x float> %gl_TexCoord2, <4 x float>* %gla_constGEP33, align 16
  %gl_TexCoord3 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1028, i32 -1, i32 1), !gla.input !8
  %gla_constGEP34 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2
  store <4 x float> %gl_TexCoord3, <4 x float>* %gla_constGEP34, align 16
  %gl_TexCoord4 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1029, i32 -1, i32 1), !gla.input !8
  %gla_constGEP35 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3
  store <4 x float> %gl_TexCoord4, <4 x float>* %gla_constGEP35, align 16
  %gl_TexCoord5 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1030, i32 -1, i32 1), !gla.input !8
  %gla_constGEP36 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4
  store <4 x float> %gl_TexCoord5, <4 x float>* %gla_constGEP36, align 16
  %gl_TexCoord6 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1031, i32 -1, i32 1), !gla.input !8
  %gla_constGEP37 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5
  store <4 x float> %gl_TexCoord6, <4 x float>* %gla_constGEP37, align 16
  %4 = load i32 addrspace(2)* @a, align 4, !gla.uniform !5
  %5 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 %4
  %6 = load <4 x float>* %5, align 16
  %7 = fadd <4 x float> %3, %6
  %8 = fadd <4 x float> %gl_TexCoord6, %7
  %9 = call <2 x float> @llvm.gla.fSwizzle.v2f32.v4f32.v2i32(<4 x float> %8, <2 x i32> <i32 0, i32 1>)
  %gla_constGEP38 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 0
  store <4 x float> %gl_TexCoord, <4 x float>* %gla_constGEP38, align 16
  %gla_constGEP39 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 1
  store <4 x float> %gl_TexCoord2, <4 x float>* %gla_constGEP39, align 16
  %gla_constGEP40 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 2
  store <4 x float> %gl_TexCoord3, <4 x float>* %gla_constGEP40, align 16
  %gla_constGEP41 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 3
  store <4 x float> %gl_TexCoord4, <4 x float>* %gla_constGEP41, align 16
  %gla_constGEP42 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 4
  store <4 x float> %gl_TexCoord5, <4 x float>* %gla_constGEP42, align 16
  %gla_constGEP43 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 5
  store <4 x float> %gl_TexCoord6, <4 x float>* %gla_constGEP43, align 16
  %10 = getelementptr [6 x <4 x float>]* @TexCoord_shadow, i32 0, i32 %1
  %11 = load <4 x float>* %10, align 16
  %gla_constGEP44 = getelementptr [2 x <4 x float>]* @userIn_shadow, i32 0, i32 0
  store <4 x float> %userIn, <4 x float>* %gla_constGEP44, align 16
  %gla_constGEP45 = getelementptr [2 x <4 x float>]* @userIn_shadow, i32 0, i32 1
  store <4 x float> %userIn1, <4 x float>* %gla_constGEP45, align 16
  %color = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1032, i32 -1, i32 1), !gla.input !10
  %texColor13 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %9)
  %alpha = call float @llvm.gla.fReadInterpolant.f32(i32 1033, i32 -1, i32 1), !gla.input !12
  %texColor14 = fadd <4 x float> %color, %texColor13
  %12 = getelementptr [2 x <4 x float>]* @userIn_shadow, i32 0, i32 %4
  %13 = fadd <4 x float> %gl_TexCoord, %11
  %14 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %texColor14, i32 8, float undef, i32 undef, float undef, i32 undef, float undef, i32 undef, float %alpha, i32 0)
  %15 = load <4 x float>* %12, align 16
  %16 = fadd <4 x float> %13, %14
  %FragColor_shadow = fadd <4 x float> %15, %16
  call void @llvm.gla.fWriteData.v4f32(i32 1034, i32 -1, <4 x float> %FragColor_shadow), !gla.output !14
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float>, i32, float, i32, float, i32, float, i32, float, i32) nounwind readnone

declare <2 x float> @llvm.gla.fSwizzle.v2f32.v4f32.v2i32(<4 x float>, <2 x i32>) nounwind readnone

!gla.uniforms = !{!0, !3, !5}
!gla.inputs = !{!6, !8, !10, !12}
!gla.outputs = !{!14}

!0 = metadata !{metadata !"texSampler2D", i32 12, i32* @texSampler2D_typeProxy, metadata !1}
!1 = metadata !{i32 5, i32 0, i32 1024, metadata !2}
!2 = metadata !{i32 0, i32* @texSampler2D_typeProxy, i32 1, i1 false, i1 false, i32 0}
!3 = metadata !{metadata !"b", i32 12, i32* @b_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1024, null}
!5 = metadata !{metadata !"a", i32 12, i32* @a_typeProxy, metadata !4}
!6 = metadata !{metadata !"userIn", i32 1, [2 x <4 x float>]* @userIn_shadow_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!8 = metadata !{metadata !"gl_TexCoord", i32 1, [6 x <4 x float>]* @TexCoord_shadow_typeProxy, metadata !9}
!9 = metadata !{i32 0, i32 0, i32 1026, null, i32 1}
!10 = metadata !{metadata !"color", i32 1, <4 x float>* @color_shadow_typeProxy, metadata !11}
!11 = metadata !{i32 0, i32 0, i32 1032, null, i32 1}
!12 = metadata !{metadata !"alpha", i32 1, float* @alpha_shadow_typeProxy, metadata !13}
!13 = metadata !{i32 0, i32 0, i32 1033, null, i32 1}
!14 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !15}
!15 = metadata !{i32 0, i32 0, i32 1034, null, i32 0}

***Unsupported functionality: missing metadata on load 0 userIn_shadow

***Unsupported functionality: missing metadata on load 0 TexCoord_shadow

***Unsupported functionality: missing metadata on load 0 TexCoord_shadow

***Unsupported functionality: missing metadata on load 0 userIn_shadow
#### BEGIN COMPILER 0 INFO LOG ####
WARNING: 0:3: varying deprecated in version 130; may be removed in future release
WARNING: 0:4: varying deprecated in version 130; may be removed in future release
WARNING: 0:6: varying deprecated in version 130; may be removed in future release
WARNING: 0:8: varying deprecated in version 130; may be removed in future release
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
uniform sampler2D texSampler2D;
uniform int b;
uniform int a;
in vec4 userIn[2];
in vec4 color;
in float alpha;
vec4 userIn_shadow[2];
vec4 TexCoord_shadow[6];

void main()
{
    userIn_shadow[0] = userIn[0];
    userIn_shadow[1] = userIn[1];
    TexCoord_shadow[0] = gl_TexCoord[0];
    TexCoord_shadow[1] = gl_TexCoord[1];
    TexCoord_shadow[2] = gl_TexCoord[2];
    TexCoord_shadow[3] = gl_TexCoord[3];
    TexCoord_shadow[4] = gl_TexCoord[4];
    TexCoord_shadow[5] = gl_TexCoord[5];
    vec4 temp21 = userIn_shadow[b] + TexCoord_shadow[a];
    vec4 temp22 = gl_TexCoord[5] + temp21;
    vec2 temp23 = vec2(temp22);
    TexCoord_shadow[0] = gl_TexCoord[0];
    TexCoord_shadow[1] = gl_TexCoord[1];
    TexCoord_shadow[2] = gl_TexCoord[2];
    TexCoord_shadow[3] = gl_TexCoord[3];
    TexCoord_shadow[4] = gl_TexCoord[4];
    TexCoord_shadow[5] = gl_TexCoord[5];
    userIn_shadow[0] = userIn[0];
    userIn_shadow[1] = userIn[1];
    vec4 texColor13 = texture(texSampler2D, temp23);
    vec4 texColor14 = color + texColor13;
    vec4 temp26 = gl_TexCoord[0] + TexCoord_shadow[b];
    vec4 temp27 = texColor14;
    temp27.w = alpha;
    vec4 temp28 = temp26 + temp27;
    vec4 FragColor_shadow = userIn_shadow[a] + temp28;
    gl_FragColor = FragColor_shadow;
    
}

#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
uniform int b;
uniform int a;
uniform sampler2D texSampler2D;
in vec4 userIn[2];
in vec4 color;
in float alpha;
vec4 userIn_shadow[2];
vec4 TexCoord_shadow[6];

void main()
{
    userIn_shadow[0] = userIn[0];
    userIn_shadow[1] = userIn[1];
    TexCoord_shadow[0] = gl_TexCoord[0];
    TexCoord_shadow[1] = gl_TexCoord[1];
    TexCoord_shadow[2] = gl_TexCoord[2];
    TexCoord_shadow[3] = gl_TexCoord[3];
    TexCoord_shadow[4] = gl_TexCoord[4];
    TexCoord_shadow[5] = gl_TexCoord[5];
    vec4 temp2151 = userIn_shadow[b] + TexCoord_shadow[a];
    vec4 temp2260 = gl_TexCoord[5] + temp2151;
    vec2 temp23 = vec2(temp2260);
    TexCoord_shadow[0] = gl_TexCoord[0];
    TexCoord_shadow[1] = gl_TexCoord[1];
    TexCoord_shadow[2] = gl_TexCoord[2];
    TexCoord_shadow[3] = gl_TexCoord[3];
    TexCoord_shadow[4] = gl_TexCoord[4];
    TexCoord_shadow[5] = gl_TexCoord[5];
    userIn_shadow[0] = userIn[0];
    userIn_shadow[1] = userIn[1];
    vec4 texColor13114 = texture(texSampler2D, temp23);
    vec4 texColor14115 = color + texColor13114;
    vec4 temp26 = texColor14115;
    temp26.w = alpha;
    vec4 temp26124 = TexCoord_shadow[b] + gl_TexCoord[0];
    vec4 temp28127 = temp26 + temp26124;
    vec4 FragColor_shadow128 = userIn_shadow[a] + temp28127;
    gl_FragColor = FragColor_shadow128;
    
}

