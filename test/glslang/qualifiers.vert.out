
Top IR:
; ModuleID = 'Top'

@outVc_shadow = internal global <4 x float> zeroinitializer
@inV_shadow = internal global <4 x float> zeroinitializer
@outVs_shadow = internal global <4 x float> zeroinitializer
@outVf_shadow = internal global <4 x float> zeroinitializer
@outVn_shadow = internal global <4 x float> zeroinitializer
@outVcn_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %inV = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1025, i32 -1), !input !10
  store <4 x float> %inV, <4 x float>* @inV_shadow
  %outVc_shadow = load <4 x float>* @inV_shadow
  store <4 x float> %outVc_shadow, <4 x float>* @outVc_shadow
  %inV1 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1025, i32 -1), !input !10
  store <4 x float> %inV1, <4 x float>* @inV_shadow
  %outVs_shadow = load <4 x float>* @inV_shadow
  store <4 x float> %outVs_shadow, <4 x float>* @outVs_shadow
  %inV2 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1025, i32 -1), !input !10
  store <4 x float> %inV2, <4 x float>* @inV_shadow
  %outVf_shadow = load <4 x float>* @inV_shadow
  store <4 x float> %outVf_shadow, <4 x float>* @outVf_shadow
  %inV3 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1025, i32 -1), !input !10
  store <4 x float> %inV3, <4 x float>* @inV_shadow
  %outVn_shadow = load <4 x float>* @inV_shadow
  store <4 x float> %outVn_shadow, <4 x float>* @outVn_shadow
  %inV4 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1025, i32 -1), !input !10
  store <4 x float> %inV4, <4 x float>* @inV_shadow
  %outVcn_shadow = load <4 x float>* @inV_shadow
  store <4 x float> %outVcn_shadow, <4 x float>* @outVcn_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %0 = load <4 x float>* @outVc_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1024, i32 -1, <4 x float> %0), !output !0
  %1 = load <4 x float>* @outVs_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> %1), !output !2
  %2 = load <4 x float>* @outVf_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1027, i32 -1, <4 x float> %2), !output !4
  %3 = load <4 x float>* @outVn_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1028, i32 -1, <4 x float> %3), !output !6
  %4 = load <4 x float>* @outVcn_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1029, i32 -1, <4 x float> %4), !output !8
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadData.v4f32(i32, i32) nounwind readonly

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!outputs = !{!0, !2, !4, !6, !8}
!inputs = !{!10}

!0 = metadata !{metadata !"outVc", i32 7, <4 x float>* @outVc_shadow_typeProxy, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 1024, null}
!2 = metadata !{metadata !"outVs", i32 7, <4 x float>* @outVs_shadow_typeProxy, metadata !3}
!3 = metadata !{i32 0, i32 0, i32 1026, null}
!4 = metadata !{metadata !"outVf", i32 7, <4 x float>* @outVf_shadow_typeProxy, metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1027, null}
!6 = metadata !{metadata !"outVn", i32 7, <4 x float>* @outVn_shadow_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1028, null}
!8 = metadata !{metadata !"outVcn", i32 7, <4 x float>* @outVcn_shadow_typeProxy, metadata !9}
!9 = metadata !{i32 0, i32 0, i32 1029, null}
!10 = metadata !{metadata !"inV", i32 1, <4 x float>* @inV_shadow_typeProxy, metadata !11}
!11 = metadata !{i32 0, i32 0, i32 1025, null}


Bottom IR:
; ModuleID = 'Top'

define fastcc void @main() {
entry:
  %inV4 = call <4 x float> @llvm.gla.fReadData.v4f32(i32 1025, i32 -1), !input !10
  call void @llvm.gla.fWriteData.v4f32(i32 1024, i32 -1, <4 x float> %inV4), !output !0
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> %inV4), !output !2
  call void @llvm.gla.fWriteData.v4f32(i32 1027, i32 -1, <4 x float> %inV4), !output !4
  call void @llvm.gla.fWriteData.v4f32(i32 1028, i32 -1, <4 x float> %inV4), !output !6
  call void @llvm.gla.fWriteData.v4f32(i32 1029, i32 -1, <4 x float> %inV4), !output !8
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadData.v4f32(i32, i32) nounwind readonly

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!outputs = !{!0, !2, !4, !6, !8}
!inputs = !{!10}

!0 = metadata !{metadata !"outVc", i32 7, <4 x float>* @outVc_shadow_typeProxy, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 1024, null}
!2 = metadata !{metadata !"outVs", i32 7, <4 x float>* @outVs_shadow_typeProxy, metadata !3}
!3 = metadata !{i32 0, i32 0, i32 1026, null}
!4 = metadata !{metadata !"outVf", i32 7, <4 x float>* @outVf_shadow_typeProxy, metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1027, null}
!6 = metadata !{metadata !"outVn", i32 7, <4 x float>* @outVn_shadow_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1028, null}
!8 = metadata !{metadata !"outVcn", i32 7, <4 x float>* @outVcn_shadow_typeProxy, metadata !9}
!9 = metadata !{i32 0, i32 0, i32 1029, null}
!10 = metadata !{metadata !"inV", i32 1, <4 x float>* @inV_shadow_typeProxy, metadata !11}
!11 = metadata !{i32 0, i32 0, i32 1025, null}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 430 core
in vec4 inV;
out vec4 outVc;
out vec4 outVs;
out vec4 outVf;
out vec4 outVn;
out vec4 outVcn;

void main()
{
    outVc = inV;
    outVs = inV;
    outVf = inV;
    outVn = inV;
    outVcn = inV;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 430 core
in vec4 inV;
out vec4 outVc;
out vec4 outVs;
out vec4 outVf;
out vec4 outVn;
out vec4 outVcn;

void main()
{
    outVc = inV;
    outVs = inV;
    outVf = inV;
    outVn = inV;
    outVcn = inV;
    
}
