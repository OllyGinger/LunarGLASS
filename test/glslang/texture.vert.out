
Top IR:
; ModuleID = 'Top'

@"sampler1D texSampler1D" = external addrspace(1) constant i32
@coords2D_shadow = internal global <2 x float> zeroinitializer
@"sampler2D texSampler2D" = external addrspace(1) constant i32
@"sampler3D texSampler3D" = external addrspace(1) constant i32
@"samplerCube texSamplerCube" = external addrspace(1) constant i32
@"sampler1DShadow shadowSampler1D" = external addrspace(1) constant i32
@"sampler2DShadow shadowSampler2D" = external addrspace(1) constant i32
@Position_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %color = alloca <4 x float>
  %coords4D = alloca <4 x float>
  %coords3D = alloca <3 x float>
  %coords1D = alloca float
  %lod = alloca float
  store float 3.000000e+00, float* %lod
  store float 0x3FFC9FBE80000000, float* %coords1D
  store <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, <3 x float>* %coords3D
  store <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, <4 x float>* %coords4D
  store <4 x float> zeroinitializer, <4 x float>* %color
  %0 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %1 = load float* %coords1D
  %2 = load float* %lod
  %3 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 132, float %1, float %2, float undef)
  %4 = load <4 x float>* %color
  %color1 = fadd <4 x float> %4, %3
  store <4 x float> %color1, <4 x float>* %color
  %5 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %coords2D__ = call <2 x float> @llvm.gla.fReadData.v2f32(i32 1024, i32 -1), !input !6
  store <2 x float> %coords2D__, <2 x float>* @coords2D_shadow
  %6 = load <2 x float>* @coords2D_shadow
  %7 = load float* %lod
  %8 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 1, i32 %5, i32 133, <2 x float> %6, float %7, float undef)
  %9 = load <4 x float>* %color
  %color2 = fadd <4 x float> %9, %8
  store <4 x float> %color2, <4 x float>* %color
  %10 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %11 = load <4 x float>* %coords4D
  %12 = load float* %lod
  %13 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %10, i32 133, <4 x float> %11, float %12, float undef)
  %14 = load <4 x float>* %color
  %color3 = fadd <4 x float> %14, %13
  store <4 x float> %color3, <4 x float>* %color
  %15 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %coords2D__4 = call <2 x float> @llvm.gla.fReadData.v2f32(i32 1024, i32 -1), !input !6
  store <2 x float> %coords2D__4, <2 x float>* @coords2D_shadow
  %16 = load <2 x float>* @coords2D_shadow
  %17 = load float* %lod
  %18 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %15, i32 132, <2 x float> %16, float %17, float undef)
  %19 = load <4 x float>* %color
  %color5 = fadd <4 x float> %19, %18
  store <4 x float> %color5, <4 x float>* %color
  %20 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %21 = load <3 x float>* %coords3D
  %22 = load float* %lod
  %23 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %20, i32 133, <3 x float> %21, float %22, float undef)
  %24 = load <4 x float>* %color
  %color6 = fadd <4 x float> %24, %23
  store <4 x float> %color6, <4 x float>* %color
  %25 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %26 = load <4 x float>* %coords4D
  %27 = load float* %lod
  %28 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %25, i32 133, <4 x float> %26, float %27, float undef)
  %29 = load <4 x float>* %color
  %color7 = fadd <4 x float> %29, %28
  store <4 x float> %color7, <4 x float>* %color
  %30 = load i32 addrspace(1)* @"sampler3D texSampler3D", !sampler !2
  %31 = load <3 x float>* %coords3D
  %32 = load float* %lod
  %33 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %30, i32 132, <3 x float> %31, float %32, float undef)
  %34 = load <4 x float>* %color
  %color8 = fadd <4 x float> %34, %33
  store <4 x float> %color8, <4 x float>* %color
  %35 = load i32 addrspace(1)* @"sampler3D texSampler3D", !sampler !2
  %36 = load <4 x float>* %coords4D
  %37 = load float* %lod
  %38 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 3, i32 %35, i32 133, <4 x float> %36, float %37, float undef)
  %39 = load <4 x float>* %color
  %color9 = fadd <4 x float> %39, %38
  store <4 x float> %color9, <4 x float>* %color
  %40 = load i32 addrspace(1)* @"samplerCube texSamplerCube", !sampler !3
  %41 = load <3 x float>* %coords3D
  %42 = load float* %lod
  %43 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %40, i32 132, <3 x float> %41, float %42, float undef)
  %44 = load <4 x float>* %color
  %color10 = fadd <4 x float> %44, %43
  store <4 x float> %color10, <4 x float>* %color
  %45 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", !sampler !4
  %46 = load <3 x float>* %coords3D
  %47 = load float* %lod
  %48 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %45, i32 140, <3 x float> %46, float %47, float undef)
  %49 = load <4 x float>* %color
  %color11 = fadd <4 x float> %49, %48
  store <4 x float> %color11, <4 x float>* %color
  %50 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", !sampler !5
  %51 = load <3 x float>* %coords3D
  %52 = load float* %lod
  %53 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %50, i32 140, <3 x float> %51, float %52, float undef)
  %54 = load <4 x float>* %color
  %color12 = fadd <4 x float> %54, %53
  store <4 x float> %color12, <4 x float>* %color
  %55 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", !sampler !4
  %56 = load <4 x float>* %coords4D
  %57 = load float* %lod
  %58 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %55, i32 141, <4 x float> %56, float %57, float undef)
  %59 = load <4 x float>* %color
  %color13 = fadd <4 x float> %59, %58
  store <4 x float> %color13, <4 x float>* %color
  %60 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", !sampler !5
  %61 = load <4 x float>* %coords4D
  %62 = load float* %lod
  %63 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %60, i32 141, <4 x float> %61, float %62, float undef)
  %64 = load <4 x float>* %color
  %color14 = fadd <4 x float> %64, %63
  store <4 x float> %color14, <4 x float>* %color
  %Position_shadow = load <4 x float>* %color
  store <4 x float> %Position_shadow, <4 x float>* @Position_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %65 = load <4 x float>* @Position_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %65), !output !8
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadData.v2f32(i32, i32) nounwind readonly

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32, i32, i32, <4 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!samplers = !{!0, !0, !0, !1, !1, !1, !2, !2, !3, !4, !5, !4, !5}
!inputs = !{!6}
!outputs = !{!8}

!0 = metadata !{metadata !"texSampler1D", i32 0, i32 addrspace(1)* @"sampler1D texSampler1D", i32 0, i1 false, i1 false}
!1 = metadata !{metadata !"texSampler2D", i32 0, i32 addrspace(1)* @"sampler2D texSampler2D", i32 1, i1 false, i1 false}
!2 = metadata !{metadata !"texSampler3D", i32 0, i32 addrspace(1)* @"sampler3D texSampler3D", i32 2, i1 false, i1 false}
!3 = metadata !{metadata !"texSamplerCube", i32 0, i32 addrspace(1)* @"samplerCube texSamplerCube", i32 3, i1 false, i1 false}
!4 = metadata !{metadata !"shadowSampler1D", i32 0, i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", i32 0, i1 false, i1 true}
!5 = metadata !{metadata !"shadowSampler2D", i32 0, i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", i32 1, i1 false, i1 true}
!6 = metadata !{metadata !"coords2D", i32 7, <2 x float>* @coords2D_shadow_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1024}
!8 = metadata !{metadata !"gl_Position", i32 8, <4 x float>* @Position_shadow_typeProxy, metadata !9}
!9 = metadata !{i32 0, i32 0, i32 0}


Bottom IR:
; ModuleID = 'Top'

@"sampler1D texSampler1D" = external addrspace(1) constant i32
@"sampler2D texSampler2D" = external addrspace(1) constant i32
@"sampler3D texSampler3D" = external addrspace(1) constant i32
@"samplerCube texSamplerCube" = external addrspace(1) constant i32
@"sampler1DShadow shadowSampler1D" = external addrspace(1) constant i32
@"sampler2DShadow shadowSampler2D" = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @"sampler1D texSampler1D", align 4, !sampler !0
  %1 = load i32 addrspace(1)* @"sampler2D texSampler2D", align 4, !sampler !1
  %2 = load i32 addrspace(1)* @"sampler3D texSampler3D", align 4, !sampler !2
  %3 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", align 4, !sampler !4
  %4 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", align 4, !sampler !5
  %coords2D__ = call <2 x float> @llvm.gla.fReadData.v2f32(i32 1024, i32 -1), !input !6
  %5 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 1, i32 %0, i32 133, <2 x float> %coords2D__, float 3.000000e+00, float undef)
  %6 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 132, float 0x3FFC9FBE80000000, float 3.000000e+00, float undef)
  %7 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %0, i32 133, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 3.000000e+00, float undef)
  %color2 = fadd <4 x float> %5, %6
  %8 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %1, i32 132, <2 x float> %coords2D__, float 3.000000e+00, float undef)
  %color3 = fadd <4 x float> %color2, %7
  %9 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %1, i32 133, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color5 = fadd <4 x float> %color3, %8
  %10 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %1, i32 133, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 3.000000e+00, float undef)
  %color6 = fadd <4 x float> %color5, %9
  %11 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %2, i32 132, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color7 = fadd <4 x float> %color6, %10
  %12 = load i32 addrspace(1)* @"samplerCube texSamplerCube", align 4, !sampler !3
  %13 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 3, i32 %2, i32 133, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 3.000000e+00, float undef)
  %color8 = fadd <4 x float> %color7, %11
  %14 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %12, i32 132, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color9 = fadd <4 x float> %color8, %13
  %15 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %3, i32 140, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color10 = fadd <4 x float> %color9, %14
  %16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %4, i32 140, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 3.000000e+00, float undef)
  %color11 = fadd <4 x float> %color10, %15
  %17 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %3, i32 141, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 3.000000e+00, float undef)
  %color12 = fadd <4 x float> %color11, %16
  %18 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %4, i32 141, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 3.000000e+00, float undef)
  %color13 = fadd <4 x float> %color12, %17
  %color14 = fadd <4 x float> %color13, %18
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %color14), !output !8
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadData.v2f32(i32, i32) nounwind readonly

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32, i32, i32, <4 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!samplers = !{!0, !0, !0, !1, !1, !1, !2, !2, !3, !4, !5, !4, !5}
!inputs = !{!6}
!outputs = !{!8}

!0 = metadata !{metadata !"texSampler1D", i32 0, i32 addrspace(1)* @"sampler1D texSampler1D", i32 0, i1 false, i1 false}
!1 = metadata !{metadata !"texSampler2D", i32 0, i32 addrspace(1)* @"sampler2D texSampler2D", i32 1, i1 false, i1 false}
!2 = metadata !{metadata !"texSampler3D", i32 0, i32 addrspace(1)* @"sampler3D texSampler3D", i32 2, i1 false, i1 false}
!3 = metadata !{metadata !"texSamplerCube", i32 0, i32 addrspace(1)* @"samplerCube texSamplerCube", i32 3, i1 false, i1 false}
!4 = metadata !{metadata !"shadowSampler1D", i32 0, i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", i32 0, i1 false, i1 true}
!5 = metadata !{metadata !"shadowSampler2D", i32 0, i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", i32 1, i1 false, i1 true}
!6 = metadata !{metadata !"coords2D", i32 7, <2 x float>* @coords2D_shadow_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1024}
!8 = metadata !{metadata !"gl_Position", i32 8, <4 x float>* @Position_shadow_typeProxy, metadata !9}
!9 = metadata !{i32 0, i32 0, i32 0}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
in vec2 coords2D;
const float const22f_3 = 3.0;
const float const24f_2 = 1.789;
const vec4 const26 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 const31 = vec3(1.789, 2.718, 3.453);

void main()
{
    vec4 temp21 = textureProjLod(texSampler1D, coords2D, const22f_3);
    vec4 temp23 = textureLod(texSampler1D, const24f_2, const22f_3);
    vec4 temp25 = textureProjLod(texSampler1D, const26, const22f_3);
    vec4 color2 = temp21 + temp23;
    vec4 temp28 = textureLod(texSampler2D, coords2D, const22f_3);
    vec4 color3 = color2 + temp25;
    vec4 temp30 = textureProjLod(texSampler2D, const31, const22f_3);
    vec4 color5 = color3 + temp28;
    vec4 temp33 = textureProjLod(texSampler2D, const26, const22f_3);
    vec4 color6 = color5 + temp30;
    vec4 temp35 = textureLod(texSampler3D, const31, const22f_3);
    vec4 color7 = color6 + temp33;
    vec4 temp37 = textureProjLod(texSampler3D, const26, const22f_3);
    vec4 color8 = color7 + temp35;
    vec4 temp39 = textureLod(texSamplerCube, const31, const22f_3);
    vec4 color9 = color8 + temp37;
    vec4 temp41 = shadow1DLod(shadowSampler1D, const31, const22f_3);
    vec4 color10 = color9 + temp39;
    vec4 temp43 = shadow2DLod(shadowSampler2D, const31, const22f_3);
    vec4 color11 = color10 + temp41;
    vec4 temp45 = shadow1DProjLod(shadowSampler1D, const26, const22f_3);
    vec4 color12 = color11 + temp43;
    vec4 temp47 = shadow2DProjLod(shadowSampler2D, const26, const22f_3);
    vec4 color13 = color12 + temp45;
    vec4 color14 = color13 + temp47;
    gl_Position = color14;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
in vec2 coords2D;
const float const22f_2 = 1.789;
const float const23f_3 = 3.0;
const vec4 const27 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 const32 = vec3(1.789, 2.718, 3.453);

void main()
{
    vec4 temp232 = textureLod(texSampler1D, const22f_2, const23f_3);
    vec4 temp211 = textureProjLod(texSampler1D, coords2D, const23f_3);
    vec4 color24 = temp232 + temp211;
    vec4 temp253 = textureProjLod(texSampler1D, const27, const23f_3);
    vec4 color37 = color24 + temp253;
    vec4 temp286 = textureLod(texSampler2D, coords2D, const23f_3);
    vec4 color59 = color37 + temp286;
    vec4 temp308 = textureProjLod(texSampler2D, const32, const23f_3);
    vec4 color611 = color59 + temp308;
    vec4 temp3310 = textureProjLod(texSampler2D, const27, const23f_3);
    vec4 color713 = color611 + temp3310;
    vec4 temp3512 = textureLod(texSampler3D, const32, const23f_3);
    vec4 color815 = color713 + temp3512;
    vec4 temp3714 = textureProjLod(texSampler3D, const27, const23f_3);
    vec4 color917 = color815 + temp3714;
    vec4 temp3916 = textureLod(texSamplerCube, const32, const23f_3);
    vec4 color1019 = color917 + temp3916;
    vec4 temp4118 = shadow1DLod(shadowSampler1D, const32, const23f_3);
    vec4 color1121 = color1019 + temp4118;
    vec4 temp4320 = shadow2DLod(shadowSampler2D, const32, const23f_3);
    vec4 color1223 = color1121 + temp4320;
    vec4 temp4522 = shadow1DProjLod(shadowSampler1D, const27, const23f_3);
    vec4 color1325 = color1223 + temp4522;
    vec4 temp4724 = shadow2DProjLod(shadowSampler2D, const27, const23f_3);
    vec4 color1426 = color1325 + temp4724;
    gl_Position = color1426;
    
}
