
***Unsupported functionality: glslang binary op-assign

***Unsupported functionality: glslang binary op-assign

***Unsupported functionality: glslang binary op-assign

***Unsupported functionality: glslang binary op-assign

Top IR:
; ModuleID = 'Top'

@color = external addrspace(2) constant [6 x <4 x float>]
@inColor = external addrspace(2) constant <3 x float>
@alpha = external addrspace(2) constant [16 x float]
@gl_FragColor = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %texColor = alloca <4 x float>
  %0 = load <4 x float> addrspace(2)* getelementptr inbounds ([6 x <4 x float>] addrspace(2)* @color, i32 0, i32 1)
  %1 = load <4 x float> addrspace(2)* getelementptr inbounds ([6 x <4 x float>] addrspace(2)* @color, i32 0, i32 1)
  %texColor1 = fadd <4 x float> %0, %1
  store <4 x float> %texColor1, <4 x float>* %texColor
  %gl_FragColor = load <4 x float>* %texColor
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %2 = load <4 x float>* @gl_FragColor
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %2)
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind


Bottom IR:
; ModuleID = 'Top'

@color = external addrspace(2) constant [6 x <4 x float>]

define fastcc void @main() {
entry:
  %gla_constGEP = getelementptr [6 x <4 x float>] addrspace(2)* @color, i32 0, i32 1
  %0 = load <4 x float> addrspace(2)* %gla_constGEP, align 16
  %texColor1 = fadd <4 x float> %0, %0
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %texColor1)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

// LunarGOO(r471) output
#version 130
uniform vec4[6] color;

void main()
{
    vec4 temp21 = color[1];
    vec4 texColor1 = temp21 + temp21;
    gl_FragColor = texColor1;
    
}
#### BEGIN COMPILER 0 INFO LOG ####

#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####

#### END LINKER INFO LOG ####
