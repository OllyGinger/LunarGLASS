
Top IR:
; ModuleID = 'Top'

@FragDepth_shadow = internal global float 0.000000e+00
@Depth_shadow = internal global float 0.000000e+00
@FragColor_shadow = internal global <4 x float> zeroinitializer
@Color_shadow = internal global <4 x float> zeroinitializer
@foo_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %Depth = call float @llvm.gla.fReadInterpolant.f32(i32 1025, i32 -1, i32 1), !gla.input !7
  store float %Depth, float* @Depth_shadow
  %FragDepth_shadow = load float* @Depth_shadow
  store float %FragDepth_shadow, float* @FragDepth_shadow
  %Color = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !gla.input !9
  store <4 x float> %Color, <4 x float>* @Color_shadow
  %FragColor_shadow = load <4 x float>* @Color_shadow
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  %Color1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !gla.input !9
  store <4 x float> %Color1, <4 x float>* @Color_shadow
  %foo_shadow = load <4 x float>* @Color_shadow
  store <4 x float> %foo_shadow, <4 x float>* @foo_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %0 = load float* @FragDepth_shadow
  call void @llvm.gla.fWriteData.f32(i32 1024, i32 -1, float %0), !gla.output !1
  %1 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> %1), !gla.output !3
  %2 = load <4 x float>* @foo_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1028, i32 -1, <4 x float> %2), !gla.output !5
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.f32(i32, i32, float) #1

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3, !5}
!gla.inputs = !{!7, !9}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"gl_FragDepth", i32 11, float* @FragDepth_shadow_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!3 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1026, null, i32 0}
!5 = metadata !{metadata !"foo", i32 7, <4 x float>* @foo_shadow_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1028, null, i32 0}
!7 = metadata !{metadata !"Depth", i32 1, float* @Depth_shadow_typeProxy, metadata !8}
!8 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}
!9 = metadata !{metadata !"Color", i32 1, <4 x float>* @Color_shadow_typeProxy, metadata !10}
!10 = metadata !{i32 0, i32 0, i32 1027, null, i32 1}


Bottom IR:
; ModuleID = 'Top'

define fastcc void @main() {
entry:
  %Color1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1027, i32 -1, i32 1), !gla.input !9
  %Depth = call float @llvm.gla.fReadInterpolant.f32(i32 1025, i32 -1, i32 1), !gla.input !7
  call void @llvm.gla.fWriteData.f32(i32 1024, i32 -1, float %Depth), !gla.output !1
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> %Color1), !gla.output !3
  call void @llvm.gla.fWriteData.v4f32(i32 1028, i32 -1, <4 x float> %Color1), !gla.output !5
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) #0

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.f32(i32, i32, float) #1

; Function Attrs: nounwind
declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3, !5}
!gla.inputs = !{!7, !9}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"gl_FragDepth", i32 11, float* @FragDepth_shadow_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!3 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1026, null, i32 0}
!5 = metadata !{metadata !"foo", i32 7, <4 x float>* @foo_shadow_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1028, null, i32 0}
!7 = metadata !{metadata !"Depth", i32 1, float* @Depth_shadow_typeProxy, metadata !8}
!8 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}
!9 = metadata !{metadata !"Color", i32 1, <4 x float>* @Color_shadow_typeProxy, metadata !10}
!10 = metadata !{i32 0, i32 0, i32 1027, null, i32 1}
#### BEGIN COMPILER 0 INFO LOG ####
Warning, version 130 is not yet complete; most features are present, but a few are missing.
WARNING: 0:3: varying deprecated in version 130; may be removed in future release
WARNING: 0:4: varying deprecated in version 130; may be removed in future release
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
in float Depth;
in vec4 Color;
out vec4 foo;

void main()
{
    gl_FragDepth = Depth;
    gl_FragColor = Color;
    foo = Color;
    
}

#### BEGIN COMPILER 0 INFO LOG ####
Warning, version 130 is not yet complete; most features are present, but a few are missing.
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
in float Depth;
in vec4 Color;
out vec4 foo;

void main()
{
    gl_FragDepth = Depth;
    gl_FragColor = Color;
    foo = Color;
    
}

