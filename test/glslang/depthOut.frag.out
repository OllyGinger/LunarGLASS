
Top IR:
; ModuleID = 'Top'

@FragDepth_shadow = internal global float 0.000000e+00
@Depth_shadow = internal global float 0.000000e+00
@FragColor_shadow = internal global <4 x float> zeroinitializer
@Color_shadow = internal global <4 x float> zeroinitializer
@foo_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %Depth__ = call float @llvm.gla.fReadInterpolant.f32(i32 1024, i32 -1, i32 1), !input !4
  store float %Depth__, float* @Depth_shadow
  %FragDepth_shadow = load float* @Depth_shadow
  store float %FragDepth_shadow, float* @FragDepth_shadow
  %Color__ = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !6
  store <4 x float> %Color__, <4 x float>* @Color_shadow
  %FragColor_shadow = load <4 x float>* @Color_shadow
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  %Color__1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !6
  store <4 x float> %Color__1, <4 x float>* @Color_shadow
  %foo_shadow = load <4 x float>* @Color_shadow
  store <4 x float> %foo_shadow, <4 x float>* @foo_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %0 = load float* @FragDepth_shadow
  call void @llvm.gla.fWriteData.f32(i32 0, i32 -1, float %0), !output !0
  %1 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1, i32 -1, <4 x float> %1), !output !2
  %2 = load <4 x float>* @foo_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 2, i32 -1, <4 x float> %2), !output !3
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.f32(i32, i32, float) nounwind

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!outputs = !{!0, !2, !3}
!inputs = !{!4, !6, !6}

!0 = metadata !{metadata !"gl_FragDepth", i32 11, float* @FragDepth_shadow, metadata !1}
!1 = metadata !{i32 0, i32 0}
!2 = metadata !{metadata !"gl_FragColor", i32 1, <4 x float>* @FragColor_shadow, metadata !1}
!3 = metadata !{metadata !"foo", i32 1, <4 x float>* @foo_shadow, metadata !1}
!4 = metadata !{metadata !"Depth", i32 7, float* @Depth_shadow, metadata !5}
!5 = metadata !{i32 0, i32 1024}
!6 = metadata !{metadata !"Color", i32 7, <4 x float>* @Color_shadow, metadata !7}
!7 = metadata !{i32 0, i32 1025}


Bottom IR:
; ModuleID = 'Top'

define fastcc void @main() {
entry:
  %Color__1 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !6
  %Depth__ = call float @llvm.gla.fReadInterpolant.f32(i32 1024, i32 -1, i32 1), !input !4
  call void @llvm.gla.fWriteData.f32(i32 0, i32 -1, float %Depth__), !output !0
  call void @llvm.gla.fWriteData.v4f32(i32 1, i32 -1, <4 x float> %Color__1), !output !2
  call void @llvm.gla.fWriteData.v4f32(i32 2, i32 -1, <4 x float> %Color__1), !output !3
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.f32(i32, i32, float) nounwind

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!outputs = !{!0, !2, !3}
!inputs = !{!4, !6, !6}

!0 = metadata !{metadata !"gl_FragDepth", i32 11, null, metadata !1}
!1 = metadata !{i32 0, i32 0}
!2 = metadata !{metadata !"gl_FragColor", i32 1, null, metadata !1}
!3 = metadata !{metadata !"foo", i32 1, null, metadata !1}
!4 = metadata !{metadata !"Depth", i32 7, null, metadata !5}
!5 = metadata !{i32 0, i32 1024}
!6 = metadata !{metadata !"Color", i32 7, null, metadata !7}
!7 = metadata !{i32 0, i32 1025}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
out vec4 foo;
in vec4 Color;
in float Depth;

void main()
{
    gl_FragDepth = Depth;
    gl_FragColor = Color;
    foo = Color;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
out vec4 foo;
in vec4 Color;
in float Depth;

void main()
{
    gl_FragDepth = Depth;
    gl_FragColor = Color;
    foo = Color;
    
}
