
Top IR:
; ModuleID = 'Top'

@"sampler2D tex" = external addrspace(1) constant i32
@coord_shadow = internal global <2 x float> zeroinitializer
@FragColor_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %v = alloca <4 x float>
  %0 = load i32 addrspace(1)* @"sampler2D tex", !sampler !0
  %coord__ = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !1
  store <2 x float> %coord__, <2 x float>* @coord_shadow
  %1 = load <2 x float>* @coord_shadow
  %v1 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %1), !precision !5
  store <4 x float> %v1, <4 x float>* %v
  %2 = load <4 x float>* %v
  %3 = fcmp oeq <4 x float> %2, <float 0x3FB99999A0000000, float 0x3FC99999A0000000, float 0x3FD3333340000000, float 0x3FD99999A0000000>
  %4 = call i1 @llvm.gla.all.v4i1(<4 x i1> %3)
  br i1 %4, label %then, label %ifmerge

then:                                             ; preds = %entry
  call void @llvm.gla.discard()
  br label %stage-exit

post-discard:                                     ; No predecessors!
  br label %ifmerge

ifmerge:                                          ; preds = %entry, %post-discard
  %FragColor_shadow = load <4 x float>* %v
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge
  %5 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %5), !output !3
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue, %then
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare i1 @llvm.gla.all.v4i1(<4 x i1>) nounwind readnone

declare void @llvm.gla.discard() nounwind

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!samplers = !{!0}
!inputs = !{!1}
!outputs = !{!3}

!0 = metadata !{metadata !"tex", i32 0, i32 addrspace(1)* @"sampler2D tex", i32 1, i1 false, i1 false}
!1 = metadata !{metadata !"coord", i32 7, <2 x float>* @coord_shadow_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024}
!3 = metadata !{metadata !"gl_FragColor", i32 1, <4 x float>* @FragColor_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 2, i32 0}
!5 = metadata !{i32 1}


Bottom IR:
; ModuleID = 'Top'

@"sampler2D tex" = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @"sampler2D tex", align 4, !sampler !0
  %coord__ = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !1
  %v1 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %coord__), !precision !5
  %1 = fcmp oeq <4 x float> %v1, <float 0x3FB99999A0000000, float 0x3FC99999A0000000, float 0x3FD3333340000000, float 0x3FD99999A0000000>
  %2 = call i1 @llvm.gla.all.v4i1(<4 x i1> %1)
  br i1 %2, label %then, label %ifmerge

then:                                             ; preds = %entry
  call void @llvm.gla.discard()
  br label %stage-exit

ifmerge:                                          ; preds = %entry
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %v1), !output !3
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue, %then
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare i1 @llvm.gla.all.v4i1(<4 x i1>) nounwind readnone

declare void @llvm.gla.discard() nounwind

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!samplers = !{!0}
!inputs = !{!1}
!outputs = !{!3}

!0 = metadata !{metadata !"tex", i32 0, i32 addrspace(1)* @"sampler2D tex", i32 1, i1 false, i1 false}
!1 = metadata !{metadata !"coord", i32 7, <2 x float>* @coord_shadow_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024}
!3 = metadata !{metadata !"gl_FragColor", i32 1, <4 x float>* @FragColor_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 2, i32 0}
!5 = metadata !{i32 1}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 100
uniform sampler2D tex;
varying vec2 coord;
const vec4 const23 = vec4(0.1, 0.2, 0.3, 0.4);

void main()
{
    lowp vec4 temp21 = texture2D(tex, coord);
    bvec4 temp22 = equal(temp21, const23);
    bool temp24 = all(temp22);
    if (temp24) {
        discard;
    }
    
    gl_FragColor = temp21;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 100
uniform sampler2D tex;
varying vec2 coord;
const vec4 const23 = vec4(0.1, 0.2, 0.3, 0.4);

void main()
{
    lowp vec4 temp211 = texture2D(tex, coord);
    bvec4 temp222 = equal(temp211, const23);
    bool temp243 = all(temp222);
    if (temp243) {
        discard;
    }
    
    gl_FragColor = temp211;
    
}
