
Top IR:
; ModuleID = 'Top'

@FragData_shadow = internal global [32 x <4 x float>] zeroinitializer
@i = external addrspace(2) constant i32
@Color_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(2)* @i, !gla.uniform !2
  %Color = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1056, i32 -1, i32 1), !gla.input !3
  store <4 x float> %Color, <4 x float>* @Color_shadow
  %1 = load <4 x float>* @Color_shadow
  %2 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 %0
  store <4 x float> %1, <4 x float>* %2
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %3 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 0)
  call void @llvm.gla.fWriteData.v4f32(i32 1024, i32 -1, <4 x float> %3), !gla.output !0
  %4 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 1)
  call void @llvm.gla.fWriteData.v4f32(i32 1025, i32 -1, <4 x float> %4), !gla.output !0
  %5 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 2)
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> %5), !gla.output !0
  %6 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 3)
  call void @llvm.gla.fWriteData.v4f32(i32 1027, i32 -1, <4 x float> %6), !gla.output !0
  %7 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 4)
  call void @llvm.gla.fWriteData.v4f32(i32 1028, i32 -1, <4 x float> %7), !gla.output !0
  %8 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 5)
  call void @llvm.gla.fWriteData.v4f32(i32 1029, i32 -1, <4 x float> %8), !gla.output !0
  %9 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 6)
  call void @llvm.gla.fWriteData.v4f32(i32 1030, i32 -1, <4 x float> %9), !gla.output !0
  %10 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 7)
  call void @llvm.gla.fWriteData.v4f32(i32 1031, i32 -1, <4 x float> %10), !gla.output !0
  %11 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 8)
  call void @llvm.gla.fWriteData.v4f32(i32 1032, i32 -1, <4 x float> %11), !gla.output !0
  %12 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 9)
  call void @llvm.gla.fWriteData.v4f32(i32 1033, i32 -1, <4 x float> %12), !gla.output !0
  %13 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 10)
  call void @llvm.gla.fWriteData.v4f32(i32 1034, i32 -1, <4 x float> %13), !gla.output !0
  %14 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 11)
  call void @llvm.gla.fWriteData.v4f32(i32 1035, i32 -1, <4 x float> %14), !gla.output !0
  %15 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 12)
  call void @llvm.gla.fWriteData.v4f32(i32 1036, i32 -1, <4 x float> %15), !gla.output !0
  %16 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 13)
  call void @llvm.gla.fWriteData.v4f32(i32 1037, i32 -1, <4 x float> %16), !gla.output !0
  %17 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 14)
  call void @llvm.gla.fWriteData.v4f32(i32 1038, i32 -1, <4 x float> %17), !gla.output !0
  %18 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 15)
  call void @llvm.gla.fWriteData.v4f32(i32 1039, i32 -1, <4 x float> %18), !gla.output !0
  %19 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 16)
  call void @llvm.gla.fWriteData.v4f32(i32 1040, i32 -1, <4 x float> %19), !gla.output !0
  %20 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 17)
  call void @llvm.gla.fWriteData.v4f32(i32 1041, i32 -1, <4 x float> %20), !gla.output !0
  %21 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 18)
  call void @llvm.gla.fWriteData.v4f32(i32 1042, i32 -1, <4 x float> %21), !gla.output !0
  %22 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 19)
  call void @llvm.gla.fWriteData.v4f32(i32 1043, i32 -1, <4 x float> %22), !gla.output !0
  %23 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 20)
  call void @llvm.gla.fWriteData.v4f32(i32 1044, i32 -1, <4 x float> %23), !gla.output !0
  %24 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 21)
  call void @llvm.gla.fWriteData.v4f32(i32 1045, i32 -1, <4 x float> %24), !gla.output !0
  %25 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 22)
  call void @llvm.gla.fWriteData.v4f32(i32 1046, i32 -1, <4 x float> %25), !gla.output !0
  %26 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 23)
  call void @llvm.gla.fWriteData.v4f32(i32 1047, i32 -1, <4 x float> %26), !gla.output !0
  %27 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 24)
  call void @llvm.gla.fWriteData.v4f32(i32 1048, i32 -1, <4 x float> %27), !gla.output !0
  %28 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 25)
  call void @llvm.gla.fWriteData.v4f32(i32 1049, i32 -1, <4 x float> %28), !gla.output !0
  %29 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 26)
  call void @llvm.gla.fWriteData.v4f32(i32 1050, i32 -1, <4 x float> %29), !gla.output !0
  %30 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 27)
  call void @llvm.gla.fWriteData.v4f32(i32 1051, i32 -1, <4 x float> %30), !gla.output !0
  %31 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 28)
  call void @llvm.gla.fWriteData.v4f32(i32 1052, i32 -1, <4 x float> %31), !gla.output !0
  %32 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 29)
  call void @llvm.gla.fWriteData.v4f32(i32 1053, i32 -1, <4 x float> %32), !gla.output !0
  %33 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 30)
  call void @llvm.gla.fWriteData.v4f32(i32 1054, i32 -1, <4 x float> %33), !gla.output !0
  %34 = load <4 x float>* getelementptr inbounds ([32 x <4 x float>]* @FragData_shadow, i32 0, i32 31)
  call void @llvm.gla.fWriteData.v4f32(i32 1055, i32 -1, <4 x float> %34), !gla.output !0
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!gla.outputs = !{!0}
!gla.uniforms = !{!2}
!gla.inputs = !{!3}

!0 = metadata !{metadata !"gl_FragData", i32 7, [32 x <4 x float>]* @FragData_shadow_typeProxy, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 1024, null}
!2 = metadata !{metadata !"i", i32 12, i32* @i_typeProxy, metadata !1}
!3 = metadata !{metadata !"Color", i32 1, <4 x float>* @Color_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1056, null}


Bottom IR:
; ModuleID = 'Top'

@FragData_shadow = internal unnamed_addr global [32 x <4 x float>] zeroinitializer
@i = external addrspace(2) constant i32

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(2)* @i, align 4, !gla.uniform !2
  %Color = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1056, i32 -1, i32 1), !gla.input !3
  %1 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 %0
  store <4 x float> %Color, <4 x float>* %1, align 16
  %gla_constGEP = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 0
  %2 = load <4 x float>* %gla_constGEP, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1024, i32 -1, <4 x float> %2), !gla.output !0
  %gla_constGEP1 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 1
  %3 = load <4 x float>* %gla_constGEP1, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1025, i32 -1, <4 x float> %3), !gla.output !0
  %gla_constGEP2 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 2
  %4 = load <4 x float>* %gla_constGEP2, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> %4), !gla.output !0
  %gla_constGEP3 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 3
  %5 = load <4 x float>* %gla_constGEP3, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1027, i32 -1, <4 x float> %5), !gla.output !0
  %gla_constGEP4 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 4
  %6 = load <4 x float>* %gla_constGEP4, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1028, i32 -1, <4 x float> %6), !gla.output !0
  %gla_constGEP5 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 5
  %7 = load <4 x float>* %gla_constGEP5, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1029, i32 -1, <4 x float> %7), !gla.output !0
  %gla_constGEP6 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 6
  %8 = load <4 x float>* %gla_constGEP6, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1030, i32 -1, <4 x float> %8), !gla.output !0
  %gla_constGEP7 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 7
  %9 = load <4 x float>* %gla_constGEP7, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1031, i32 -1, <4 x float> %9), !gla.output !0
  %gla_constGEP8 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 8
  %10 = load <4 x float>* %gla_constGEP8, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1032, i32 -1, <4 x float> %10), !gla.output !0
  %gla_constGEP9 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 9
  %11 = load <4 x float>* %gla_constGEP9, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1033, i32 -1, <4 x float> %11), !gla.output !0
  %gla_constGEP10 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 10
  %12 = load <4 x float>* %gla_constGEP10, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1034, i32 -1, <4 x float> %12), !gla.output !0
  %gla_constGEP11 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 11
  %13 = load <4 x float>* %gla_constGEP11, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1035, i32 -1, <4 x float> %13), !gla.output !0
  %gla_constGEP12 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 12
  %14 = load <4 x float>* %gla_constGEP12, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1036, i32 -1, <4 x float> %14), !gla.output !0
  %gla_constGEP13 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 13
  %15 = load <4 x float>* %gla_constGEP13, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1037, i32 -1, <4 x float> %15), !gla.output !0
  %gla_constGEP14 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 14
  %16 = load <4 x float>* %gla_constGEP14, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1038, i32 -1, <4 x float> %16), !gla.output !0
  %gla_constGEP15 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 15
  %17 = load <4 x float>* %gla_constGEP15, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1039, i32 -1, <4 x float> %17), !gla.output !0
  %gla_constGEP16 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 16
  %18 = load <4 x float>* %gla_constGEP16, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1040, i32 -1, <4 x float> %18), !gla.output !0
  %gla_constGEP17 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 17
  %19 = load <4 x float>* %gla_constGEP17, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1041, i32 -1, <4 x float> %19), !gla.output !0
  %gla_constGEP18 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 18
  %20 = load <4 x float>* %gla_constGEP18, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1042, i32 -1, <4 x float> %20), !gla.output !0
  %gla_constGEP19 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 19
  %21 = load <4 x float>* %gla_constGEP19, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1043, i32 -1, <4 x float> %21), !gla.output !0
  %gla_constGEP20 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 20
  %22 = load <4 x float>* %gla_constGEP20, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1044, i32 -1, <4 x float> %22), !gla.output !0
  %gla_constGEP21 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 21
  %23 = load <4 x float>* %gla_constGEP21, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1045, i32 -1, <4 x float> %23), !gla.output !0
  %gla_constGEP22 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 22
  %24 = load <4 x float>* %gla_constGEP22, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1046, i32 -1, <4 x float> %24), !gla.output !0
  %gla_constGEP23 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 23
  %25 = load <4 x float>* %gla_constGEP23, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1047, i32 -1, <4 x float> %25), !gla.output !0
  %gla_constGEP24 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 24
  %26 = load <4 x float>* %gla_constGEP24, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1048, i32 -1, <4 x float> %26), !gla.output !0
  %gla_constGEP25 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 25
  %27 = load <4 x float>* %gla_constGEP25, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1049, i32 -1, <4 x float> %27), !gla.output !0
  %gla_constGEP26 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 26
  %28 = load <4 x float>* %gla_constGEP26, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1050, i32 -1, <4 x float> %28), !gla.output !0
  %gla_constGEP27 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 27
  %29 = load <4 x float>* %gla_constGEP27, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1051, i32 -1, <4 x float> %29), !gla.output !0
  %gla_constGEP28 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 28
  %30 = load <4 x float>* %gla_constGEP28, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1052, i32 -1, <4 x float> %30), !gla.output !0
  %gla_constGEP29 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 29
  %31 = load <4 x float>* %gla_constGEP29, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1053, i32 -1, <4 x float> %31), !gla.output !0
  %gla_constGEP30 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 30
  %32 = load <4 x float>* %gla_constGEP30, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1054, i32 -1, <4 x float> %32), !gla.output !0
  %gla_constGEP31 = getelementptr [32 x <4 x float>]* @FragData_shadow, i32 0, i32 31
  %33 = load <4 x float>* %gla_constGEP31, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 1055, i32 -1, <4 x float> %33), !gla.output !0
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!gla.outputs = !{!0}
!gla.uniforms = !{!2}
!gla.inputs = !{!3}

!0 = metadata !{metadata !"gl_FragData", i32 7, [32 x <4 x float>]* @FragData_shadow_typeProxy, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 1024, null}
!2 = metadata !{metadata !"i", i32 12, i32* @i_typeProxy, metadata !1}
!3 = metadata !{metadata !"Color", i32 1, <4 x float>* @Color_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1056, null}

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load

***Unsupported functionality: missing metadata on load
#### BEGIN COMPILER 0 INFO LOG ####
WARNING: 0:3: varying deprecated in version 130; may be removed in future release
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
vec4 FragData_shadow[32];
uniform int i;
in vec4 Color;

void main()
{
    FragData_shadow[i] = Color;
    vec4 temp21 = FragData_shadow[0];
    gl_FragData[0] = temp21;
    vec4 temp22 = FragData_shadow[1];
    gl_FragData[1] = temp22;
    vec4 temp23 = FragData_shadow[2];
    gl_FragData[2] = temp23;
    vec4 temp24 = FragData_shadow[3];
    gl_FragData[3] = temp24;
    vec4 temp25 = FragData_shadow[4];
    gl_FragData[4] = temp25;
    vec4 temp26 = FragData_shadow[5];
    gl_FragData[5] = temp26;
    vec4 temp27 = FragData_shadow[6];
    gl_FragData[6] = temp27;
    vec4 temp28 = FragData_shadow[7];
    gl_FragData[7] = temp28;
    vec4 temp29 = FragData_shadow[8];
    gl_FragData[8] = temp29;
    vec4 temp30 = FragData_shadow[9];
    gl_FragData[9] = temp30;
    vec4 temp31 = FragData_shadow[10];
    gl_FragData[10] = temp31;
    vec4 temp32 = FragData_shadow[11];
    gl_FragData[11] = temp32;
    vec4 temp33 = FragData_shadow[12];
    gl_FragData[12] = temp33;
    vec4 temp34 = FragData_shadow[13];
    gl_FragData[13] = temp34;
    vec4 temp35 = FragData_shadow[14];
    gl_FragData[14] = temp35;
    vec4 temp36 = FragData_shadow[15];
    gl_FragData[15] = temp36;
    vec4 temp37 = FragData_shadow[16];
    gl_FragData[16] = temp37;
    vec4 temp38 = FragData_shadow[17];
    gl_FragData[17] = temp38;
    vec4 temp39 = FragData_shadow[18];
    gl_FragData[18] = temp39;
    vec4 temp40 = FragData_shadow[19];
    gl_FragData[19] = temp40;
    vec4 temp41 = FragData_shadow[20];
    gl_FragData[20] = temp41;
    vec4 temp42 = FragData_shadow[21];
    gl_FragData[21] = temp42;
    vec4 temp43 = FragData_shadow[22];
    gl_FragData[22] = temp43;
    vec4 temp44 = FragData_shadow[23];
    gl_FragData[23] = temp44;
    vec4 temp45 = FragData_shadow[24];
    gl_FragData[24] = temp45;
    vec4 temp46 = FragData_shadow[25];
    gl_FragData[25] = temp46;
    vec4 temp47 = FragData_shadow[26];
    gl_FragData[26] = temp47;
    vec4 temp48 = FragData_shadow[27];
    gl_FragData[27] = temp48;
    vec4 temp49 = FragData_shadow[28];
    gl_FragData[28] = temp49;
    vec4 temp50 = FragData_shadow[29];
    gl_FragData[29] = temp50;
    vec4 temp51 = FragData_shadow[30];
    gl_FragData[30] = temp51;
    vec4 temp52 = FragData_shadow[31];
    gl_FragData[31] = temp52;
    
}

#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 130
// LunarGOO output (r722)
vec4 FragData_shadow[32];
vec4 FragData_shadow1[32];
uniform int i;
in vec4 Color;

void main()
{
    FragData_shadow[i] = Color;
    vec4 temp211 = FragData_shadow[0];
    FragData_shadow1[0] = temp211;
    vec4 temp222 = FragData_shadow[1];
    FragData_shadow1[1] = temp222;
    vec4 temp233 = FragData_shadow[2];
    FragData_shadow1[2] = temp233;
    vec4 temp244 = FragData_shadow[3];
    FragData_shadow1[3] = temp244;
    vec4 temp255 = FragData_shadow[4];
    FragData_shadow1[4] = temp255;
    vec4 temp266 = FragData_shadow[5];
    FragData_shadow1[5] = temp266;
    vec4 temp277 = FragData_shadow[6];
    FragData_shadow1[6] = temp277;
    vec4 temp288 = FragData_shadow[7];
    FragData_shadow1[7] = temp288;
    vec4 temp299 = FragData_shadow[8];
    FragData_shadow1[8] = temp299;
    vec4 temp3010 = FragData_shadow[9];
    FragData_shadow1[9] = temp3010;
    vec4 temp3111 = FragData_shadow[10];
    FragData_shadow1[10] = temp3111;
    vec4 temp3212 = FragData_shadow[11];
    FragData_shadow1[11] = temp3212;
    vec4 temp3313 = FragData_shadow[12];
    FragData_shadow1[12] = temp3313;
    vec4 temp3414 = FragData_shadow[13];
    FragData_shadow1[13] = temp3414;
    vec4 temp3515 = FragData_shadow[14];
    FragData_shadow1[14] = temp3515;
    vec4 temp3616 = FragData_shadow[15];
    FragData_shadow1[15] = temp3616;
    vec4 temp3717 = FragData_shadow[16];
    FragData_shadow1[16] = temp3717;
    vec4 temp3818 = FragData_shadow[17];
    FragData_shadow1[17] = temp3818;
    vec4 temp3919 = FragData_shadow[18];
    FragData_shadow1[18] = temp3919;
    vec4 temp4020 = FragData_shadow[19];
    FragData_shadow1[19] = temp4020;
    vec4 temp4121 = FragData_shadow[20];
    FragData_shadow1[20] = temp4121;
    vec4 temp4222 = FragData_shadow[21];
    FragData_shadow1[21] = temp4222;
    vec4 temp4323 = FragData_shadow[22];
    FragData_shadow1[22] = temp4323;
    vec4 temp4424 = FragData_shadow[23];
    FragData_shadow1[23] = temp4424;
    vec4 temp4525 = FragData_shadow[24];
    FragData_shadow1[24] = temp4525;
    vec4 temp4626 = FragData_shadow[25];
    FragData_shadow1[25] = temp4626;
    vec4 temp4727 = FragData_shadow[26];
    FragData_shadow1[26] = temp4727;
    vec4 temp4828 = FragData_shadow[27];
    FragData_shadow1[27] = temp4828;
    vec4 temp4929 = FragData_shadow[28];
    FragData_shadow1[28] = temp4929;
    vec4 temp5030 = FragData_shadow[29];
    FragData_shadow1[29] = temp5030;
    vec4 temp5131 = FragData_shadow[30];
    FragData_shadow1[30] = temp5131;
    vec4 temp5232 = FragData_shadow[31];
    FragData_shadow1[31] = temp5232;
    gl_FragData[0] = temp211;
    vec4 temp53 = FragData_shadow1[1];
    gl_FragData[1] = temp53;
    vec4 temp54 = FragData_shadow1[2];
    gl_FragData[2] = temp54;
    vec4 temp55 = FragData_shadow1[3];
    gl_FragData[3] = temp55;
    vec4 temp56 = FragData_shadow1[4];
    gl_FragData[4] = temp56;
    vec4 temp57 = FragData_shadow1[5];
    gl_FragData[5] = temp57;
    vec4 temp58 = FragData_shadow1[6];
    gl_FragData[6] = temp58;
    vec4 temp59 = FragData_shadow1[7];
    gl_FragData[7] = temp59;
    vec4 temp60 = FragData_shadow1[8];
    gl_FragData[8] = temp60;
    vec4 temp61 = FragData_shadow1[9];
    gl_FragData[9] = temp61;
    vec4 temp62 = FragData_shadow1[10];
    gl_FragData[10] = temp62;
    vec4 temp63 = FragData_shadow1[11];
    gl_FragData[11] = temp63;
    vec4 temp64 = FragData_shadow1[12];
    gl_FragData[12] = temp64;
    vec4 temp65 = FragData_shadow1[13];
    gl_FragData[13] = temp65;
    vec4 temp66 = FragData_shadow1[14];
    gl_FragData[14] = temp66;
    vec4 temp67 = FragData_shadow1[15];
    gl_FragData[15] = temp67;
    vec4 temp68 = FragData_shadow1[16];
    gl_FragData[16] = temp68;
    vec4 temp69 = FragData_shadow1[17];
    gl_FragData[17] = temp69;
    vec4 temp70 = FragData_shadow1[18];
    gl_FragData[18] = temp70;
    vec4 temp71 = FragData_shadow1[19];
    gl_FragData[19] = temp71;
    vec4 temp72 = FragData_shadow1[20];
    gl_FragData[20] = temp72;
    vec4 temp73 = FragData_shadow1[21];
    gl_FragData[21] = temp73;
    vec4 temp74 = FragData_shadow1[22];
    gl_FragData[22] = temp74;
    vec4 temp75 = FragData_shadow1[23];
    gl_FragData[23] = temp75;
    vec4 temp76 = FragData_shadow1[24];
    gl_FragData[24] = temp76;
    vec4 temp77 = FragData_shadow1[25];
    gl_FragData[25] = temp77;
    vec4 temp78 = FragData_shadow1[26];
    gl_FragData[26] = temp78;
    vec4 temp79 = FragData_shadow1[27];
    gl_FragData[27] = temp79;
    vec4 temp80 = FragData_shadow1[28];
    gl_FragData[28] = temp80;
    vec4 temp81 = FragData_shadow1[29];
    gl_FragData[29] = temp81;
    vec4 temp82 = FragData_shadow1[30];
    gl_FragData[30] = temp82;
    vec4 temp83 = FragData_shadow1[31];
    gl_FragData[31] = temp83;
    
}

