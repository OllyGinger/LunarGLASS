
Top IR:
; ModuleID = 'Top'

%s3 = type { %s2, i32, float, %s1 }
%s2 = type { i32, float, %s1, <4 x float> }
%s1 = type { i32, float }

@foo3 = external addrspace(2) constant %s3
@coord_shadow = internal global <2 x float> zeroinitializer
@condition = external addrspace(2) constant i32
@color_shadow = internal global <4 x float> zeroinitializer
@FragColor_shadow = internal global <4 x float> zeroinitializer
@"sampler2D sampler" = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %a = alloca [16 x float]
  %i = alloca i32
  %localArray = alloca [16 x float]
  %x = alloca i32
  %localIArray = alloca [8 x i32]
  %localFArray = alloca [16 x float]
  %locals2 = alloca %s2
  %locals21 = load %s2 addrspace(2)* getelementptr inbounds (%s3 addrspace(2)* @foo3, i32 0, i32 0)
  store %s2 %locals21, %s2* %locals2
  %0 = load i32 addrspace(2)* getelementptr inbounds (%s3 addrspace(2)* @foo3, i32 0, i32 0, i32 0)
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %then, label %else

then:                                             ; preds = %entry
  %2 = getelementptr %s2* %locals2, i32 0, i32 2, i32 1
  store float 1.000000e+00, float* %2
  %coord__ = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  store <2 x float> %coord__, <2 x float>* @coord_shadow
  %3 = load <2 x float>* @coord_shadow
  %4 = extractelement <2 x float> %3, i32 0
  %5 = getelementptr [16 x float]* %localFArray, i32 0, i32 4
  store float %4, float* %5
  %6 = load i32 addrspace(2)* getelementptr inbounds (%s3 addrspace(2)* @foo3, i32 0, i32 0, i32 0)
  %7 = getelementptr [8 x i32]* %localIArray, i32 0, i32 2
  store i32 %6, i32* %7
  br label %ifmerge

else:                                             ; preds = %entry
  %coord__2 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  store <2 x float> %coord__2, <2 x float>* @coord_shadow
  %8 = load <2 x float>* @coord_shadow
  %9 = extractelement <2 x float> %8, i32 0
  %10 = getelementptr %s2* %locals2, i32 0, i32 2, i32 1
  store float %9, float* %10
  %11 = getelementptr [16 x float]* %localFArray, i32 0, i32 4
  store float 1.000000e+00, float* %11
  %12 = getelementptr [8 x i32]* %localIArray, i32 0, i32 2
  store i32 0, i32* %12
  br label %ifmerge

ifmerge:                                          ; preds = %else, %then
  %13 = getelementptr [8 x i32]* %localIArray, i32 0, i32 2
  %14 = load i32* %13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %then3, label %ifmerge4

then3:                                            ; preds = %ifmerge
  %16 = getelementptr [16 x float]* %localFArray, i32 0, i32 4
  %17 = load float* %16
  %18 = fadd float %17, 1.000000e+00
  store float %18, float* %16
  br label %ifmerge4

ifmerge4:                                         ; preds = %ifmerge, %then3
  store i32 5, i32* %x
  %19 = load i32* %x
  %coord__5 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  store <2 x float> %coord__5, <2 x float>* @coord_shadow
  %20 = load <2 x float>* @coord_shadow
  %21 = extractelement <2 x float> %20, i32 0
  %22 = getelementptr [16 x float]* %localArray, i32 0, i32 %19
  store float %21, float* %22
  store i32 0, i32* %i
  br label %loop-header

loop-header:                                      ; preds = %post-loop-continue, %ifmerge7, %ifmerge4
  %23 = load i32* %i
  %24 = icmp slt i32 %23, 16
  %25 = xor i1 %24, true
  br i1 %25, label %then6, label %ifmerge7

then6:                                            ; preds = %loop-header
  br label %loop-merge

post-loop-break:                                  ; No predecessors!
  br label %ifmerge7

ifmerge7:                                         ; preds = %loop-header, %post-loop-break
  %26 = load i32* %i
  %27 = getelementptr [16 x float]* %a, i32 0, i32 %26
  store float 0.000000e+00, float* %27
  %28 = load i32* %i
  %i8 = add i32 %28, 1
  store i32 %i8, i32* %i
  br label %loop-header

post-loop-continue:                               ; No predecessors!
  br label %loop-header

loop-merge:                                       ; preds = %then6
  %29 = load i32 addrspace(2)* @condition
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %then9, label %ifmerge11

then9:                                            ; preds = %loop-merge
  %a10 = load [16 x float]* %localArray
  store [16 x float] %a10, [16 x float]* %a
  br label %ifmerge11

ifmerge11:                                        ; preds = %loop-merge, %then9
  %color__ = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  store <4 x float> %color__, <4 x float>* @color_shadow
  %31 = load <4 x float>* @color_shadow
  %32 = getelementptr %s2* %locals2, i32 0, i32 3
  store <4 x float> %31, <4 x float>* %32
  %coord__12 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  store <2 x float> %coord__12, <2 x float>* @coord_shadow
  %33 = load <2 x float>* @coord_shadow
  %34 = extractelement <2 x float> %33, i32 1
  %35 = getelementptr %s2* %locals2, i32 0, i32 3
  %36 = load <4 x float>* %35
  %37 = insertelement <4 x float> %36, float %34, i32 2
  store <4 x float> %37, <4 x float>* %35
  %38 = getelementptr %s2* %locals2, i32 0, i32 3
  %39 = load <4 x float>* %38
  %40 = getelementptr [16 x float]* %localFArray, i32 0, i32 4
  %41 = load float* %40
  %42 = getelementptr %s2* %locals2, i32 0, i32 2, i32 1
  %43 = load float* %42
  %44 = fadd float %41, %43
  %45 = load i32* %x
  %46 = getelementptr [16 x float]* %localArray, i32 0, i32 %45
  %47 = load float* %46
  %48 = fadd float %44, %47
  %49 = load i32* %x
  %50 = getelementptr [16 x float]* %a, i32 0, i32 %49
  %51 = load float* %50
  %52 = fadd float %48, %51
  %53 = insertelement <4 x float> undef, float %52, i32 0
  %54 = insertelement <4 x float> %53, float %52, i32 1
  %55 = insertelement <4 x float> %54, float %52, i32 2
  %56 = insertelement <4 x float> %55, float %52, i32 3
  %57 = fmul <4 x float> %39, %56
  %58 = load i32 addrspace(1)* @"sampler2D sampler"
  %coord__13 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  store <2 x float> %coord__13, <2 x float>* @coord_shadow
  %59 = load <2 x float>* @coord_shadow
  %60 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %58, i32 0, <2 x float> %59)
  %FragColor_shadow = fmul <4 x float> %57, %60
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge11
  %61 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %61)
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind


Bottom IR:
; ModuleID = 'Top'

%s3 = type { %s2, i32, float, %s1 }
%s2 = type { i32, float, %s1, <4 x float> }
%s1 = type { i32, float }

@foo3 = external addrspace(2) constant %s3
@condition = external addrspace(2) constant i32
@"sampler2D sampler" = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %gla_constGEP = getelementptr %s3 addrspace(2)* @foo3, i32 0, i32 0, i32 0
  %0 = load i32 addrspace(2)* %gla_constGEP, align 16
  %1 = icmp sgt i32 %0, 0
  %coord__ = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 0, i32 -1, i32 1)
  %2 = extractelement <2 x float> %coord__, i32 0
  %3 = select i1 %1, float %2, float 1.000000e+00
  %4 = fadd float %3, 1.000000e+00
  %select33 = select i1 %1, float 1.000000e+00, float %2
  %select.v = select i1 %1, float %2, float %4
  %5 = load i32 addrspace(2)* @condition, align 4
  %6 = icmp eq i32 %5, 1
  %select = select i1 %6, float %2, float 0.000000e+00
  %7 = fadd float %select33, %select.v
  %8 = fadd float %2, %7
  %9 = fadd float %8, %select
  %10 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %9, <4 x i32> zeroinitializer)
  %color__ = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1, i32 -1, i32 1)
  %11 = load i32 addrspace(1)* @"sampler2D sampler", align 4
  %12 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.v2f32.f32(<4 x float> %color__, i32 4, float undef, i32 undef, float undef, i32 undef, <2 x float> %coord__, i32 1, float undef, i32 undef)
  %13 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %11, i32 0, <2 x float> %coord__)
  %14 = fmul <4 x float> %12, %10
  %FragColor_shadow = fmul <4 x float> %13, %14
  call void @llvm.gla.fWriteData.v4f32(i32 0, i32 -1, <4 x float> %FragColor_shadow)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.v2f32.f32(<4 x float>, i32, float, i32, float, i32, <2 x float>, i32, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) nounwind readnone
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
struct s1 {
    int member0;
    float member1;
};

struct s2 {
    int member0;
    float member1;
    s1 member2;
    vec4 member3;
};

struct s3 {
    s2 member0;
    int member1;
    float member2;
    s1 member3;
};

uniform s3 foo3;
uniform int condition;
uniform sampler2D sampler;
const int const23_0 = 0;
in vec2 coord;
const float const25_1f = 1.0;
const int const30_1 = 1;
const float const32_0f = 0.0;
in vec4 color;

void main()
{
    int temp21 = foo3.member0.member0;
    bool temp22 = temp21 > const23_0;
    float temp24 = temp22 ? coord.x : const25_1f;
    float temp26 = temp24 + const25_1f;
    float select33 = temp22 ? const25_1f : coord.x;
    float select_v = temp22 ? coord.x : temp26;
    bool temp29 = condition == const30_1;
    float select = temp29 ? coord.x : const32_0f;
    float temp33 = select33 + select_v;
    float temp34 = coord.x + temp33;
    float temp35 = temp34 + select;
    vec4 temp36 = vec4(temp35);
    vec4 temp37 = color;
    temp37.z = coord.y;
    vec4 temp38 = texture(sampler, coord);
    vec4 temp39 = temp37 * temp36;
    vec4 FragColor_shadow = temp38 * temp39;
    gl_FragColor = FragColor_shadow;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
struct s1 {
    int member0;
    float member1;
};

struct s2 {
    int member0;
    float member1;
    s1 member2;
    vec4 member3;
};

struct s3 {
    s2 member0;
    int member1;
    float member2;
    s1 member3;
};

uniform s3 foo3;
uniform int condition;
uniform sampler2D sampler;
const int const23_0 = 0;
in vec2 coord;
const float const25_1f = 1.0;
const float const27_2f = 2.0;
const int const29_1 = 1;
const float const31_0f = 0.0;
in vec4 color;

void main()
{
    int temp211 = foo3.member0.member0;
    bool temp222 = temp211 > const23_0;
    float select43 = temp222 ? const25_1f : coord.x;
    float select = temp222 ? coord.x : const27_2f;
    bool temp2921 = condition == const29_1;
    float select45 = temp2921 ? coord.x : const31_0f;
    float temp3329 = select43 + select;
    float temp3431 = temp3329 + coord.x;
    float temp3532 = select45 + temp3431;
    vec4 temp35 = vec4(temp3532);
    vec4 temp36 = color;
    temp36.z = coord.y;
    vec4 temp3939 = temp36 * temp35;
    vec4 temp3838 = texture(sampler, coord);
    vec4 FragColor_shadow40 = temp3838 * temp3939;
    gl_FragColor = FragColor_shadow40;
    
}
