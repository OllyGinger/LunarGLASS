
Top IR:
; ModuleID = 'Top'

@c_shadow = internal global <3 x float> zeroinitializer
@color_shadow = internal global <3 x float> zeroinitializer
@p_shadow = internal global [2 x <4 x float>] zeroinitializer
@pos_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %color__ = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1024, i32 -1, i32 1), !input !3
  store <3 x float> %color__, <3 x float>* @color_shadow
  %c_shadow = load <3 x float>* @color_shadow
  store <3 x float> %c_shadow, <3 x float>* @c_shadow
  %pos__ = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !5
  store <4 x float> %pos__, <4 x float>* @pos_shadow
  %0 = load <4 x float>* @pos_shadow
  store <4 x float> %0, <4 x float>* getelementptr inbounds ([2 x <4 x float>]* @p_shadow, i32 0, i32 1)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %1 = load <3 x float>* @c_shadow
  call void @llvm.gla.fWriteData.v3f32(i32 0, i32 -1, <3 x float> %1), !output !0
  %2 = load <4 x float>* getelementptr inbounds ([2 x <4 x float>]* @p_shadow, i32 0, i32 1)
  call void @llvm.gla.fWriteData.v4f32(i32 2, i32 -1, <4 x float> %2), !output !2
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v3f32(i32, i32, <3 x float>) nounwind

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!outputs = !{!0, !2}
!inputs = !{!3, !5}

!0 = metadata !{metadata !"c", i32 1, <3 x float>* @c_shadow, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 0}
!2 = metadata !{metadata !"p", i32 1, [2 x <4 x float>]* @p_shadow, metadata !1}
!3 = metadata !{metadata !"color", i32 7, <3 x float>* @color_shadow, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1024}
!5 = metadata !{metadata !"pos", i32 7, <4 x float>* @pos_shadow, metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1025}


Bottom IR:
; ModuleID = 'Top'

@p_shadow = internal unnamed_addr global [2 x <4 x float>] zeroinitializer

define fastcc void @main() {
entry:
  %pos__ = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !input !5
  %gla_constGEP = getelementptr [2 x <4 x float>]* @p_shadow, i32 0, i32 1
  store <4 x float> %pos__, <4 x float>* %gla_constGEP, align 16
  %color__ = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1024, i32 -1, i32 1), !input !3
  call void @llvm.gla.fWriteData.v3f32(i32 0, i32 -1, <3 x float> %color__), !output !0
  %gla_constGEP2 = getelementptr [2 x <4 x float>]* @p_shadow, i32 0, i32 1
  %0 = load <4 x float>* %gla_constGEP2, align 16
  call void @llvm.gla.fWriteData.v4f32(i32 2, i32 -1, <4 x float> %0), !output !2
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v3f32(i32, i32, <3 x float>) nounwind

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!outputs = !{!0, !2}
!inputs = !{!3, !5}

!0 = metadata !{metadata !"c", i32 1, null, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 0}
!2 = metadata !{metadata !"p", i32 1, [2 x <4 x float>]* @p_shadow, metadata !1}
!3 = metadata !{metadata !"color", i32 7, null, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1024}
!5 = metadata !{metadata !"pos", i32 7, null, metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1025}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 300 es
vec4[2] p_shadow;
out vec3 c;
out vec4 p[2];
in vec4 pos;
in vec3 color;

void main()
{
    p_shadow[1] = pos;
    c = color;
    vec4 temp21 = p_shadow[1];
    p[1] = temp21;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 300 es
vec4[2] p_shadow1;
out vec3 c;
out vec4 p[2];
in vec4 pos;
in vec3 color;

void main()
{
    p_shadow1[1] = pos;
    c = color;
    vec4 temp21 = p_shadow1[1];
    p[1] = temp21;
    
}
