
Top IR:
; ModuleID = 'Top'

@"sampler1D texSampler1D" = external addrspace(1) constant i32
@coords2D_shadow = internal global <2 x float> zeroinitializer
@"sampler2D texSampler2D" = external addrspace(1) constant i32
@"sampler3D texSampler3D" = external addrspace(1) constant i32
@"samplerCube texSamplerCube" = external addrspace(1) constant i32
@"sampler1DShadow shadowSampler1D" = external addrspace(1) constant i32
@"sampler2DShadow shadowSampler2D" = external addrspace(1) constant i32
@FragColor_shadow = internal global <4 x float> zeroinitializer
@u = external addrspace(2) constant <4 x float>
@blend = external addrspace(2) constant float

define fastcc void @main() {
entry:
  %constructed41 = alloca <3 x float>
  %constructed = alloca <3 x float>
  %offset = alloca <2 x i32>
  %gradY = alloca <2 x float>
  %gradX = alloca <2 x float>
  %iLod = alloca i32
  %iCoords2D = alloca <2 x i32>
  %color = alloca <4 x float>
  %coords4D = alloca <4 x float>
  %coords3D = alloca <3 x float>
  %coords1D = alloca float
  %proj = alloca float
  %lod = alloca float
  %bias = alloca float
  %blendscale = alloca float
  store float 0x3FFC9FBE80000000, float* %blendscale
  store float 2.000000e+00, float* %bias
  store float 3.000000e+00, float* %lod
  store float 2.000000e+00, float* %proj
  store float 0x3FFC9FBE80000000, float* %coords1D
  store <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, <3 x float>* %coords3D
  store <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, <4 x float>* %coords4D
  store <4 x float> zeroinitializer, <4 x float>* %color
  %0 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %1 = load float* %coords1D
  %2 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float %1)
  %3 = load <4 x float>* %color
  %color1 = fadd <4 x float> %3, %2
  store <4 x float> %color1, <4 x float>* %color
  %4 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %5 = load float* %coords1D
  %6 = load float* %bias
  %7 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %4, i32 130, float %5, float %6, float undef)
  %8 = load <4 x float>* %color
  %color2 = fadd <4 x float> %8, %7
  store <4 x float> %color2, <4 x float>* %color
  %9 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %coords2D__ = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__, <2 x float>* @coords2D_shadow
  %10 = load <2 x float>* @coords2D_shadow
  %11 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 1, i32 %9, i32 1, <2 x float> %10)
  %12 = load <4 x float>* %color
  %color3 = fadd <4 x float> %12, %11
  store <4 x float> %color3, <4 x float>* %color
  %13 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %14 = load <4 x float>* %coords4D
  %15 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 1, i32 %13, i32 1, <4 x float> %14)
  %16 = load <4 x float>* %color
  %color4 = fadd <4 x float> %16, %15
  store <4 x float> %color4, <4 x float>* %color
  %17 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %coords2D__5 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__5, <2 x float>* @coords2D_shadow
  %18 = load <2 x float>* @coords2D_shadow
  %19 = load float* %bias
  %20 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 1, i32 %17, i32 131, <2 x float> %18, float %19, float undef)
  %21 = load <4 x float>* %color
  %color6 = fadd <4 x float> %21, %20
  store <4 x float> %color6, <4 x float>* %color
  %22 = load i32 addrspace(1)* @"sampler1D texSampler1D", !sampler !0
  %23 = load <4 x float>* %coords4D
  %24 = load float* %bias
  %25 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %22, i32 131, <4 x float> %23, float %24, float undef)
  %26 = load <4 x float>* %color
  %color7 = fadd <4 x float> %26, %25
  store <4 x float> %color7, <4 x float>* %color
  %27 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %coords2D__8 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__8, <2 x float>* @coords2D_shadow
  %28 = load <2 x float>* @coords2D_shadow
  %29 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %27, i32 0, <2 x float> %28)
  %30 = load <4 x float>* %color
  %color9 = fadd <4 x float> %30, %29
  store <4 x float> %color9, <4 x float>* %color
  %31 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %coords2D__10 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__10, <2 x float>* @coords2D_shadow
  %32 = load <2 x float>* @coords2D_shadow
  %33 = load float* %bias
  %34 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %31, i32 130, <2 x float> %32, float %33, float undef)
  %35 = load <4 x float>* %color
  %color11 = fadd <4 x float> %35, %34
  store <4 x float> %color11, <4 x float>* %color
  %36 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %37 = load <3 x float>* %coords3D
  %38 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 2, i32 %36, i32 1, <3 x float> %37)
  %39 = load <4 x float>* %color
  %color12 = fadd <4 x float> %39, %38
  store <4 x float> %color12, <4 x float>* %color
  %40 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %41 = load <4 x float>* %coords4D
  %42 = load float* %bias
  %43 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %40, i32 131, <4 x float> %41, float %42, float undef)
  %44 = load <4 x float>* %color
  %color13 = fadd <4 x float> %44, %43
  store <4 x float> %color13, <4 x float>* %color
  %45 = load i32 addrspace(1)* @"sampler3D texSampler3D", !sampler !2
  %46 = load <3 x float>* %coords3D
  %47 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %45, i32 0, <3 x float> %46)
  %48 = load <4 x float>* %color
  %color14 = fadd <4 x float> %48, %47
  store <4 x float> %color14, <4 x float>* %color
  %49 = load i32 addrspace(1)* @"sampler3D texSampler3D", !sampler !2
  %50 = load <3 x float>* %coords3D
  %51 = load float* %bias
  %52 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %49, i32 130, <3 x float> %50, float %51, float undef)
  %53 = load <4 x float>* %color
  %color15 = fadd <4 x float> %53, %52
  store <4 x float> %color15, <4 x float>* %color
  %54 = load i32 addrspace(1)* @"sampler3D texSampler3D", !sampler !2
  %55 = load <4 x float>* %coords4D
  %56 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %54, i32 1, <4 x float> %55)
  %57 = load <4 x float>* %color
  %color16 = fadd <4 x float> %57, %56
  store <4 x float> %color16, <4 x float>* %color
  %58 = load i32 addrspace(1)* @"sampler3D texSampler3D", !sampler !2
  %59 = load <4 x float>* %coords4D
  %60 = load float* %bias
  %61 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 3, i32 %58, i32 131, <4 x float> %59, float %60, float undef)
  %62 = load <4 x float>* %color
  %color17 = fadd <4 x float> %62, %61
  store <4 x float> %color17, <4 x float>* %color
  %63 = load i32 addrspace(1)* @"samplerCube texSamplerCube", !sampler !3
  %64 = load <3 x float>* %coords3D
  %65 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 4, i32 %63, i32 0, <3 x float> %64)
  %66 = load <4 x float>* %color
  %color18 = fadd <4 x float> %66, %65
  store <4 x float> %color18, <4 x float>* %color
  %67 = load i32 addrspace(1)* @"samplerCube texSamplerCube", !sampler !3
  %68 = load <3 x float>* %coords3D
  %69 = load float* %bias
  %70 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %67, i32 130, <3 x float> %68, float %69, float undef)
  %71 = load <4 x float>* %color
  %color19 = fadd <4 x float> %71, %70
  store <4 x float> %color19, <4 x float>* %color
  %72 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", !sampler !4
  %73 = load <3 x float>* %coords3D
  %74 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %72, i32 8, <3 x float> %73, float undef, float undef)
  %75 = load <4 x float>* %color
  %color20 = fadd <4 x float> %75, %74
  store <4 x float> %color20, <4 x float>* %color
  %76 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", !sampler !4
  %77 = load <3 x float>* %coords3D
  %78 = load float* %bias
  %79 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %76, i32 138, <3 x float> %77, float %78, float undef)
  %80 = load <4 x float>* %color
  %color21 = fadd <4 x float> %80, %79
  store <4 x float> %color21, <4 x float>* %color
  %81 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", !sampler !5
  %82 = load <3 x float>* %coords3D
  %83 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %81, i32 8, <3 x float> %82, float undef, float undef)
  %84 = load <4 x float>* %color
  %color22 = fadd <4 x float> %84, %83
  store <4 x float> %color22, <4 x float>* %color
  %85 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", !sampler !5
  %86 = load <3 x float>* %coords3D
  %87 = load float* %bias
  %88 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %85, i32 138, <3 x float> %86, float %87, float undef)
  %89 = load <4 x float>* %color
  %color23 = fadd <4 x float> %89, %88
  store <4 x float> %color23, <4 x float>* %color
  %90 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", !sampler !4
  %91 = load <4 x float>* %coords4D
  %92 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %90, i32 9, <4 x float> %91, float undef, float undef)
  %93 = load <4 x float>* %color
  %color24 = fadd <4 x float> %93, %92
  store <4 x float> %color24, <4 x float>* %color
  %94 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", !sampler !4
  %95 = load <4 x float>* %coords4D
  %96 = load float* %bias
  %97 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %94, i32 139, <4 x float> %95, float %96, float undef)
  %98 = load <4 x float>* %color
  %color25 = fadd <4 x float> %98, %97
  store <4 x float> %color25, <4 x float>* %color
  %99 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", !sampler !5
  %100 = load <4 x float>* %coords4D
  %101 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %99, i32 9, <4 x float> %100, float undef, float undef)
  %102 = load <4 x float>* %color
  %color26 = fadd <4 x float> %102, %101
  store <4 x float> %color26, <4 x float>* %color
  %103 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", !sampler !5
  %104 = load <4 x float>* %coords4D
  %105 = load float* %bias
  %106 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %103, i32 139, <4 x float> %104, float %105, float undef)
  %107 = load <4 x float>* %color
  %color27 = fadd <4 x float> %107, %106
  store <4 x float> %color27, <4 x float>* %color
  store <2 x i32> <i32 0, i32 5>, <2 x i32>* %iCoords2D
  store i32 1, i32* %iLod
  %108 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %109 = load <2 x i32>* %iCoords2D
  %110 = load i32* %iLod
  %111 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32 2, i32 %108, i32 162, <2 x i32> %109, i32 %110, float undef, i32 undef)
  %112 = load <4 x float>* %color
  %color28 = fadd <4 x float> %112, %111
  store <4 x float> %color28, <4 x float>* %color
  %coords2D__29 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__29, <2 x float>* @coords2D_shadow
  %113 = load <2 x float>* @coords2D_shadow
  %gradX30 = call <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float> %113)
  store <2 x float> %gradX30, <2 x float>* %gradX
  %coords2D__31 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__31, <2 x float>* @coords2D_shadow
  %114 = load <2 x float>* @coords2D_shadow
  %gradY32 = call <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float> %114)
  store <2 x float> %gradY32, <2 x float>* %gradY
  store <2 x i32> <i32 3, i32 -7>, <2 x i32>* %offset
  %115 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %coords2D__33 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__33, <2 x float>* @coords2D_shadow
  %116 = load <2 x float>* @coords2D_shadow
  %117 = load <2 x float>* %gradX
  %118 = load <2 x float>* %gradY
  %119 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32 2, i32 %115, i32 0, <2 x float> %116, float undef, float undef, i32 undef, <2 x float> %117, <2 x float> %118)
  %120 = load <4 x float>* %color
  %color34 = fadd <4 x float> %120, %119
  store <4 x float> %color34, <4 x float>* %color
  %121 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %coords2D__35 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__35, <2 x float>* @coords2D_shadow
  %122 = load <2 x float>* @coords2D_shadow
  %123 = load float* %proj
  %124 = load <3 x float>* %constructed
  %125 = extractelement <2 x float> %122, i32 0
  %126 = insertelement <3 x float> %124, float %125, i32 0
  %127 = extractelement <2 x float> %122, i32 1
  %128 = insertelement <3 x float> %126, float %127, i32 1
  %129 = insertelement <3 x float> %128, float %123, i32 2
  %130 = load <2 x float>* %gradX
  %131 = load <2 x float>* %gradY
  %132 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v2f32.v2f32(i32 2, i32 %121, i32 1, <3 x float> %129, float undef, float undef, i32 undef, <2 x float> %130, <2 x float> %131)
  %133 = load <4 x float>* %color
  %color36 = fadd <4 x float> %133, %132
  store <4 x float> %color36, <4 x float>* %color
  %134 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %coords2D__37 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__37, <2 x float>* @coords2D_shadow
  %135 = load <2 x float>* @coords2D_shadow
  %136 = load <2 x float>* %gradX
  %137 = load <2 x float>* %gradY
  %138 = load <2 x i32>* %offset
  %139 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.v2i32.v2f32.v2f32(i32 2, i32 %134, i32 256, <2 x float> %135, float undef, float undef, <2 x i32> %138, <2 x float> %136, <2 x float> %137)
  %140 = load <4 x float>* %color
  %color38 = fadd <4 x float> %140, %139
  store <4 x float> %color38, <4 x float>* %color
  %141 = load i32 addrspace(1)* @"sampler2D texSampler2D", !sampler !1
  %142 = load <3 x float>* %coords3D
  %143 = load <2 x float>* %gradX
  %144 = load <2 x float>* %gradY
  %145 = load <2 x i32>* %offset
  %146 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32 2, i32 %141, i32 257, <3 x float> %142, float undef, float undef, <2 x i32> %145, <2 x float> %143, <2 x float> %144)
  %147 = load <4 x float>* %color
  %color39 = fadd <4 x float> %147, %146
  store <4 x float> %color39, <4 x float>* %color
  %148 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", !sampler !5
  %coords2D__40 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  store <2 x float> %coords2D__40, <2 x float>* @coords2D_shadow
  %149 = load <2 x float>* @coords2D_shadow
  %150 = load float* %lod
  %151 = load <3 x float>* %constructed41
  %152 = extractelement <2 x float> %149, i32 0
  %153 = insertelement <3 x float> %151, float %152, i32 0
  %154 = extractelement <2 x float> %149, i32 1
  %155 = insertelement <3 x float> %153, float %154, i32 1
  %156 = insertelement <3 x float> %155, float %150, i32 2
  %157 = load <2 x float>* %gradX
  %158 = load <2 x float>* %gradY
  %159 = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v3f32.i32.v2f32.v2f32(i32 2, i32 %148, i32 8, <3 x float> %156, float undef, float undef, i32 undef, <2 x float> %157, <2 x float> %158)
  %160 = load <4 x float>* %color
  %161 = insertelement <4 x float> undef, float %159, i32 0
  %162 = insertelement <4 x float> %161, float %159, i32 1
  %163 = insertelement <4 x float> %162, float %159, i32 2
  %164 = insertelement <4 x float> %163, float %159, i32 3
  %color42 = fadd <4 x float> %160, %164
  store <4 x float> %color42, <4 x float>* %color
  %165 = load <4 x float>* %color
  %166 = load <4 x float> addrspace(2)* @u, !uniform !10
  %167 = load float addrspace(2)* @blend, !uniform !12
  %168 = load float* %blendscale
  %169 = fmul float %167, %168
  %FragColor_shadow = call <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float> %165, <4 x float> %166, float %169)
  store <4 x float> %FragColor_shadow, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %170 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1025, i32 -1, <4 x float> %170), !output !8
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32, i32, i32, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32, i32, i32, <4 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32, i32, i32, <3 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32, i32, i32, <2 x i32>, i32, float, i32) nounwind readnone

declare <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float>) nounwind readnone

declare <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.v2i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) nounwind readnone

declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float>, <4 x float>, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!samplers = !{!0, !0, !0, !0, !0, !0, !1, !1, !1, !1, !2, !2, !2, !2, !3, !3, !4, !4, !5, !5, !4, !4, !5, !5, !1, !1, !1, !1, !1, !5}
!inputs = !{!6}
!outputs = !{!8}
!defaultUniforms = !{!10, !12}

!0 = metadata !{metadata !"texSampler1D", i32 0, i32 addrspace(1)* @"sampler1D texSampler1D", i32 0, i1 false, i1 false}
!1 = metadata !{metadata !"texSampler2D", i32 0, i32 addrspace(1)* @"sampler2D texSampler2D", i32 1, i1 false, i1 false}
!2 = metadata !{metadata !"texSampler3D", i32 0, i32 addrspace(1)* @"sampler3D texSampler3D", i32 2, i1 false, i1 false}
!3 = metadata !{metadata !"texSamplerCube", i32 0, i32 addrspace(1)* @"samplerCube texSamplerCube", i32 3, i1 false, i1 false}
!4 = metadata !{metadata !"shadowSampler1D", i32 0, i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", i32 0, i1 false, i1 true}
!5 = metadata !{metadata !"shadowSampler2D", i32 0, i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", i32 1, i1 false, i1 true}
!6 = metadata !{metadata !"coords2D", i32 7, <2 x float>* @coords2D_shadow_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1024}
!8 = metadata !{metadata !"gl_FragColor", i32 1, <4 x float>* @FragColor_shadow_typeProxy, metadata !9}
!9 = metadata !{i32 0, i32 0, i32 1025}
!10 = metadata !{metadata !"u", i32 12, <4 x float> addrspace(2)* @u, metadata !11}
!11 = metadata !{i32 0, i32 0, i32 0}
!12 = metadata !{metadata !"blend", i32 12, float addrspace(2)* @blend, metadata !11}


Bottom IR:
; ModuleID = 'Top'

@"sampler1D texSampler1D" = external addrspace(1) constant i32
@"sampler2D texSampler2D" = external addrspace(1) constant i32
@"sampler3D texSampler3D" = external addrspace(1) constant i32
@"samplerCube texSamplerCube" = external addrspace(1) constant i32
@"sampler1DShadow shadowSampler1D" = external addrspace(1) constant i32
@"sampler2DShadow shadowSampler2D" = external addrspace(1) constant i32
@u = external addrspace(2) constant <4 x float>
@blend = external addrspace(2) constant float

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @"sampler1D texSampler1D", align 4, !sampler !0
  %1 = load i32 addrspace(1)* @"sampler2D texSampler2D", align 4, !sampler !1
  %2 = load i32 addrspace(1)* @"sampler3D texSampler3D", align 4, !sampler !2
  %3 = load i32 addrspace(1)* @"samplerCube texSamplerCube", align 4, !sampler !3
  %4 = load i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", align 4, !sampler !4
  %5 = load i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", align 4, !sampler !5
  %coords2D__29 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !6
  %gradX30 = call <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float> %coords2D__29)
  %gradY32 = call <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float> %coords2D__29)
  %6 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.v2f32.v2f32.f32.f32(<3 x float> undef, i32 7, <2 x float> %coords2D__29, i32 0, <2 x float> %coords2D__29, i32 1, float 3.000000e+00, i32 0, float undef, i32 undef)
  %7 = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v3f32.i32.v2f32.v2f32(i32 2, i32 %5, i32 8, <3 x float> %6, float undef, float undef, i32 undef, <2 x float> %gradX30, <2 x float> %gradY32)
  %8 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %7, <4 x i32> zeroinitializer)
  %9 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32 1, i32 %0, i32 130, float 0x3FFC9FBE80000000, float 2.000000e+00, float undef)
  %10 = call <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32 1, i32 %0, i32 0, float 0x3FFC9FBE80000000)
  %11 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 1, i32 %0, i32 1, <2 x float> %coords2D__29)
  %color2 = fadd <4 x float> %9, %10
  %12 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 1, i32 %0, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>)
  %color3 = fadd <4 x float> %color2, %11
  %13 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 1, i32 %0, i32 131, <2 x float> %coords2D__29, float 2.000000e+00, float undef)
  %color4 = fadd <4 x float> %color3, %12
  %14 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %0, i32 131, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color6 = fadd <4 x float> %color4, %13
  %15 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %1, i32 0, <2 x float> %coords2D__29)
  %color7 = fadd <4 x float> %color6, %14
  %16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32 2, i32 %1, i32 130, <2 x float> %coords2D__29, float 2.000000e+00, float undef)
  %color9 = fadd <4 x float> %color7, %15
  %17 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 2, i32 %1, i32 1, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color11 = fadd <4 x float> %color9, %16
  %18 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %1, i32 131, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color12 = fadd <4 x float> %color11, %17
  %19 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 3, i32 %2, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color13 = fadd <4 x float> %color12, %18
  %20 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 3, i32 %2, i32 130, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color14 = fadd <4 x float> %color13, %19
  %21 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %2, i32 1, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>)
  %color15 = fadd <4 x float> %color14, %20
  %22 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 3, i32 %2, i32 131, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color16 = fadd <4 x float> %color15, %21
  %23 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32 4, i32 %3, i32 0, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>)
  %color17 = fadd <4 x float> %color16, %22
  %24 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 4, i32 %3, i32 130, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color18 = fadd <4 x float> %color17, %23
  %25 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %4, i32 8, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float undef, float undef)
  %color19 = fadd <4 x float> %color18, %24
  %26 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 1, i32 %4, i32 138, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color20 = fadd <4 x float> %color19, %25
  %27 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %5, i32 8, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float undef, float undef)
  %color21 = fadd <4 x float> %color20, %26
  %28 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %5, i32 138, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float 2.000000e+00, float undef)
  %color22 = fadd <4 x float> %color21, %27
  %29 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %4, i32 9, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float undef, float undef)
  %color23 = fadd <4 x float> %color22, %28
  %30 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 1, i32 %4, i32 139, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color24 = fadd <4 x float> %color23, %29
  %31 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %5, i32 9, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float undef, float undef)
  %color25 = fadd <4 x float> %color24, %30
  %32 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 2, i32 %5, i32 139, <4 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000, float 2.000000e+00>, float 2.000000e+00, float undef)
  %color26 = fadd <4 x float> %color25, %31
  %33 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32 2, i32 %1, i32 162, <2 x i32> <i32 0, i32 5>, i32 1, float undef, i32 undef)
  %color27 = fadd <4 x float> %color26, %32
  %34 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.v2f32.v2f32.f32.f32(<3 x float> undef, i32 7, <2 x float> %coords2D__29, i32 0, <2 x float> %coords2D__29, i32 1, float 2.000000e+00, i32 0, float undef, i32 undef)
  %35 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32 2, i32 %1, i32 0, <2 x float> %coords2D__29, float undef, float undef, i32 undef, <2 x float> %gradX30, <2 x float> %gradY32)
  %color28 = fadd <4 x float> %color27, %33
  %36 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v2f32.v2f32(i32 2, i32 %1, i32 1, <3 x float> %34, float undef, float undef, i32 undef, <2 x float> %gradX30, <2 x float> %gradY32)
  %color34 = fadd <4 x float> %color28, %35
  %37 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.v2i32.v2f32.v2f32(i32 2, i32 %1, i32 256, <2 x float> %coords2D__29, float undef, float undef, <2 x i32> <i32 3, i32 -7>, <2 x float> %gradX30, <2 x float> %gradY32)
  %color36 = fadd <4 x float> %color34, %36
  %38 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32 2, i32 %1, i32 257, <3 x float> <float 0x3FFC9FBE80000000, float 0x4005BE76C0000000, float 0x400B9FBE80000000>, float undef, float undef, <2 x i32> <i32 3, i32 -7>, <2 x float> %gradX30, <2 x float> %gradY32)
  %color38 = fadd <4 x float> %color36, %37
  %39 = load float addrspace(2)* @blend, align 4, !uniform !12
  %color39 = fadd <4 x float> %color38, %38
  %40 = fmul float %39, 0x3FFC9FBE80000000
  %41 = load <4 x float> addrspace(2)* @u, align 16, !uniform !10
  %color42 = fadd <4 x float> %8, %color39
  %FragColor_shadow = call <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float> %color42, <4 x float> %41, float %40)
  call void @llvm.gla.fWriteData.v4f32(i32 1025, i32 -1, <4 x float> %FragColor_shadow), !output !8
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <4 x float> @llvm.gla.fTextureSample.v4f32.f32(i32, i32, i32, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.f32(i32, i32, i32, float, float, float) nounwind readnone

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v2f32(i32, i32, i32, <2 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32, i32, i32, <4 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v3f32(i32, i32, i32, <3 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.i32.i32(i32, i32, i32, <2 x i32>, i32, float, i32) nounwind readnone

declare <2 x float> @llvm.gla.fDFdx.v2f32.v2f32(<2 x float>) nounwind readnone

declare <2 x float> @llvm.gla.fDFdy.v2f32.v2f32(<2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v2f32.v2i32.v2f32.v2f32(i32, i32, i32, <2 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) nounwind readnone

declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fMix.v4f32.v4f32.v4f32.f32(<4 x float>, <4 x float>, float) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.v2f32.v2f32.f32.f32(<3 x float>, i32, <2 x float>, i32, <2 x float>, i32, float, i32, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) nounwind readnone

!samplers = !{!0, !0, !0, !0, !0, !0, !1, !1, !1, !1, !2, !2, !2, !2, !3, !3, !4, !4, !5, !5, !4, !4, !5, !5, !1, !1, !1, !1, !1, !5}
!inputs = !{!6}
!outputs = !{!8}
!defaultUniforms = !{!10, !12}

!0 = metadata !{metadata !"texSampler1D", i32 0, i32 addrspace(1)* @"sampler1D texSampler1D", i32 0, i1 false, i1 false}
!1 = metadata !{metadata !"texSampler2D", i32 0, i32 addrspace(1)* @"sampler2D texSampler2D", i32 1, i1 false, i1 false}
!2 = metadata !{metadata !"texSampler3D", i32 0, i32 addrspace(1)* @"sampler3D texSampler3D", i32 2, i1 false, i1 false}
!3 = metadata !{metadata !"texSamplerCube", i32 0, i32 addrspace(1)* @"samplerCube texSamplerCube", i32 3, i1 false, i1 false}
!4 = metadata !{metadata !"shadowSampler1D", i32 0, i32 addrspace(1)* @"sampler1DShadow shadowSampler1D", i32 0, i1 false, i1 true}
!5 = metadata !{metadata !"shadowSampler2D", i32 0, i32 addrspace(1)* @"sampler2DShadow shadowSampler2D", i32 1, i1 false, i1 true}
!6 = metadata !{metadata !"coords2D", i32 7, <2 x float>* @coords2D_shadow_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1024}
!8 = metadata !{metadata !"gl_FragColor", i32 1, <4 x float>* @FragColor_shadow_typeProxy, metadata !9}
!9 = metadata !{i32 0, i32 0, i32 1025}
!10 = metadata !{metadata !"u", i32 12, <4 x float> addrspace(2)* @u, metadata !11}
!11 = metadata !{i32 0, i32 0, i32 0}
!12 = metadata !{metadata !"blend", i32 12, float addrspace(2)* @blend, metadata !11}
#### BEGIN COMPILER 0 INFO LOG ####
WARNING: 0:14: varying deprecated in version 130; may be removed in future release
WARNING: 0:15: varying deprecated in version 130; may be removed in future release
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform sampler2DShadow shadowSampler2D;
uniform vec4 u;
uniform float blend;
in vec2 coords2D;
const float const24f_3 = 3.0;
const float const28f_2 = 1.789;
const float const29f_2 = 2.0;
const vec4 const34 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 const45 = vec3(1.789, 2.718, 3.453);
const ivec2 const78 = ivec2(0, 5);
const int const79i_1 = 1;
const ivec2 const87 = ivec2(3, -7);

void main()
{
    vec2 gradX30 = dFdx(coords2D);
    vec2 gradY32 = dFdy(coords2D);
    vec3 temp23;
    temp23.xyz = vec3(coords2D.x, coords2D.y, const24f_3);
    float temp25 = textureGrad(shadowSampler2D, temp23, gradX30, gradY32);
    vec4 temp26 = vec4(temp25);
    vec4 temp27 = texture(texSampler1D, const28f_2, const29f_2);
    vec4 temp30 = texture(texSampler1D, const28f_2);
    vec4 temp31 = textureProj(texSampler1D, coords2D);
    vec4 color2 = temp27 + temp30;
    vec4 temp33 = textureProj(texSampler1D, const34);
    vec4 color3 = color2 + temp31;
    vec4 temp36 = textureProj(texSampler1D, coords2D, const29f_2);
    vec4 color4 = color3 + temp33;
    vec4 temp38 = textureProj(texSampler1D, const34, const29f_2);
    vec4 color6 = color4 + temp36;
    vec4 temp40 = texture(texSampler2D, coords2D);
    vec4 color7 = color6 + temp38;
    vec4 temp42 = texture(texSampler2D, coords2D, const29f_2);
    vec4 color9 = color7 + temp40;
    vec4 temp44 = textureProj(texSampler2D, const45);
    vec4 color11 = color9 + temp42;
    vec4 temp47 = textureProj(texSampler2D, const34, const29f_2);
    vec4 color12 = color11 + temp44;
    vec4 temp49 = texture(texSampler3D, const45);
    vec4 color13 = color12 + temp47;
    vec4 temp51 = texture(texSampler3D, const45, const29f_2);
    vec4 color14 = color13 + temp49;
    vec4 temp53 = textureProj(texSampler3D, const34);
    vec4 color15 = color14 + temp51;
    vec4 temp55 = textureProj(texSampler3D, const34, const29f_2);
    vec4 color16 = color15 + temp53;
    vec4 temp57 = texture(texSamplerCube, const45);
    vec4 color17 = color16 + temp55;
    vec4 temp59 = texture(texSamplerCube, const45, const29f_2);
    vec4 color18 = color17 + temp57;
    vec4 temp61 = shadow1D(shadowSampler1D, const45);
    vec4 color19 = color18 + temp59;
    vec4 temp63 = shadow1D(shadowSampler1D, const45, const29f_2);
    vec4 color20 = color19 + temp61;
    vec4 temp65 = shadow2D(shadowSampler2D, const45);
    vec4 color21 = color20 + temp63;
    vec4 temp67 = shadow2D(shadowSampler2D, const45, const29f_2);
    vec4 color22 = color21 + temp65;
    vec4 temp69 = shadow1DProj(shadowSampler1D, const34);
    vec4 color23 = color22 + temp67;
    vec4 temp71 = shadow1DProj(shadowSampler1D, const34, const29f_2);
    vec4 color24 = color23 + temp69;
    vec4 temp73 = shadow2DProj(shadowSampler2D, const34);
    vec4 color25 = color24 + temp71;
    vec4 temp75 = shadow2DProj(shadowSampler2D, const34, const29f_2);
    vec4 color26 = color25 + temp73;
    vec4 temp77 = texelFetch(texSampler2D, const78, const79i_1);
    vec4 color27 = color26 + temp75;
    vec3 temp81;
    temp81.xyz = vec3(coords2D.x, coords2D.y, const29f_2);
    vec4 temp82 = textureGrad(texSampler2D, coords2D, gradX30, gradY32);
    vec4 color28 = color27 + temp77;
    vec4 temp84 = textureProjGrad(texSampler2D, temp81, gradX30, gradY32);
    vec4 color34 = color28 + temp82;
    vec4 temp86 = textureGradOffset(texSampler2D, coords2D, gradX30, gradY32, const87);
    vec4 color36 = color34 + temp84;
    vec4 temp89 = textureProjGradOffset(texSampler2D, const45, gradX30, gradY32, const87);
    vec4 color38 = color36 + temp86;
    vec4 color39 = color38 + temp89;
    float temp92 = blend * const28f_2;
    vec4 color42 = temp26 + color39;
    vec4 FragColor_shadow = mix(color42, u, temp92);
    gl_FragColor = FragColor_shadow;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 130
uniform sampler2DShadow shadowSampler2D;
uniform sampler1D texSampler1D;
uniform sampler2D texSampler2D;
uniform sampler3D texSampler3D;
uniform samplerCube texSamplerCube;
uniform sampler1DShadow shadowSampler1D;
uniform float blend;
uniform vec4 u;
in vec2 coords2D;
const float const24f_3 = 3.0;
const float const28f_2 = 1.789;
const float const30f_2 = 2.0;
const vec4 const35 = vec4(1.789, 2.718, 3.453, 2.0);
const vec3 const46 = vec3(1.789, 2.718, 3.453);
const ivec2 const79 = ivec2(0, 5);
const int const80i_1 = 1;
const ivec2 const88 = ivec2(3, -7);

void main()
{
    vec2 gradX301 = dFdx(coords2D);
    vec2 gradY323 = dFdy(coords2D);
    vec3 temp23;
    temp23.xyz = vec3(coords2D.x, coords2D.y, const24f_3);
    float temp257 = textureGrad(shadowSampler2D, temp23, gradX301, gradY323);
    vec4 temp26 = vec4(temp257);
    vec4 temp3011 = texture(texSampler1D, const28f_2);
    vec4 temp2710 = texture(texSampler1D, const28f_2, const30f_2);
    vec4 color214 = temp3011 + temp2710;
    vec4 temp3113 = textureProj(texSampler1D, coords2D);
    vec4 color316 = color214 + temp3113;
    vec4 temp3315 = textureProj(texSampler1D, const35);
    vec4 color419 = color316 + temp3315;
    vec4 temp3618 = textureProj(texSampler1D, coords2D, const30f_2);
    vec4 color621 = color419 + temp3618;
    vec4 temp3820 = textureProj(texSampler1D, const35, const30f_2);
    vec4 color724 = color621 + temp3820;
    vec4 temp4023 = texture(texSampler2D, coords2D);
    vec4 color927 = color724 + temp4023;
    vec4 temp4226 = texture(texSampler2D, coords2D, const30f_2);
    vec4 color1129 = color927 + temp4226;
    vec4 temp4428 = textureProj(texSampler2D, const46);
    vec4 color1231 = color1129 + temp4428;
    vec4 temp4730 = textureProj(texSampler2D, const35, const30f_2);
    vec4 color1333 = color1231 + temp4730;
    vec4 temp4932 = texture(texSampler3D, const46);
    vec4 color1435 = color1333 + temp4932;
    vec4 temp5134 = texture(texSampler3D, const46, const30f_2);
    vec4 color1537 = color1435 + temp5134;
    vec4 temp5336 = textureProj(texSampler3D, const35);
    vec4 color1639 = color1537 + temp5336;
    vec4 temp5538 = textureProj(texSampler3D, const35, const30f_2);
    vec4 color1741 = color1639 + temp5538;
    vec4 temp5740 = texture(texSamplerCube, const46);
    vec4 color1843 = color1741 + temp5740;
    vec4 temp5942 = texture(texSamplerCube, const46, const30f_2);
    vec4 color1945 = color1843 + temp5942;
    vec4 temp6144 = shadow1D(shadowSampler1D, const46);
    vec4 color2047 = color1945 + temp6144;
    vec4 temp6346 = shadow1D(shadowSampler1D, const46, const30f_2);
    vec4 color2149 = color2047 + temp6346;
    vec4 temp6548 = shadow2D(shadowSampler2D, const46);
    vec4 color2251 = color2149 + temp6548;
    vec4 temp6750 = shadow2D(shadowSampler2D, const46, const30f_2);
    vec4 color2353 = color2251 + temp6750;
    vec4 temp6952 = shadow1DProj(shadowSampler1D, const35);
    vec4 color2455 = color2353 + temp6952;
    vec4 temp7154 = shadow1DProj(shadowSampler1D, const35, const30f_2);
    vec4 color2557 = color2455 + temp7154;
    vec4 temp7356 = shadow2DProj(shadowSampler2D, const35);
    vec4 color2659 = color2557 + temp7356;
    vec4 temp7558 = shadow2DProj(shadowSampler2D, const35, const30f_2);
    vec4 color2761 = color2659 + temp7558;
    vec4 temp7760 = texelFetch(texSampler2D, const79, const80i_1);
    vec4 color2868 = color2761 + temp7760;
    vec4 temp8267 = textureGrad(texSampler2D, coords2D, gradX301, gradY323);
    vec3 temp83;
    temp83.xyz = vec3(coords2D.x, coords2D.y, const30f_2);
    vec4 color3470 = color2868 + temp8267;
    vec4 temp8469 = textureProjGrad(texSampler2D, temp83, gradX301, gradY323);
    vec4 color3673 = color3470 + temp8469;
    vec4 temp8672 = textureGradOffset(texSampler2D, coords2D, gradX301, gradY323, const88);
    vec4 color3875 = color3673 + temp8672;
    vec4 temp8974 = textureProjGradOffset(texSampler2D, const46, gradX301, gradY323, const88);
    vec4 color3976 = color3875 + temp8974;
    vec4 color4278 = temp26 + color3976;
    float temp9277 = blend * const28f_2;
    vec4 FragColor_shadow79 = mix(color4278, u, temp9277);
    gl_FragColor = FragColor_shadow79;
    
}
