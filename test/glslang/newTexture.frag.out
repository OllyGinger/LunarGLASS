
Top IR:
; ModuleID = 'Top'

@s2D = external addrspace(1) constant i32
@c2D_shadow = internal global <2 x float> zeroinitializer
@s3D = external addrspace(1) constant i32
@c4D_shadow = internal global <4 x float> zeroinitializer
@s2DArray = external addrspace(1) constant i32
@c3D_shadow = internal global <3 x float> zeroinitializer
@s2DShadow = external addrspace(1) constant i32
@ic2D_shadow = internal global <2 x i32> zeroinitializer
@c1D_shadow = internal global float 0.000000e+00
@ic3D_shadow = internal global <3 x i32> zeroinitializer
@ic1D_shadow = internal global i32 0
@sCube = external addrspace(1) constant i32
@s2DArrayShadow = external addrspace(1) constant i32
@is2D = external addrspace(1) constant i32
@is3D = external addrspace(1) constant i32
@isCube = external addrspace(1) constant i32
@is2DArray = external addrspace(1) constant i32
@sCubeShadow = external addrspace(1) constant i32
@FragData_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %constructed = alloca <4 x float>
  %iv2 = alloca <2 x i32>
  %iv = alloca <4 x i32>
  %v = alloca <4 x float>
  %0 = load i32 addrspace(1)* @s2D, !gla.uniform !0
  %c2D = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  store <2 x float> %c2D, <2 x float>* @c2D_shadow
  %1 = load <2 x float>* @c2D_shadow
  %v1 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %1)
  store <4 x float> %v1, <4 x float>* %v
  %2 = load i32 addrspace(1)* @s3D, !gla.uniform !3
  %c4D = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !35
  store <4 x float> %c4D, <4 x float>* @c4D_shadow
  %3 = load <4 x float>* @c4D_shadow
  %4 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %2, i32 1, <4 x float> %3)
  %5 = load <4 x float>* %v
  %v2 = fadd <4 x float> %5, %4
  store <4 x float> %v2, <4 x float>* %v
  %6 = load i32 addrspace(1)* @s2DArray, !gla.uniform !6
  %c3D = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D, <3 x float>* @c3D_shadow
  %7 = load <3 x float>* @c3D_shadow
  %8 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %6, i32 148, <3 x float> %7, float 0x3FF3333340000000, float undef)
  %9 = load <4 x float>* %v
  %v3 = fadd <4 x float> %9, %8
  store <4 x float> %v3, <4 x float>* %v
  %10 = load i32 addrspace(1)* @s2DShadow, !gla.uniform !9
  %c3D4 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D4, <3 x float>* @c3D_shadow
  %11 = load <3 x float>* @c3D_shadow
  %ic2D = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  store <2 x i32> %ic2D, <2 x i32>* @ic2D_shadow
  %12 = load <2 x i32>* @ic2D_shadow
  %c1D = call float @llvm.gla.fReadInterpolant.f32(i32 1028, i32 -1, i32 1), !gla.input !41
  store float %c1D, float* @c1D_shadow
  %13 = load float* @c1D_shadow
  %14 = call float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32 2, i32 %10, i32 394, <3 x float> %11, float %13, float undef, <2 x i32> %12)
  %15 = load <4 x float>* %v
  %16 = extractelement <4 x float> %15, i32 1
  %17 = fadd float %16, %14
  %18 = load <4 x float>* %v
  %v5 = insertelement <4 x float> %18, float %17, i32 1
  store <4 x float> %v5, <4 x float>* %v
  %19 = load i32 addrspace(1)* @s3D, !gla.uniform !3
  %ic3D = call <3 x i32> @llvm.gla.readData.v3i32(i32 1029, i32 -1), !gla.input !43
  store <3 x i32> %ic3D, <3 x i32>* @ic3D_shadow
  %20 = load <3 x i32>* @ic3D_shadow
  %ic1D = call i32 @llvm.gla.readData.i32(i32 1030, i32 -1), !gla.input !45
  store i32 %ic1D, i32* @ic1D_shadow
  %21 = load i32* @ic1D_shadow
  %22 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32 3, i32 %19, i32 162, <3 x i32> %20, i32 %21, float undef, i32 undef)
  %23 = load <4 x float>* %v
  %v6 = fadd <4 x float> %23, %22
  store <4 x float> %v6, <4 x float>* %v
  %24 = load i32 addrspace(1)* @s2D, !gla.uniform !0
  %ic2D7 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  store <2 x i32> %ic2D7, <2 x i32>* @ic2D_shadow
  %25 = load <2 x i32>* @ic2D_shadow
  %ic2D8 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  store <2 x i32> %ic2D8, <2 x i32>* @ic2D_shadow
  %26 = load <2 x i32>* @ic2D_shadow
  %27 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.v2i32.i32(i32 2, i32 %24, i32 418, <2 x i32> %25, <2 x i32> %26, float undef, i32 4)
  %28 = load <4 x float>* %v
  %v9 = fadd <4 x float> %28, %27
  store <4 x float> %v9, <4 x float>* %v
  %29 = load i32 addrspace(1)* @s2DShadow, !gla.uniform !9
  %c3D10 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D10, <3 x float>* @c3D_shadow
  %30 = load <3 x float>* @c3D_shadow
  %c1D11 = call float @llvm.gla.fReadInterpolant.f32(i32 1028, i32 -1, i32 1), !gla.input !41
  store float %c1D11, float* @c1D_shadow
  %31 = load float* @c1D_shadow
  %ic2D12 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  store <2 x i32> %ic2D12, <2 x i32>* @ic2D_shadow
  %32 = load <2 x i32>* @ic2D_shadow
  %33 = call float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32 2, i32 %29, i32 396, <3 x float> %30, float %31, float undef, <2 x i32> %32)
  %34 = load <4 x float>* %v
  %35 = extractelement <4 x float> %34, i32 1
  %36 = fadd float %35, %33
  %37 = load <4 x float>* %v
  %v13 = insertelement <4 x float> %37, float %36, i32 1
  store <4 x float> %v13, <4 x float>* %v
  %38 = load i32 addrspace(1)* @s2D, !gla.uniform !0
  %c3D14 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D14, <3 x float>* @c3D_shadow
  %39 = load <3 x float>* @c3D_shadow
  %c1D15 = call float @llvm.gla.fReadInterpolant.f32(i32 1028, i32 -1, i32 1), !gla.input !41
  store float %c1D15, float* @c1D_shadow
  %40 = load float* @c1D_shadow
  %ic2D16 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  store <2 x i32> %ic2D16, <2 x i32>* @ic2D_shadow
  %41 = load <2 x i32>* @ic2D_shadow
  %42 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffset.v4f32.v3f32.v2i32(i32 2, i32 %38, i32 389, <3 x float> %39, float %40, float undef, <2 x i32> %41)
  %43 = load <4 x float>* %v
  %v17 = fadd <4 x float> %43, %42
  store <4 x float> %v17, <4 x float>* %v
  %44 = load i32 addrspace(1)* @sCube, !gla.uniform !12
  %c3D18 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D18, <3 x float>* @c3D_shadow
  %45 = load <3 x float>* @c3D_shadow
  %c3D19 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D19, <3 x float>* @c3D_shadow
  %46 = load <3 x float>* @c3D_shadow
  %c3D20 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D20, <3 x float>* @c3D_shadow
  %47 = load <3 x float>* @c3D_shadow
  %48 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v3f32.v3f32(i32 4, i32 %44, i32 0, <3 x float> %45, float undef, float undef, i32 undef, <3 x float> %46, <3 x float> %47)
  %49 = load <4 x float>* %v
  %v21 = fadd <4 x float> %49, %48
  store <4 x float> %v21, <4 x float>* %v
  %50 = load i32 addrspace(1)* @s2DArrayShadow, !gla.uniform !15
  %c4D22 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !35
  store <4 x float> %c4D22, <4 x float>* @c4D_shadow
  %51 = load <4 x float>* @c4D_shadow
  %c2D23 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  store <2 x float> %c2D23, <2 x float>* @c2D_shadow
  %52 = load <2 x float>* @c2D_shadow
  %c2D24 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  store <2 x float> %c2D24, <2 x float>* @c2D_shadow
  %53 = load <2 x float>* @c2D_shadow
  %ic2D25 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  store <2 x i32> %ic2D25, <2 x i32>* @ic2D_shadow
  %54 = load <2 x i32>* @ic2D_shadow
  %55 = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32 2, i32 %50, i32 280, <4 x float> %51, float undef, float undef, <2 x i32> %54, <2 x float> %52, <2 x float> %53)
  %56 = load <4 x float>* %v
  %57 = extractelement <4 x float> %56, i32 0
  %58 = fadd float %57, %55
  %59 = load <4 x float>* %v
  %v26 = insertelement <4 x float> %59, float %58, i32 0
  store <4 x float> %v26, <4 x float>* %v
  %60 = load i32 addrspace(1)* @s3D, !gla.uniform !3
  %c4D27 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !35
  store <4 x float> %c4D27, <4 x float>* @c4D_shadow
  %61 = load <4 x float>* @c4D_shadow
  %c3D28 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D28, <3 x float>* @c3D_shadow
  %62 = load <3 x float>* @c3D_shadow
  %c3D29 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D29, <3 x float>* @c3D_shadow
  %63 = load <3 x float>* @c3D_shadow
  %64 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32 3, i32 %60, i32 1, <4 x float> %61, float undef, float undef, i32 undef, <3 x float> %62, <3 x float> %63)
  %65 = load <4 x float>* %v
  %v30 = fadd <4 x float> %65, %64
  store <4 x float> %v30, <4 x float>* %v
  %66 = load i32 addrspace(1)* @s2D, !gla.uniform !0
  %c3D31 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D31, <3 x float>* @c3D_shadow
  %67 = load <3 x float>* @c3D_shadow
  %c2D32 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  store <2 x float> %c2D32, <2 x float>* @c2D_shadow
  %68 = load <2 x float>* @c2D_shadow
  %c2D33 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  store <2 x float> %c2D33, <2 x float>* @c2D_shadow
  %69 = load <2 x float>* @c2D_shadow
  %ic2D34 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  store <2 x i32> %ic2D34, <2 x i32>* @ic2D_shadow
  %70 = load <2 x i32>* @ic2D_shadow
  %71 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32 2, i32 %66, i32 257, <3 x float> %67, float undef, float undef, <2 x i32> %70, <2 x float> %68, <2 x float> %69)
  %72 = load <4 x float>* %v
  %v35 = fadd <4 x float> %72, %71
  store <4 x float> %v35, <4 x float>* %v
  %73 = load i32 addrspace(1)* @is2D, !gla.uniform !18
  %c2D36 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  store <2 x float> %c2D36, <2 x float>* @c2D_shadow
  %74 = load <2 x float>* @c2D_shadow
  %iv37 = call <4 x i32> @llvm.gla.textureSample.v4i32.v2f32(i32 2, i32 %73, i32 0, <2 x float> %74)
  store <4 x i32> %iv37, <4 x i32>* %iv
  %75 = load <4 x i32>* %iv
  %76 = sitofp <4 x i32> %75 to <4 x float>
  %77 = load <4 x float>* %v
  %v38 = fadd <4 x float> %77, %76
  store <4 x float> %v38, <4 x float>* %v
  %78 = load i32 addrspace(1)* @is2D, !gla.uniform !18
  %c4D39 = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !35
  store <4 x float> %c4D39, <4 x float>* @c4D_shadow
  %79 = load <4 x float>* @c4D_shadow
  %ic2D40 = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  store <2 x i32> %ic2D40, <2 x i32>* @ic2D_shadow
  %80 = load <2 x i32>* @ic2D_shadow
  %iv41 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffset.v4i32.v4f32.v2i32(i32 2, i32 %78, i32 257, <4 x float> %79, float undef, float undef, <2 x i32> %80)
  store <4 x i32> %iv41, <4 x i32>* %iv
  %81 = load <4 x i32>* %iv
  %82 = sitofp <4 x i32> %81 to <4 x float>
  %83 = load <4 x float>* %v
  %v42 = fadd <4 x float> %83, %82
  store <4 x float> %v42, <4 x float>* %v
  %84 = load i32 addrspace(1)* @is2D, !gla.uniform !18
  %c3D43 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D43, <3 x float>* @c3D_shadow
  %85 = load <3 x float>* @c3D_shadow
  %c1D44 = call float @llvm.gla.fReadInterpolant.f32(i32 1028, i32 -1, i32 1), !gla.input !41
  store float %c1D44, float* @c1D_shadow
  %86 = load float* @c1D_shadow
  %iv45 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 2, i32 %84, i32 133, <3 x float> %85, float %86, float undef)
  store <4 x i32> %iv45, <4 x i32>* %iv
  %87 = load <4 x i32>* %iv
  %88 = sitofp <4 x i32> %87 to <4 x float>
  %89 = load <4 x float>* %v
  %v46 = fadd <4 x float> %89, %88
  store <4 x float> %v46, <4 x float>* %v
  %90 = load i32 addrspace(1)* @is2D, !gla.uniform !18
  %c3D47 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D47, <3 x float>* @c3D_shadow
  %91 = load <3 x float>* @c3D_shadow
  %c2D48 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  store <2 x float> %c2D48, <2 x float>* @c2D_shadow
  %92 = load <2 x float>* @c2D_shadow
  %c2D49 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  store <2 x float> %c2D49, <2 x float>* @c2D_shadow
  %93 = load <2 x float>* @c2D_shadow
  %iv50 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v3f32.i32.v2f32.v2f32(i32 2, i32 %90, i32 1, <3 x float> %91, float undef, float undef, i32 undef, <2 x float> %92, <2 x float> %93)
  store <4 x i32> %iv50, <4 x i32>* %iv
  %94 = load <4 x i32>* %iv
  %95 = sitofp <4 x i32> %94 to <4 x float>
  %96 = load <4 x float>* %v
  %v51 = fadd <4 x float> %96, %95
  store <4 x float> %v51, <4 x float>* %v
  %97 = load i32 addrspace(1)* @is3D, !gla.uniform !21
  %c3D52 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D52, <3 x float>* @c3D_shadow
  %98 = load <3 x float>* @c3D_shadow
  %iv53 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 3, i32 %97, i32 130, <3 x float> %98, float 0x4010CCCCC0000000, float undef)
  store <4 x i32> %iv53, <4 x i32>* %iv
  %99 = load <4 x i32>* %iv
  %100 = sitofp <4 x i32> %99 to <4 x float>
  %101 = load <4 x float>* %v
  %v54 = fadd <4 x float> %101, %100
  store <4 x float> %v54, <4 x float>* %v
  %102 = load i32 addrspace(1)* @isCube, !gla.uniform !24
  %c3D55 = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  store <3 x float> %c3D55, <3 x float>* @c3D_shadow
  %103 = load <3 x float>* @c3D_shadow
  %c1D56 = call float @llvm.gla.fReadInterpolant.f32(i32 1028, i32 -1, i32 1), !gla.input !41
  store float %c1D56, float* @c1D_shadow
  %104 = load float* @c1D_shadow
  %iv57 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 4, i32 %102, i32 132, <3 x float> %103, float %104, float undef)
  store <4 x i32> %iv57, <4 x i32>* %iv
  %105 = load <4 x i32>* %iv
  %106 = sitofp <4 x i32> %105 to <4 x float>
  %107 = load <4 x float>* %v
  %v58 = fadd <4 x float> %107, %106
  store <4 x float> %v58, <4 x float>* %v
  %108 = load i32 addrspace(1)* @is2DArray, !gla.uniform !27
  %ic3D59 = call <3 x i32> @llvm.gla.readData.v3i32(i32 1029, i32 -1), !gla.input !43
  store <3 x i32> %ic3D59, <3 x i32>* @ic3D_shadow
  %109 = load <3 x i32>* @ic3D_shadow
  %ic1D60 = call i32 @llvm.gla.readData.i32(i32 1030, i32 -1), !gla.input !45
  store i32 %ic1D60, i32* @ic1D_shadow
  %110 = load i32* @ic1D_shadow
  %iv61 = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32 2, i32 %108, i32 178, <3 x i32> %109, i32 %110, float undef, i32 undef)
  store <4 x i32> %iv61, <4 x i32>* %iv
  %111 = load <4 x i32>* %iv
  %112 = sitofp <4 x i32> %111 to <4 x float>
  %113 = load <4 x float>* %v
  %v62 = fadd <4 x float> %113, %112
  store <4 x float> %v62, <4 x float>* %v
  %114 = load i32 addrspace(1)* @sCubeShadow, !gla.uniform !30
  %iv263 = call <2 x i32> @llvm.gla.queryTextureSize.v2i32(i32 4, i32 %114, i32 2)
  store <2 x i32> %iv263, <2 x i32>* %iv2
  %115 = load <4 x float>* %v
  %116 = load <2 x i32>* %iv2
  %117 = sitofp <2 x i32> %116 to <2 x float>
  %118 = load <4 x float>* %constructed
  %119 = extractelement <2 x float> %117, i32 0
  %120 = insertelement <4 x float> %118, float %119, i32 0
  %121 = extractelement <2 x float> %117, i32 1
  %122 = insertelement <4 x float> %120, float %121, i32 1
  %123 = insertelement <4 x float> %122, float 0.000000e+00, i32 2
  %124 = insertelement <4 x float> %123, float 0.000000e+00, i32 3
  %FragData_shadow = fadd <4 x float> %115, %124
  store <4 x float> %FragData_shadow, <4 x float>* @FragData_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %125 = load <4 x float>* @FragData_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1031, i32 -1, <4 x float> %125), !gla.output !47
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) nounwind readnone

declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare <2 x i32> @llvm.gla.readData.v2i32(i32, i32) nounwind readonly

declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) nounwind readnone

declare float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32, i32, i32, <3 x float>, float, float, <2 x i32>) nounwind readnone

declare <3 x i32> @llvm.gla.readData.v3i32(i32, i32) nounwind readonly

declare i32 @llvm.gla.readData.i32(i32, i32) nounwind readonly

declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.v2i32.i32(i32, i32, i32, <2 x i32>, <2 x i32>, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffset.v4f32.v3f32.v2i32(i32, i32, i32, <3 x float>, float, float, <2 x i32>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v3f32.v3f32(i32, i32, i32, <3 x float>, float, float, i32, <3 x float>, <3 x float>) nounwind readnone

declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32, i32, i32, <4 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32, i32, i32, <4 x float>, float, float, i32, <3 x float>, <3 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) nounwind readnone

declare <4 x i32> @llvm.gla.textureSample.v4i32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x i32> @llvm.gla.textureSampleLodRefZOffset.v4i32.v4f32.v2i32(i32, i32, i32, <4 x float>, float, float, <2 x i32>) nounwind readnone

declare <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) nounwind readnone

declare <2 x i32> @llvm.gla.queryTextureSize.v2i32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!gla.uniforms = !{!0, !3, !6, !9, !12, !15, !18, !21, !24, !27, !30}
!gla.inputs = !{!33, !35, !37, !39, !41, !43, !45}
!gla.outputs = !{!47}

!0 = metadata !{metadata !"s2D", i32 12, i32 addrspace(1)* @s2D, metadata !1}
!1 = metadata !{i32 5, i32 0, i32 0, metadata !2}
!2 = metadata !{i32 0, i32 addrspace(1)* @s2D, i32 1, i1 false, i1 false, i32 0}
!3 = metadata !{metadata !"s3D", i32 12, i32 addrspace(1)* @s3D, metadata !4}
!4 = metadata !{i32 5, i32 0, i32 0, metadata !5}
!5 = metadata !{i32 0, i32 addrspace(1)* @s3D, i32 2, i1 false, i1 false, i32 0}
!6 = metadata !{metadata !"s2DArray", i32 12, i32 addrspace(1)* @s2DArray, metadata !7}
!7 = metadata !{i32 5, i32 0, i32 0, metadata !8}
!8 = metadata !{i32 0, i32 addrspace(1)* @s2DArray, i32 1, i1 true, i1 false, i32 0}
!9 = metadata !{metadata !"s2DShadow", i32 12, i32 addrspace(1)* @s2DShadow, metadata !10}
!10 = metadata !{i32 5, i32 0, i32 0, metadata !11}
!11 = metadata !{i32 0, i32 addrspace(1)* @s2DShadow, i32 1, i1 false, i1 true, i32 0}
!12 = metadata !{metadata !"sCube", i32 12, i32 addrspace(1)* @sCube, metadata !13}
!13 = metadata !{i32 5, i32 0, i32 0, metadata !14}
!14 = metadata !{i32 0, i32 addrspace(1)* @sCube, i32 3, i1 false, i1 false, i32 0}
!15 = metadata !{metadata !"s2DArrayShadow", i32 12, i32 addrspace(1)* @s2DArrayShadow, metadata !16}
!16 = metadata !{i32 5, i32 0, i32 0, metadata !17}
!17 = metadata !{i32 0, i32 addrspace(1)* @s2DArrayShadow, i32 1, i1 true, i1 true, i32 0}
!18 = metadata !{metadata !"is2D", i32 12, i32 addrspace(1)* @is2D, metadata !19}
!19 = metadata !{i32 5, i32 0, i32 0, metadata !20}
!20 = metadata !{i32 0, i32 addrspace(1)* @is2D, i32 1, i1 false, i1 false, i32 1}
!21 = metadata !{metadata !"is3D", i32 12, i32 addrspace(1)* @is3D, metadata !22}
!22 = metadata !{i32 5, i32 0, i32 0, metadata !23}
!23 = metadata !{i32 0, i32 addrspace(1)* @is3D, i32 2, i1 false, i1 false, i32 1}
!24 = metadata !{metadata !"isCube", i32 12, i32 addrspace(1)* @isCube, metadata !25}
!25 = metadata !{i32 5, i32 0, i32 0, metadata !26}
!26 = metadata !{i32 0, i32 addrspace(1)* @isCube, i32 3, i1 false, i1 false, i32 1}
!27 = metadata !{metadata !"is2DArray", i32 12, i32 addrspace(1)* @is2DArray, metadata !28}
!28 = metadata !{i32 5, i32 0, i32 0, metadata !29}
!29 = metadata !{i32 0, i32 addrspace(1)* @is2DArray, i32 1, i1 true, i1 false, i32 1}
!30 = metadata !{metadata !"sCubeShadow", i32 12, i32 addrspace(1)* @sCubeShadow, metadata !31}
!31 = metadata !{i32 5, i32 0, i32 0, metadata !32}
!32 = metadata !{i32 0, i32 addrspace(1)* @sCubeShadow, i32 3, i1 false, i1 true, i32 0}
!33 = metadata !{metadata !"c2D", i32 1, <2 x float>* @c2D_shadow_typeProxy, metadata !34}
!34 = metadata !{i32 0, i32 0, i32 1024, null}
!35 = metadata !{metadata !"c4D", i32 1, <4 x float>* @c4D_shadow_typeProxy, metadata !36}
!36 = metadata !{i32 0, i32 0, i32 1025, null}
!37 = metadata !{metadata !"c3D", i32 1, <3 x float>* @c3D_shadow_typeProxy, metadata !38}
!38 = metadata !{i32 0, i32 0, i32 1026, null}
!39 = metadata !{metadata !"ic2D", i32 1, <2 x i32>* @ic2D_shadow_typeProxy, metadata !40}
!40 = metadata !{i32 0, i32 0, i32 1027, null}
!41 = metadata !{metadata !"c1D", i32 1, float* @c1D_shadow_typeProxy, metadata !42}
!42 = metadata !{i32 0, i32 0, i32 1028, null}
!43 = metadata !{metadata !"ic3D", i32 1, <3 x i32>* @ic3D_shadow_typeProxy, metadata !44}
!44 = metadata !{i32 0, i32 0, i32 1029, null}
!45 = metadata !{metadata !"ic1D", i32 1, i32* @ic1D_shadow_typeProxy, metadata !46}
!46 = metadata !{i32 0, i32 0, i32 1030, null}
!47 = metadata !{metadata !"FragData", i32 7, <4 x float>* @FragData_shadow_typeProxy, metadata !48}
!48 = metadata !{i32 0, i32 0, i32 1031, null}


Bottom IR:
; ModuleID = 'Top'

@s2D = external addrspace(1) constant i32
@s3D = external addrspace(1) constant i32
@s2DArray = external addrspace(1) constant i32
@s2DShadow = external addrspace(1) constant i32
@sCube = external addrspace(1) constant i32
@s2DArrayShadow = external addrspace(1) constant i32
@is2D = external addrspace(1) constant i32
@is3D = external addrspace(1) constant i32
@isCube = external addrspace(1) constant i32
@is2DArray = external addrspace(1) constant i32
@sCubeShadow = external addrspace(1) constant i32

define fastcc void @main() {
entry:
  %0 = load i32 addrspace(1)* @s2D, align 4, !gla.uniform !0
  %c2D = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !33
  %v1 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %0, i32 0, <2 x float> %c2D)
  %1 = load i32 addrspace(1)* @s3D, align 4, !gla.uniform !3
  %c4D = call <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32 1025, i32 -1, i32 1), !gla.input !35
  %2 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 3, i32 %1, i32 1, <4 x float> %c4D)
  %v2 = fadd <4 x float> %v1, %2
  %3 = load i32 addrspace(1)* @s2DArray, align 4, !gla.uniform !6
  %c3D = call <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32 1026, i32 -1, i32 1), !gla.input !37
  %4 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32 2, i32 %3, i32 148, <3 x float> %c3D, float 0x3FF3333340000000, float undef)
  %v3 = fadd <4 x float> %v2, %4
  %5 = load i32 addrspace(1)* @s2DShadow, align 4, !gla.uniform !9
  %ic2D = call <2 x i32> @llvm.gla.readData.v2i32(i32 1027, i32 -1), !gla.input !39
  %c1D = call float @llvm.gla.fReadInterpolant.f32(i32 1028, i32 -1, i32 1), !gla.input !41
  %6 = call float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32 2, i32 %5, i32 394, <3 x float> %c3D, float %c1D, float undef, <2 x i32> %ic2D)
  %7 = extractelement <4 x float> %v3, i32 1
  %8 = fadd float %7, %6
  %9 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %v3, i32 2, float undef, i32 undef, float %8, i32 0, float undef, i32 undef, float undef, i32 undef)
  %ic3D = call <3 x i32> @llvm.gla.readData.v3i32(i32 1029, i32 -1), !gla.input !43
  %ic1D = call i32 @llvm.gla.readData.i32(i32 1030, i32 -1), !gla.input !45
  %10 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32 3, i32 %1, i32 162, <3 x i32> %ic3D, i32 %ic1D, float undef, i32 undef)
  %v6 = fadd <4 x float> %9, %10
  %11 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.v2i32.i32(i32 2, i32 %0, i32 418, <2 x i32> %ic2D, <2 x i32> %ic2D, float undef, i32 4)
  %v9 = fadd <4 x float> %v6, %11
  %12 = call float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32 2, i32 %5, i32 396, <3 x float> %c3D, float %c1D, float undef, <2 x i32> %ic2D)
  %13 = extractelement <4 x float> %v9, i32 1
  %14 = fadd float %12, %13
  %15 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %v9, i32 2, float undef, i32 undef, float %14, i32 0, float undef, i32 undef, float undef, i32 undef)
  %16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffset.v4f32.v3f32.v2i32(i32 2, i32 %0, i32 389, <3 x float> %c3D, float %c1D, float undef, <2 x i32> %ic2D)
  %v17 = fadd <4 x float> %16, %15
  %17 = load i32 addrspace(1)* @sCube, align 4, !gla.uniform !12
  %18 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v3f32.v3f32(i32 4, i32 %17, i32 0, <3 x float> %c3D, float undef, float undef, i32 undef, <3 x float> %c3D, <3 x float> %c3D)
  %v21 = fadd <4 x float> %18, %v17
  %19 = load i32 addrspace(1)* @is2D, align 4, !gla.uniform !18
  %20 = load i32 addrspace(1)* @sCubeShadow, align 4, !gla.uniform !30
  %iv263 = call <2 x i32> @llvm.gla.queryTextureSize.v2i32(i32 4, i32 %20, i32 2)
  %21 = sitofp <2 x i32> %iv263 to <2 x float>
  %22 = load i32 addrspace(1)* @s2DArrayShadow, align 4, !gla.uniform !15
  %23 = extractelement <4 x float> %v21, i32 0
  %24 = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32 2, i32 %22, i32 280, <4 x float> %c4D, float undef, float undef, <2 x i32> %ic2D, <2 x float> %c2D, <2 x float> %c2D)
  %25 = fadd float %23, %24
  %26 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32 3, i32 %1, i32 1, <4 x float> %c4D, float undef, float undef, i32 undef, <3 x float> %c3D, <3 x float> %c3D)
  %27 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float> %v21, i32 1, float %25, i32 0, float undef, i32 undef, float undef, i32 undef, float undef, i32 undef)
  %iv37 = call <4 x i32> @llvm.gla.textureSample.v4i32.v2f32(i32 2, i32 %19, i32 0, <2 x float> %c2D)
  %28 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32 2, i32 %0, i32 257, <3 x float> %c3D, float undef, float undef, <2 x i32> %ic2D, <2 x float> %c2D, <2 x float> %c2D)
  %v30 = fadd <4 x float> %26, %27
  %iv41 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffset.v4i32.v4f32.v2i32(i32 2, i32 %19, i32 257, <4 x float> %c4D, float undef, float undef, <2 x i32> %ic2D)
  %29 = sitofp <4 x i32> %iv37 to <4 x float>
  %v35 = fadd <4 x float> %v30, %28
  %iv45 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 2, i32 %19, i32 133, <3 x float> %c3D, float %c1D, float undef)
  %30 = sitofp <4 x i32> %iv41 to <4 x float>
  %v38 = fadd <4 x float> %29, %v35
  %31 = load i32 addrspace(1)* @is3D, align 4, !gla.uniform !21
  %iv50 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v3f32.i32.v2f32.v2f32(i32 2, i32 %19, i32 1, <3 x float> %c3D, float undef, float undef, i32 undef, <2 x float> %c2D, <2 x float> %c2D)
  %32 = sitofp <4 x i32> %iv45 to <4 x float>
  %v42 = fadd <4 x float> %v38, %30
  %33 = load i32 addrspace(1)* @isCube, align 4, !gla.uniform !24
  %iv53 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 3, i32 %31, i32 130, <3 x float> %c3D, float 0x4010CCCCC0000000, float undef)
  %34 = sitofp <4 x i32> %iv50 to <4 x float>
  %v46 = fadd <4 x float> %v42, %32
  %35 = load i32 addrspace(1)* @is2DArray, align 4, !gla.uniform !27
  %iv57 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32 4, i32 %33, i32 132, <3 x float> %c3D, float %c1D, float undef)
  %36 = sitofp <4 x i32> %iv53 to <4 x float>
  %v51 = fadd <4 x float> %v46, %34
  %iv61 = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32 2, i32 %35, i32 178, <3 x i32> %ic3D, i32 %ic1D, float undef, i32 undef)
  %37 = sitofp <4 x i32> %iv57 to <4 x float>
  %v54 = fadd <4 x float> %v51, %36
  %38 = sitofp <4 x i32> %iv61 to <4 x float>
  %v58 = fadd <4 x float> %v54, %37
  %39 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.f32.f32(<4 x float> undef, i32 15, <2 x float> %21, i32 0, <2 x float> %21, i32 1, float 0.000000e+00, i32 0, float 0.000000e+00, i32 0)
  %v62 = fadd <4 x float> %v58, %38
  %FragData_shadow = fadd <4 x float> %39, %v62
  call void @llvm.gla.fWriteData.v4f32(i32 1031, i32 -1, <4 x float> %FragData_shadow), !gla.output !47
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fReadInterpolant.v4f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) nounwind readnone

declare <3 x float> @llvm.gla.fReadInterpolant.v3f32(i32, i32, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare <2 x i32> @llvm.gla.readData.v2i32(i32, i32) nounwind readonly

declare float @llvm.gla.fReadInterpolant.f32(i32, i32, i32) nounwind readnone

declare float @llvm.gla.fTextureSampleLodRefZOffset.f32.v3f32.v2i32(i32, i32, i32, <3 x float>, float, float, <2 x i32>) nounwind readnone

declare <3 x i32> @llvm.gla.readData.v3i32(i32, i32) nounwind readonly

declare i32 @llvm.gla.readData.i32(i32, i32) nounwind readonly

declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v2i32.v2i32.i32(i32, i32, i32, <2 x i32>, <2 x i32>, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffset.v4f32.v3f32.v2i32(i32, i32, i32, <3 x float>, float, float, <2 x i32>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.i32.v3f32.v3f32(i32, i32, i32, <3 x float>, float, float, i32, <3 x float>, <3 x float>) nounwind readnone

declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32, i32, i32, <4 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32, i32, i32, <4 x float>, float, float, i32, <3 x float>, <3 x float>) nounwind readnone

declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v3f32.v2i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) nounwind readnone

declare <4 x i32> @llvm.gla.textureSample.v4i32.v2f32(i32, i32, i32, <2 x float>) nounwind readnone

declare <4 x i32> @llvm.gla.textureSampleLodRefZOffset.v4i32.v4f32.v2i32(i32, i32, i32, <4 x float>, float, float, <2 x i32>) nounwind readnone

declare <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v3f32(i32, i32, i32, <3 x float>, float, float) nounwind readnone

declare <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v3f32.i32.v2f32.v2f32(i32, i32, i32, <3 x float>, float, float, i32, <2 x float>, <2 x float>) nounwind readnone

declare <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) nounwind readnone

declare <2 x i32> @llvm.gla.queryTextureSize.v2i32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v2f32.v2f32.f32.f32(<4 x float>, i32, <2 x float>, i32, <2 x float>, i32, float, i32, float, i32) nounwind readnone

declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.f32.f32.f32.f32(<4 x float>, i32, float, i32, float, i32, float, i32, float, i32) nounwind readnone

!gla.uniforms = !{!0, !3, !6, !9, !12, !15, !18, !21, !24, !27, !30}
!gla.inputs = !{!33, !35, !37, !39, !41, !43, !45}
!gla.outputs = !{!47}

!0 = metadata !{metadata !"s2D", i32 12, i32 addrspace(1)* @s2D, metadata !1}
!1 = metadata !{i32 5, i32 0, i32 0, metadata !2}
!2 = metadata !{i32 0, i32 addrspace(1)* @s2D, i32 1, i1 false, i1 false, i32 0}
!3 = metadata !{metadata !"s3D", i32 12, i32 addrspace(1)* @s3D, metadata !4}
!4 = metadata !{i32 5, i32 0, i32 0, metadata !5}
!5 = metadata !{i32 0, i32 addrspace(1)* @s3D, i32 2, i1 false, i1 false, i32 0}
!6 = metadata !{metadata !"s2DArray", i32 12, i32 addrspace(1)* @s2DArray, metadata !7}
!7 = metadata !{i32 5, i32 0, i32 0, metadata !8}
!8 = metadata !{i32 0, i32 addrspace(1)* @s2DArray, i32 1, i1 true, i1 false, i32 0}
!9 = metadata !{metadata !"s2DShadow", i32 12, i32 addrspace(1)* @s2DShadow, metadata !10}
!10 = metadata !{i32 5, i32 0, i32 0, metadata !11}
!11 = metadata !{i32 0, i32 addrspace(1)* @s2DShadow, i32 1, i1 false, i1 true, i32 0}
!12 = metadata !{metadata !"sCube", i32 12, i32 addrspace(1)* @sCube, metadata !13}
!13 = metadata !{i32 5, i32 0, i32 0, metadata !14}
!14 = metadata !{i32 0, i32 addrspace(1)* @sCube, i32 3, i1 false, i1 false, i32 0}
!15 = metadata !{metadata !"s2DArrayShadow", i32 12, i32 addrspace(1)* @s2DArrayShadow, metadata !16}
!16 = metadata !{i32 5, i32 0, i32 0, metadata !17}
!17 = metadata !{i32 0, i32 addrspace(1)* @s2DArrayShadow, i32 1, i1 true, i1 true, i32 0}
!18 = metadata !{metadata !"is2D", i32 12, i32 addrspace(1)* @is2D, metadata !19}
!19 = metadata !{i32 5, i32 0, i32 0, metadata !20}
!20 = metadata !{i32 0, i32 addrspace(1)* @is2D, i32 1, i1 false, i1 false, i32 1}
!21 = metadata !{metadata !"is3D", i32 12, i32 addrspace(1)* @is3D, metadata !22}
!22 = metadata !{i32 5, i32 0, i32 0, metadata !23}
!23 = metadata !{i32 0, i32 addrspace(1)* @is3D, i32 2, i1 false, i1 false, i32 1}
!24 = metadata !{metadata !"isCube", i32 12, i32 addrspace(1)* @isCube, metadata !25}
!25 = metadata !{i32 5, i32 0, i32 0, metadata !26}
!26 = metadata !{i32 0, i32 addrspace(1)* @isCube, i32 3, i1 false, i1 false, i32 1}
!27 = metadata !{metadata !"is2DArray", i32 12, i32 addrspace(1)* @is2DArray, metadata !28}
!28 = metadata !{i32 5, i32 0, i32 0, metadata !29}
!29 = metadata !{i32 0, i32 addrspace(1)* @is2DArray, i32 1, i1 true, i1 false, i32 1}
!30 = metadata !{metadata !"sCubeShadow", i32 12, i32 addrspace(1)* @sCubeShadow, metadata !31}
!31 = metadata !{i32 5, i32 0, i32 0, metadata !32}
!32 = metadata !{i32 0, i32 addrspace(1)* @sCubeShadow, i32 3, i1 false, i1 true, i32 0}
!33 = metadata !{metadata !"c2D", i32 1, <2 x float>* @c2D_shadow_typeProxy, metadata !34}
!34 = metadata !{i32 0, i32 0, i32 1024, null}
!35 = metadata !{metadata !"c4D", i32 1, <4 x float>* @c4D_shadow_typeProxy, metadata !36}
!36 = metadata !{i32 0, i32 0, i32 1025, null}
!37 = metadata !{metadata !"c3D", i32 1, <3 x float>* @c3D_shadow_typeProxy, metadata !38}
!38 = metadata !{i32 0, i32 0, i32 1026, null}
!39 = metadata !{metadata !"ic2D", i32 1, <2 x i32>* @ic2D_shadow_typeProxy, metadata !40}
!40 = metadata !{i32 0, i32 0, i32 1027, null}
!41 = metadata !{metadata !"c1D", i32 1, float* @c1D_shadow_typeProxy, metadata !42}
!42 = metadata !{i32 0, i32 0, i32 1028, null}
!43 = metadata !{metadata !"ic3D", i32 1, <3 x i32>* @ic3D_shadow_typeProxy, metadata !44}
!44 = metadata !{i32 0, i32 0, i32 1029, null}
!45 = metadata !{metadata !"ic1D", i32 1, i32* @ic1D_shadow_typeProxy, metadata !46}
!46 = metadata !{i32 0, i32 0, i32 1030, null}
!47 = metadata !{metadata !"FragData", i32 7, <4 x float>* @FragData_shadow_typeProxy, metadata !48}
!48 = metadata !{i32 0, i32 0, i32 1031, null}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 430 core
uniform sampler2D s2D;
uniform sampler3D s3D;
uniform sampler2DArray s2DArray;
uniform sampler2DShadow s2DShadow;
uniform samplerCube sCube;
uniform sampler2DShadowArray s2DArrayShadow;
uniform isampler2D is2D;
uniform isampler3D is3D;
uniform isamplerCube isCube;
uniform isampler2DArray is2DArray;
uniform samplerCubeShadow sCubeShadow;
in vec2 c2D;
in vec4 c4D;
in vec3 c3D;
const float const25f_1 = 1.2;
flat in ivec2 ic2D;
in float c1D;
flat in ivec3 ic3D;
flat in int ic1D;
const int const33i_4 = 4;
const int const43i_2 = 2;
const float const62f_4 = 4.2;
const float const74f_0 = 0.0;
out vec4 FragData;

void main()
{
    vec4 temp21 = texture(s2D, c2D);
    vec4 temp22 = textureProj(s3D, c4D);
    vec4 temp23 = temp21 + temp22;
    vec4 temp24 = textureLod(s2DArray, c3D, const25f_1);
    vec4 temp26 = temp23 + temp24;
    float temp27 = textureOffset(s2DShadow, c3D, ic2D, c1D);
    float temp28 = temp26.y + temp27;
    vec4 temp29 = temp26;
    temp29.y = temp28;
    vec4 temp30 = texelFetch(s3D, ic3D, ic1D);
    vec4 temp31 = temp29 + temp30;
    vec4 temp32 = texelFetchOffset(s2D, ic2D, const33i_4, ic2D);
    vec4 temp34 = temp31 + temp32;
    float temp35 = textureLodOffset(s2DShadow, c3D, c1D, ic2D);
    float temp36 = temp35 + temp34.y;
    vec4 temp37 = temp34;
    temp37.y = temp36;
    vec4 temp38 = textureProjLodOffset(s2D, c3D, c1D, ic2D);
    vec4 temp39 = temp38 + temp37;
    vec4 temp40 = textureGrad(sCube, c3D, c3D, c3D);
    vec4 temp41 = temp40 + temp39;
    ivec2 iv263 = textureSize(sCubeShadow, const43i_2);
    vec2 temp44 = vec2(iv263);
    float temp45 = textureGradOffset(s2DArrayShadow, c4D, c2D, c2D, ic2D);
    float temp46 = temp41.x + temp45;
    vec4 temp47 = textureProjGrad(s3D, c4D, c3D, c3D);
    vec4 temp48 = temp41;
    temp48.x = temp46;
    ivec4 iv37 = texture(is2D, c2D);
    vec4 temp50 = textureProjGradOffset(s2D, c3D, c2D, c2D, ic2D);
    vec4 temp51 = temp47 + temp48;
    ivec4 iv41 = textureProjOffset(is2D, c4D, ic2D);
    vec4 temp53 = vec4(iv37);
    vec4 temp54 = temp51 + temp50;
    ivec4 iv45 = textureProjLod(is2D, c3D, c1D);
    vec4 temp56 = vec4(iv41);
    vec4 temp57 = temp53 + temp54;
    ivec4 iv50 = textureProjGrad(is2D, c3D, c2D, c2D);
    vec4 temp59 = vec4(iv45);
    vec4 temp60 = temp57 + temp56;
    ivec4 iv53 = texture(is3D, c3D, const62f_4);
    vec4 temp63 = vec4(iv50);
    vec4 temp64 = temp60 + temp59;
    ivec4 iv57 = textureLod(isCube, c3D, c1D);
    vec4 temp66 = vec4(iv53);
    vec4 temp67 = temp64 + temp63;
    ivec4 iv61 = texelFetch(is2DArray, ic3D, ic1D);
    vec4 temp69 = vec4(iv57);
    vec4 temp70 = temp67 + temp66;
    vec4 temp71 = vec4(iv61);
    vec4 temp72 = temp70 + temp69;
    vec4 temp73 = vec4(temp44.x, temp44.y, const74f_0, const74f_0);
    vec4 temp75 = temp72 + temp71;
    vec4 FragData_shadow = temp73 + temp75;
    FragData = FragData_shadow;
    
}
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
ERROR: Not all shaders have valid object code.
#### END LINKER INFO LOG ####
