
Top IR:
; ModuleID = 'Top'

@v_shadow = internal global [2 x <2 x float>] zeroinitializer
@FragColor_shadow = internal global <4 x float> zeroinitializer
@u = external addrspace(2) constant [3 x <4 x float>]

define fastcc void @main() {
entry:
  %t = alloca <2 x float>
  %v = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !1
  store <2 x float> %v, <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 0)
  %v1 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1025, i32 -1, i32 1), !gla.input !1
  store <2 x float> %v1, <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 1)
  %0 = load <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 0)
  %v2 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !gla.input !1
  store <2 x float> %v2, <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 0)
  %v3 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1025, i32 -1, i32 1), !gla.input !1
  store <2 x float> %v3, <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 1)
  %1 = load <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 1)
  %t4 = fadd <2 x float> %0, %1
  store <2 x float> %t4, <2 x float>* %t
  store <4 x float> <float 3.000000e+01, float 3.000000e+01, float 3.000000e+01, float 3.000000e+01>, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %2 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> %2), !gla.output !3
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!gla.entrypoint = !{!0}
!gla.inputs = !{!1}
!gla.outputs = !{!3}
!gla.uniforms = !{!5}
!gla.noStaticUse = !{!5}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"v", i32 1, [2 x <2 x float>]* @v_shadow_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!3 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1026, null, i32 0}
!5 = metadata !{metadata !"u", i32 12, [3 x <4 x float>]* @u_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1024, null}


Bottom IR:
; ModuleID = 'Top'

define fastcc void @main() {
entry:
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> <float 3.000000e+01, float 3.000000e+01, float 3.000000e+01, float 3.000000e+01>), !gla.output !3
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!gla.entrypoint = !{!0}
!gla.inputs = !{!1}
!gla.outputs = !{!3}
!gla.uniforms = !{!5}
!gla.noStaticUse = !{!5}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"v", i32 1, [2 x <2 x float>]* @v_shadow_typeProxy, metadata !2}
!2 = metadata !{i32 0, i32 0, i32 1024, null, i32 1}
!3 = metadata !{metadata !"gl_FragColor", i32 7, <4 x float>* @FragColor_shadow_typeProxy, metadata !4}
!4 = metadata !{i32 0, i32 0, i32 1026, null, i32 0}
!5 = metadata !{metadata !"u", i32 12, [3 x <4 x float>]* @u_typeProxy, metadata !6}
!6 = metadata !{i32 0, i32 0, i32 1024, null}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 120
// LunarGOO output (r722)
uniform vec4 u[3];
varying vec2 v[2];
const vec4 const21 = vec4(30.0);

void main()
{
    gl_FragColor = const21;
    
}

!6 = metadata !{i32 0, i32 0, i32 1025, null, i32 1}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####
#version 120
// LunarGOO output (r722)
uniform vec4 u[3];
varying vec2 v[2];
const vec4 const21 = vec4(30.0);

void main()
{
    gl_FragColor = const21;
    
}

