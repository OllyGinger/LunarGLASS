
Top IR:
; ModuleID = 'Top'

@v_shadow = internal global [2 x <2 x float>] zeroinitializer
@FragColor_shadow = internal global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %t = alloca <2 x float>
  %v = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !0
  store <2 x float> %v, <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 0)
  %v1 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1025, i32 -1, i32 1), !input !0
  store <2 x float> %v1, <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 1)
  %0 = load <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 0)
  %v2 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1024, i32 -1, i32 1), !input !0
  store <2 x float> %v2, <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 0)
  %v3 = call <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32 1025, i32 -1, i32 1), !input !0
  store <2 x float> %v3, <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 1)
  %1 = load <2 x float>* getelementptr inbounds ([2 x <2 x float>]* @v_shadow, i32 0, i32 1)
  %t4 = fadd <2 x float> %0, %1
  store <2 x float> %t4, <2 x float>* %t
  store <4 x float> <float 3.000000e+01, float 3.000000e+01, float 3.000000e+01, float 3.000000e+01>, <4 x float>* @FragColor_shadow
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  %2 = load <4 x float>* @FragColor_shadow
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> %2), !output !2
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare <2 x float> @llvm.gla.fReadInterpolant.v2f32(i32, i32, i32) nounwind readnone

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!inputs = !{!0}
!outputs = !{!2}

!0 = metadata !{metadata !"v", i32 7, [2 x <2 x float>]* @v_shadow_typeProxy, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 1024}
!2 = metadata !{metadata !"gl_FragColor", i32 1, <4 x float>* @FragColor_shadow_typeProxy, metadata !3}
!3 = metadata !{i32 0, i32 0, i32 1026}


Bottom IR:
; ModuleID = 'Top'

define fastcc void @main() {
entry:
  call void @llvm.gla.fWriteData.v4f32(i32 1026, i32 -1, <4 x float> <float 3.000000e+01, float 3.000000e+01, float 3.000000e+01, float 3.000000e+01>), !output !2
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

declare void @llvm.gla.fWriteData.v4f32(i32, i32, <4 x float>) nounwind

!inputs = !{!0}
!outputs = !{!2}

!0 = metadata !{metadata !"v", i32 7, [2 x <2 x float>]* @v_shadow_typeProxy, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 1024}
!2 = metadata !{metadata !"gl_FragColor", i32 1, <4 x float>* @FragColor_shadow_typeProxy, metadata !3}
!3 = metadata !{i32 0, i32 0, i32 1026}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 120
const vec4 const21 = vec4(30.0);

void main()
{
    gl_FragColor = const21;
    
}
#### BEGIN COMPILER 0 INFO LOG ####
#### END COMPILER 0 INFO LOG ####
#### BEGIN LINKER INFO LOG ####
#### END LINKER INFO LOG ####

// LunarGOO(r722) output
#version 120
const vec4 const21 = vec4(30.0);

void main()
{
    gl_FragColor = const21;
    
}
